'use strict';var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;$jscomp.ISOLATE_POLYFILLS=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){if(a==Array.prototype||a==Object.prototype)return a;a[b]=c.value;return a};
$jscomp.getGlobal=function(a){a=["object"==typeof globalThis&&globalThis,a,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global];for(var b=0;b<a.length;++b){var c=a[b];if(c&&c.Math==Math)return c}throw Error("Cannot find global object");};$jscomp.global=$jscomp.getGlobal(this);$jscomp.IS_SYMBOL_NATIVE="function"===typeof Symbol&&"symbol"===typeof Symbol("x");$jscomp.TRUST_ES6_POLYFILLS=!$jscomp.ISOLATE_POLYFILLS||$jscomp.IS_SYMBOL_NATIVE;$jscomp.polyfills={};
$jscomp.propertyToPolyfillSymbol={};$jscomp.POLYFILL_PREFIX="$jscp$";var $jscomp$lookupPolyfilledValue=function(a,b){var c=$jscomp.propertyToPolyfillSymbol[b];if(null==c)return a[b];c=a[c];return void 0!==c?c:a[b]};$jscomp.polyfill=function(a,b,c,d){b&&($jscomp.ISOLATE_POLYFILLS?$jscomp.polyfillIsolated(a,b,c,d):$jscomp.polyfillUnisolated(a,b,c,d))};
$jscomp.polyfillUnisolated=function(a,b,c,d){c=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];if(!(e in c))return;c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&$jscomp.defineProperty(c,a,{configurable:!0,writable:!0,value:b})};
$jscomp.polyfillIsolated=function(a,b,c,d){var e=a.split(".");a=1===e.length;d=e[0];d=!a&&d in $jscomp.polyfills?$jscomp.polyfills:$jscomp.global;for(var f=0;f<e.length-1;f++){var h=e[f];if(!(h in d))return;d=d[h]}e=e[e.length-1];c=$jscomp.IS_SYMBOL_NATIVE&&"es6"===c?d[e]:null;b=b(c);null!=b&&(a?$jscomp.defineProperty($jscomp.polyfills,e,{configurable:!0,writable:!0,value:b}):b!==c&&($jscomp.propertyToPolyfillSymbol[e]=$jscomp.IS_SYMBOL_NATIVE?$jscomp.global.Symbol(e):$jscomp.POLYFILL_PREFIX+e,e=
$jscomp.propertyToPolyfillSymbol[e],$jscomp.defineProperty(d,e,{configurable:!0,writable:!0,value:b})))};$jscomp.polyfill("String.prototype.trimLeft",function(a){function b(){return this.replace(/^[\s\xa0]+/,"")}return a||b},"es_2019","es3");void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52));void 0===Number.isInteger&&(Number.isInteger=function(a){return"number"===typeof a&&isFinite(a)&&Math.floor(a)===a});void 0===Math.sign&&(Math.sign=function(a){return 0>a?-1:0<a?1:+a});
!1==="name"in Function.prototype&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}});void 0===Object.assign&&(Object.assign=function(a){if(void 0===a||null===a)throw new TypeError("Cannot convert undefined or null to object");const b=Object(a);for(let c=1;c<arguments.length;c++){const d=arguments[c];if(void 0!==d&&null!==d)for(const e in d)Object.prototype.hasOwnProperty.call(d,e)&&(b[e]=d[e])}return b});
const REVISION$$module$node_modules$three$build$three_module="120",MOUSE$$module$node_modules$three$build$three_module={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},TOUCH$$module$node_modules$three$build$three_module={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},CullFaceNone$$module$node_modules$three$build$three_module=0,CullFaceBack$$module$node_modules$three$build$three_module=1,CullFaceFront$$module$node_modules$three$build$three_module=2,CullFaceFrontBack$$module$node_modules$three$build$three_module=
3,BasicShadowMap$$module$node_modules$three$build$three_module=0,PCFShadowMap$$module$node_modules$three$build$three_module=1,PCFSoftShadowMap$$module$node_modules$three$build$three_module=2,VSMShadowMap$$module$node_modules$three$build$three_module=3,FrontSide$$module$node_modules$three$build$three_module=0,BackSide$$module$node_modules$three$build$three_module=1,DoubleSide$$module$node_modules$three$build$three_module=2,FlatShading$$module$node_modules$three$build$three_module=1,SmoothShading$$module$node_modules$three$build$three_module=
2,NoBlending$$module$node_modules$three$build$three_module=0,NormalBlending$$module$node_modules$three$build$three_module=1,AdditiveBlending$$module$node_modules$three$build$three_module=2,SubtractiveBlending$$module$node_modules$three$build$three_module=3,MultiplyBlending$$module$node_modules$three$build$three_module=4,CustomBlending$$module$node_modules$three$build$three_module=5,AddEquation$$module$node_modules$three$build$three_module=100,SubtractEquation$$module$node_modules$three$build$three_module=
101,ReverseSubtractEquation$$module$node_modules$three$build$three_module=102,MinEquation$$module$node_modules$three$build$three_module=103,MaxEquation$$module$node_modules$three$build$three_module=104,ZeroFactor$$module$node_modules$three$build$three_module=200,OneFactor$$module$node_modules$three$build$three_module=201,SrcColorFactor$$module$node_modules$three$build$three_module=202,OneMinusSrcColorFactor$$module$node_modules$three$build$three_module=203,SrcAlphaFactor$$module$node_modules$three$build$three_module=
204,OneMinusSrcAlphaFactor$$module$node_modules$three$build$three_module=205,DstAlphaFactor$$module$node_modules$three$build$three_module=206,OneMinusDstAlphaFactor$$module$node_modules$three$build$three_module=207,DstColorFactor$$module$node_modules$three$build$three_module=208,OneMinusDstColorFactor$$module$node_modules$three$build$three_module=209,SrcAlphaSaturateFactor$$module$node_modules$three$build$three_module=210,NeverDepth$$module$node_modules$three$build$three_module=0,AlwaysDepth$$module$node_modules$three$build$three_module=
1,LessDepth$$module$node_modules$three$build$three_module=2,LessEqualDepth$$module$node_modules$three$build$three_module=3,EqualDepth$$module$node_modules$three$build$three_module=4,GreaterEqualDepth$$module$node_modules$three$build$three_module=5,GreaterDepth$$module$node_modules$three$build$three_module=6,NotEqualDepth$$module$node_modules$three$build$three_module=7,MultiplyOperation$$module$node_modules$three$build$three_module=0,MixOperation$$module$node_modules$three$build$three_module=1,AddOperation$$module$node_modules$three$build$three_module=
2,NoToneMapping$$module$node_modules$three$build$three_module=0,LinearToneMapping$$module$node_modules$three$build$three_module=1,ReinhardToneMapping$$module$node_modules$three$build$three_module=2,CineonToneMapping$$module$node_modules$three$build$three_module=3,ACESFilmicToneMapping$$module$node_modules$three$build$three_module=4,CustomToneMapping$$module$node_modules$three$build$three_module=5,UVMapping$$module$node_modules$three$build$three_module=300,CubeReflectionMapping$$module$node_modules$three$build$three_module=
301,CubeRefractionMapping$$module$node_modules$three$build$three_module=302,EquirectangularReflectionMapping$$module$node_modules$three$build$three_module=303,EquirectangularRefractionMapping$$module$node_modules$three$build$three_module=304,CubeUVReflectionMapping$$module$node_modules$three$build$three_module=306,CubeUVRefractionMapping$$module$node_modules$three$build$three_module=307,RepeatWrapping$$module$node_modules$three$build$three_module=1E3,ClampToEdgeWrapping$$module$node_modules$three$build$three_module=
1001,MirroredRepeatWrapping$$module$node_modules$three$build$three_module=1002,NearestFilter$$module$node_modules$three$build$three_module=1003,NearestMipmapNearestFilter$$module$node_modules$three$build$three_module=1004,NearestMipMapNearestFilter$$module$node_modules$three$build$three_module=1004,NearestMipmapLinearFilter$$module$node_modules$three$build$three_module=1005,NearestMipMapLinearFilter$$module$node_modules$three$build$three_module=1005,LinearFilter$$module$node_modules$three$build$three_module=
1006,LinearMipmapNearestFilter$$module$node_modules$three$build$three_module=1007,LinearMipMapNearestFilter$$module$node_modules$three$build$three_module=1007,LinearMipmapLinearFilter$$module$node_modules$three$build$three_module=1008,LinearMipMapLinearFilter$$module$node_modules$three$build$three_module=1008,UnsignedByteType$$module$node_modules$three$build$three_module=1009,ByteType$$module$node_modules$three$build$three_module=1010,ShortType$$module$node_modules$three$build$three_module=1011,UnsignedShortType$$module$node_modules$three$build$three_module=
1012,IntType$$module$node_modules$three$build$three_module=1013,UnsignedIntType$$module$node_modules$three$build$three_module=1014,FloatType$$module$node_modules$three$build$three_module=1015,HalfFloatType$$module$node_modules$three$build$three_module=1016,UnsignedShort4444Type$$module$node_modules$three$build$three_module=1017,UnsignedShort5551Type$$module$node_modules$three$build$three_module=1018,UnsignedShort565Type$$module$node_modules$three$build$three_module=1019,UnsignedInt248Type$$module$node_modules$three$build$three_module=
1020,AlphaFormat$$module$node_modules$three$build$three_module=1021,RGBFormat$$module$node_modules$three$build$three_module=1022,RGBAFormat$$module$node_modules$three$build$three_module=1023,LuminanceFormat$$module$node_modules$three$build$three_module=1024,LuminanceAlphaFormat$$module$node_modules$three$build$three_module=1025,RGBEFormat$$module$node_modules$three$build$three_module=RGBAFormat$$module$node_modules$three$build$three_module,DepthFormat$$module$node_modules$three$build$three_module=
1026,DepthStencilFormat$$module$node_modules$three$build$three_module=1027,RedFormat$$module$node_modules$three$build$three_module=1028,RedIntegerFormat$$module$node_modules$three$build$three_module=1029,RGFormat$$module$node_modules$three$build$three_module=1030,RGIntegerFormat$$module$node_modules$three$build$three_module=1031,RGBIntegerFormat$$module$node_modules$three$build$three_module=1032,RGBAIntegerFormat$$module$node_modules$three$build$three_module=1033,RGB_S3TC_DXT1_Format$$module$node_modules$three$build$three_module=
33776,RGBA_S3TC_DXT1_Format$$module$node_modules$three$build$three_module=33777,RGBA_S3TC_DXT3_Format$$module$node_modules$three$build$three_module=33778,RGBA_S3TC_DXT5_Format$$module$node_modules$three$build$three_module=33779,RGB_PVRTC_4BPPV1_Format$$module$node_modules$three$build$three_module=35840,RGB_PVRTC_2BPPV1_Format$$module$node_modules$three$build$three_module=35841,RGBA_PVRTC_4BPPV1_Format$$module$node_modules$three$build$three_module=35842,RGBA_PVRTC_2BPPV1_Format$$module$node_modules$three$build$three_module=
35843,RGB_ETC1_Format$$module$node_modules$three$build$three_module=36196,RGB_ETC2_Format$$module$node_modules$three$build$three_module=37492,RGBA_ETC2_EAC_Format$$module$node_modules$three$build$three_module=37496,RGBA_ASTC_4x4_Format$$module$node_modules$three$build$three_module=37808,RGBA_ASTC_5x4_Format$$module$node_modules$three$build$three_module=37809,RGBA_ASTC_5x5_Format$$module$node_modules$three$build$three_module=37810,RGBA_ASTC_6x5_Format$$module$node_modules$three$build$three_module=
37811,RGBA_ASTC_6x6_Format$$module$node_modules$three$build$three_module=37812,RGBA_ASTC_8x5_Format$$module$node_modules$three$build$three_module=37813,RGBA_ASTC_8x6_Format$$module$node_modules$three$build$three_module=37814,RGBA_ASTC_8x8_Format$$module$node_modules$three$build$three_module=37815,RGBA_ASTC_10x5_Format$$module$node_modules$three$build$three_module=37816,RGBA_ASTC_10x6_Format$$module$node_modules$three$build$three_module=37817,RGBA_ASTC_10x8_Format$$module$node_modules$three$build$three_module=
37818,RGBA_ASTC_10x10_Format$$module$node_modules$three$build$three_module=37819,RGBA_ASTC_12x10_Format$$module$node_modules$three$build$three_module=37820,RGBA_ASTC_12x12_Format$$module$node_modules$three$build$three_module=37821,RGBA_BPTC_Format$$module$node_modules$three$build$three_module=36492,SRGB8_ALPHA8_ASTC_4x4_Format$$module$node_modules$three$build$three_module=37840,SRGB8_ALPHA8_ASTC_5x4_Format$$module$node_modules$three$build$three_module=37841,SRGB8_ALPHA8_ASTC_5x5_Format$$module$node_modules$three$build$three_module=
37842,SRGB8_ALPHA8_ASTC_6x5_Format$$module$node_modules$three$build$three_module=37843,SRGB8_ALPHA8_ASTC_6x6_Format$$module$node_modules$three$build$three_module=37844,SRGB8_ALPHA8_ASTC_8x5_Format$$module$node_modules$three$build$three_module=37845,SRGB8_ALPHA8_ASTC_8x6_Format$$module$node_modules$three$build$three_module=37846,SRGB8_ALPHA8_ASTC_8x8_Format$$module$node_modules$three$build$three_module=37847,SRGB8_ALPHA8_ASTC_10x5_Format$$module$node_modules$three$build$three_module=37848,SRGB8_ALPHA8_ASTC_10x6_Format$$module$node_modules$three$build$three_module=
37849,SRGB8_ALPHA8_ASTC_10x8_Format$$module$node_modules$three$build$three_module=37850,SRGB8_ALPHA8_ASTC_10x10_Format$$module$node_modules$three$build$three_module=37851,SRGB8_ALPHA8_ASTC_12x10_Format$$module$node_modules$three$build$three_module=37852,SRGB8_ALPHA8_ASTC_12x12_Format$$module$node_modules$three$build$three_module=37853,LoopOnce$$module$node_modules$three$build$three_module=2200,LoopRepeat$$module$node_modules$three$build$three_module=2201,LoopPingPong$$module$node_modules$three$build$three_module=
2202,InterpolateDiscrete$$module$node_modules$three$build$three_module=2300,InterpolateLinear$$module$node_modules$three$build$three_module=2301,InterpolateSmooth$$module$node_modules$three$build$three_module=2302,ZeroCurvatureEnding$$module$node_modules$three$build$three_module=2400,ZeroSlopeEnding$$module$node_modules$three$build$three_module=2401,WrapAroundEnding$$module$node_modules$three$build$three_module=2402,NormalAnimationBlendMode$$module$node_modules$three$build$three_module=2500,AdditiveAnimationBlendMode$$module$node_modules$three$build$three_module=
2501,TrianglesDrawMode$$module$node_modules$three$build$three_module=0,TriangleStripDrawMode$$module$node_modules$three$build$three_module=1,TriangleFanDrawMode$$module$node_modules$three$build$three_module=2,LinearEncoding$$module$node_modules$three$build$three_module=3E3,sRGBEncoding$$module$node_modules$three$build$three_module=3001,GammaEncoding$$module$node_modules$three$build$three_module=3007,RGBEEncoding$$module$node_modules$three$build$three_module=3002,LogLuvEncoding$$module$node_modules$three$build$three_module=
3003,RGBM7Encoding$$module$node_modules$three$build$three_module=3004,RGBM16Encoding$$module$node_modules$three$build$three_module=3005,RGBDEncoding$$module$node_modules$three$build$three_module=3006,BasicDepthPacking$$module$node_modules$three$build$three_module=3200,RGBADepthPacking$$module$node_modules$three$build$three_module=3201,TangentSpaceNormalMap$$module$node_modules$three$build$three_module=0,ObjectSpaceNormalMap$$module$node_modules$three$build$three_module=1,ZeroStencilOp$$module$node_modules$three$build$three_module=
0,KeepStencilOp$$module$node_modules$three$build$three_module=7680,ReplaceStencilOp$$module$node_modules$three$build$three_module=7681,IncrementStencilOp$$module$node_modules$three$build$three_module=7682,DecrementStencilOp$$module$node_modules$three$build$three_module=7683,IncrementWrapStencilOp$$module$node_modules$three$build$three_module=34055,DecrementWrapStencilOp$$module$node_modules$three$build$three_module=34056,InvertStencilOp$$module$node_modules$three$build$three_module=5386,NeverStencilFunc$$module$node_modules$three$build$three_module=
512,LessStencilFunc$$module$node_modules$three$build$three_module=513,EqualStencilFunc$$module$node_modules$three$build$three_module=514,LessEqualStencilFunc$$module$node_modules$three$build$three_module=515,GreaterStencilFunc$$module$node_modules$three$build$three_module=516,NotEqualStencilFunc$$module$node_modules$three$build$three_module=517,GreaterEqualStencilFunc$$module$node_modules$three$build$three_module=518,AlwaysStencilFunc$$module$node_modules$three$build$three_module=519,StaticDrawUsage$$module$node_modules$three$build$three_module=
35044,DynamicDrawUsage$$module$node_modules$three$build$three_module=35048,StreamDrawUsage$$module$node_modules$three$build$three_module=35040,StaticReadUsage$$module$node_modules$three$build$three_module=35045,DynamicReadUsage$$module$node_modules$three$build$three_module=35049,StreamReadUsage$$module$node_modules$three$build$three_module=35041,StaticCopyUsage$$module$node_modules$three$build$three_module=35046,DynamicCopyUsage$$module$node_modules$three$build$three_module=35050,StreamCopyUsage$$module$node_modules$three$build$three_module=
35042,GLSL1$$module$node_modules$three$build$three_module="100",GLSL3$$module$node_modules$three$build$three_module="300 es";function EventDispatcher$$module$node_modules$three$build$three_module(){}
Object.assign(EventDispatcher$$module$node_modules$three$build$three_module.prototype,{addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});const c=this._listeners;void 0===c[a]&&(c[a]=[]);-1===c[a].indexOf(b)&&c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;const c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)},removeEventListener:function(a,b){void 0!==this._listeners&&(a=this._listeners[a],void 0!==a&&(b=a.indexOf(b),-1!==
b&&a.splice(b,1)))},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners[a.type];if(void 0!==b){a.target=this;b=b.slice(0);for(let c=0,d=b.length;c<d;c++)b[c].call(this,a)}}}});const _lut$$module$node_modules$three$build$three_module=[];for(let a=0;256>a;a++)_lut$$module$node_modules$three$build$three_module[a]=(16>a?"0":"")+a.toString(16);let _seed$$module$node_modules$three$build$three_module=1234567;
const MathUtils$$module$node_modules$three$build$three_module={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const a=4294967295*Math.random()|0,b=4294967295*Math.random()|0,c=4294967295*Math.random()|0,d=4294967295*Math.random()|0;return(_lut$$module$node_modules$three$build$three_module[a&255]+_lut$$module$node_modules$three$build$three_module[a>>8&255]+_lut$$module$node_modules$three$build$three_module[a>>16&255]+_lut$$module$node_modules$three$build$three_module[a>>24&255]+"-"+
_lut$$module$node_modules$three$build$three_module[b&255]+_lut$$module$node_modules$three$build$three_module[b>>8&255]+"-"+_lut$$module$node_modules$three$build$three_module[b>>16&15|64]+_lut$$module$node_modules$three$build$three_module[b>>24&255]+"-"+_lut$$module$node_modules$three$build$three_module[c&63|128]+_lut$$module$node_modules$three$build$three_module[c>>8&255]+"-"+_lut$$module$node_modules$three$build$three_module[c>>16&255]+_lut$$module$node_modules$three$build$three_module[c>>24&255]+
_lut$$module$node_modules$three$build$three_module[d&255]+_lut$$module$node_modules$three$build$three_module[d>>8&255]+_lut$$module$node_modules$three$build$three_module[d>>16&255]+_lut$$module$node_modules$three$build$three_module[d>>24&255]).toUpperCase()},clamp:function(a,b,c){return Math.max(b,Math.min(c,a))},euclideanModulo:function(a,b){return(a%b+b)%b},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},lerp:function(a,b,c){return(1-c)*a+c*b},smoothstep:function(a,b,c){if(a<=b)return 0;
if(a>=c)return 1;a=(a-b)/(c-b);return a*a*(3-2*a)},smootherstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*a*(a*(6*a-15)+10)},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},seededRandom:function(a){void 0!==a&&(_seed$$module$node_modules$three$build$three_module=a%2147483647);_seed$$module$node_modules$three$build$three_module=16807*_seed$$module$node_modules$three$build$three_module%
2147483647;return(_seed$$module$node_modules$three$build$three_module-1)/2147483646},degToRad:function(a){return a*MathUtils$$module$node_modules$three$build$three_module.DEG2RAD},radToDeg:function(a){return a*MathUtils$$module$node_modules$three$build$three_module.RAD2DEG},isPowerOfTwo:function(a){return 0===(a&a-1)&&0!==a},ceilPowerOfTwo:function(a){return Math.pow(2,Math.ceil(Math.log(a)/Math.LN2))},floorPowerOfTwo:function(a){return Math.pow(2,Math.floor(Math.log(a)/Math.LN2))},setQuaternionFromProperEuler:function(a,
b,c,d,e){var f=Math.cos;const h=Math.sin,g=f(c/2);c=h(c/2);const k=f((b+d)/2),n=h((b+d)/2),w=f((b-d)/2),v=h((b-d)/2);f=f((d-b)/2);b=h((d-b)/2);switch(e){case "XYX":a.set(g*n,c*w,c*v,g*k);break;case "YZY":a.set(c*v,g*n,c*w,g*k);break;case "ZXZ":a.set(c*w,c*v,g*n,g*k);break;case "XZX":a.set(g*n,c*b,c*f,g*k);break;case "YXY":a.set(c*f,g*n,c*b,g*k);break;case "ZYZ":a.set(c*b,c*f,g*n,g*k);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+e)}}};
class Vector2$$module$node_modules$three$build$three_module{constructor(a=0,b=0){Object.defineProperty(this,"isVector2",{value:!0});this.x=a;this.y=b}get width(){return this.x}set width(a){this.x=a}get height(){return this.y}set height(a){this.y=a}set(a,b){this.x=a;this.y=b;return this}setScalar(a){this.y=this.x=a;return this}setX(a){this.x=a;return this}setY(a){this.y=a;return this}setComponent(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+
a);}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a);}}clone(){return new this.constructor(this.x,this.y)}copy(a){this.x=a.x;this.y=a.y;return this}add(a,b){if(void 0!==b)return console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this}addScalar(a){this.x+=a;this.y+=a;return this}addVectors(a,b){this.x=a.x+b.x;this.y=a.y+
b.y;return this}addScaledVector(a,b){this.x+=a.x*b;this.y+=a.y*b;return this}sub(a,b){if(void 0!==b)return console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;return this}subScalar(a){this.x-=a;this.y-=a;return this}subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this}multiply(a){this.x*=a.x;this.y*=a.y;return this}multiplyScalar(a){this.x*=a;this.y*=a;return this}divide(a){this.x/=a.x;this.y/=a.y;
return this}divideScalar(a){return this.multiplyScalar(1/a)}applyMatrix3(a){const b=this.x,c=this.y;a=a.elements;this.x=a[0]*b+a[3]*c+a[6];this.y=a[1]*b+a[4]*c+a[7];return this}min(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);return this}max(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);return this}clamp(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));return this}clampScalar(a,b){this.x=Math.max(a,Math.min(b,this.x));this.y=Math.max(a,
Math.min(b,this.y));return this}clampLength(a,b){const c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))}floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this}ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this}round(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this}roundToZero(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this}negate(){this.x=
-this.x;this.y=-this.y;return this}dot(a){return this.x*a.x+this.y*a.y}cross(a){return this.x*a.y-this.y*a.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(a){return Math.sqrt(this.distanceToSquared(a))}distanceToSquared(a){const b=this.x-a.x;a=this.y-a.y;return b*b+a*a}manhattanDistanceTo(a){return Math.abs(this.x-
a.x)+Math.abs(this.y-a.y)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this}lerpVectors(a,b,c){this.x=a.x+(b.x-a.x)*c;this.y=a.y+(b.y-a.y)*c;return this}equals(a){return a.x===this.x&&a.y===this.y}fromArray(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];return this}toArray(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;return a}fromBufferAttribute(a,b,c){void 0!==c&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute().");
this.x=a.getX(b);this.y=a.getY(b);return this}rotateAround(a,b){const c=Math.cos(b);b=Math.sin(b);const d=this.x-a.x,e=this.y-a.y;this.x=d*c-e*b+a.x;this.y=d*b+e*c+a.y;return this}random(){this.x=Math.random();this.y=Math.random();return this}}
class Matrix3$$module$node_modules$three$build$three_module{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0});this.elements=[1,0,0,0,1,0,0,0,1];0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(a,b,c,d,e,f,h,g,k){const n=this.elements;n[0]=a;n[1]=d;n[2]=h;n[3]=b;n[4]=e;n[5]=g;n[6]=c;n[7]=f;n[8]=k;return this}identity(){this.set(1,0,0,0,1,0,0,0,1);return this}clone(){return(new this.constructor).fromArray(this.elements)}copy(a){const b=
this.elements;a=a.elements;b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];return this}extractBasis(a,b,c){a.setFromMatrix3Column(this,0);b.setFromMatrix3Column(this,1);c.setFromMatrix3Column(this,2);return this}setFromMatrix4(a){a=a.elements;this.set(a[0],a[4],a[8],a[1],a[5],a[9],a[2],a[6],a[10]);return this}multiply(a){return this.multiplyMatrices(this,a)}premultiply(a){return this.multiplyMatrices(a,this)}multiplyMatrices(a,b){var c=a.elements,d=b.elements;
b=this.elements;a=c[0];const e=c[3],f=c[6],h=c[1],g=c[4],k=c[7],n=c[2],w=c[5];c=c[8];const v=d[0],x=d[3],z=d[6],F=d[1],N=d[4],p=d[7],A=d[2],G=d[5];d=d[8];b[0]=a*v+e*F+f*A;b[3]=a*x+e*N+f*G;b[6]=a*z+e*p+f*d;b[1]=h*v+g*F+k*A;b[4]=h*x+g*N+k*G;b[7]=h*z+g*p+k*d;b[2]=n*v+w*F+c*A;b[5]=n*x+w*N+c*G;b[8]=n*z+w*p+c*d;return this}multiplyScalar(a){const b=this.elements;b[0]*=a;b[3]*=a;b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this}determinant(){var a=this.elements;const b=a[0],c=a[1],d=a[2],
e=a[3],f=a[4],h=a[5],g=a[6],k=a[7];a=a[8];return b*f*a-b*h*k-c*e*a+c*h*g+d*e*k-d*f*g}getInverse(a,b){void 0!==b&&console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");var c=a.elements;a=this.elements;b=c[0];const d=c[1],e=c[2],f=c[3],h=c[4],g=c[5],k=c[6],n=c[7];c=c[8];const w=c*h-g*n,v=g*k-c*f,x=n*f-h*k;var z=b*w+d*v+e*x;if(0===z)return this.set(0,0,0,0,0,0,0,0,0);z=1/z;a[0]=w*z;a[1]=(e*n-c*d)*z;a[2]=(g*d-e*h)*z;a[3]=v*z;a[4]=(c*b-e*k)*z;a[5]=(e*f-g*b)*z;
a[6]=x*z;a[7]=(d*k-n*b)*z;a[8]=(h*b-d*f)*z;return this}transpose(){let a;const b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this}getNormalMatrix(a){return this.setFromMatrix4(a).getInverse(this).transpose()}transposeIntoArray(a){const b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}setUvTransform(a,b,c,d,e,f,h){const g=Math.cos(e);e=Math.sin(e);this.set(c*g,c*e,-c*(g*f+e*h)+f+a,
-d*e,d*g,-d*(-e*f+g*h)+h+b,0,0,1)}scale(a,b){const c=this.elements;c[0]*=a;c[3]*=a;c[6]*=a;c[1]*=b;c[4]*=b;c[7]*=b;return this}rotate(a){const b=Math.cos(a);a=Math.sin(a);const c=this.elements,d=c[0],e=c[3],f=c[6],h=c[1],g=c[4],k=c[7];c[0]=b*d+a*h;c[3]=b*e+a*g;c[6]=b*f+a*k;c[1]=-a*d+b*h;c[4]=-a*e+b*g;c[7]=-a*f+b*k;return this}translate(a,b){const c=this.elements;c[0]+=a*c[2];c[3]+=a*c[5];c[6]+=a*c[8];c[1]+=b*c[2];c[4]+=b*c[5];c[7]+=b*c[8];return this}equals(a){const b=this.elements;a=a.elements;for(let c=
0;9>c;c++)if(b[c]!==a[c])return!1;return!0}fromArray(a,b){void 0===b&&(b=0);for(let c=0;9>c;c++)this.elements[c]=a[c+b];return this}toArray(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);const c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];return a}}let _canvas$$module$node_modules$three$build$three_module;
const ImageUtils$$module$node_modules$three$build$three_module={getDataURL:function(a){if(/^data:/i.test(a.src)||"undefined"==typeof HTMLCanvasElement)return a.src;if(!(a instanceof HTMLCanvasElement)){void 0===_canvas$$module$node_modules$three$build$three_module&&(_canvas$$module$node_modules$three$build$three_module=document.createElementNS("http://www.w3.org/1999/xhtml","canvas"));_canvas$$module$node_modules$three$build$three_module.width=a.width;_canvas$$module$node_modules$three$build$three_module.height=
a.height;const b=_canvas$$module$node_modules$three$build$three_module.getContext("2d");a instanceof ImageData?b.putImageData(a,0,0):b.drawImage(a,0,0,a.width,a.height);a=_canvas$$module$node_modules$three$build$three_module}return 2048<a.width||2048<a.height?a.toDataURL("image/jpeg",.6):a.toDataURL("image/png")}};let textureId$$module$node_modules$three$build$three_module=0;
function Texture$$module$node_modules$three$build$three_module(a,b,c,d,e,f,h,g,k,n){Object.defineProperty(this,"id",{value:textureId$$module$node_modules$three$build$three_module++});this.uuid=MathUtils$$module$node_modules$three$build$three_module.generateUUID();this.name="";this.image=void 0!==a?a:Texture$$module$node_modules$three$build$three_module.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==b?b:Texture$$module$node_modules$three$build$three_module.DEFAULT_MAPPING;this.wrapS=void 0!==
c?c:ClampToEdgeWrapping$$module$node_modules$three$build$three_module;this.wrapT=void 0!==d?d:ClampToEdgeWrapping$$module$node_modules$three$build$three_module;this.magFilter=void 0!==e?e:LinearFilter$$module$node_modules$three$build$three_module;this.minFilter=void 0!==f?f:LinearMipmapLinearFilter$$module$node_modules$three$build$three_module;this.anisotropy=void 0!==k?k:1;this.format=void 0!==h?h:RGBAFormat$$module$node_modules$three$build$three_module;this.internalFormat=null;this.type=void 0!==
g?g:UnsignedByteType$$module$node_modules$three$build$three_module;this.offset=new Vector2$$module$node_modules$three$build$three_module(0,0);this.repeat=new Vector2$$module$node_modules$three$build$three_module(1,1);this.center=new Vector2$$module$node_modules$three$build$three_module(0,0);this.rotation=0;this.matrixAutoUpdate=!0;this.matrix=new Matrix3$$module$node_modules$three$build$three_module;this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.encoding=
void 0!==n?n:LinearEncoding$$module$node_modules$three$build$three_module;this.version=0;this.onUpdate=null}Texture$$module$node_modules$three$build$three_module.DEFAULT_IMAGE=void 0;Texture$$module$node_modules$three$build$three_module.DEFAULT_MAPPING=UVMapping$$module$node_modules$three$build$three_module;
Texture$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(EventDispatcher$$module$node_modules$three$build$three_module.prototype),{constructor:Texture$$module$node_modules$three$build$three_module,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.name=a.name;this.image=a.image;
this.mipmaps=a.mipmaps.slice(0);this.mapping=a.mapping;this.wrapS=a.wrapS;this.wrapT=a.wrapT;this.magFilter=a.magFilter;this.minFilter=a.minFilter;this.anisotropy=a.anisotropy;this.format=a.format;this.internalFormat=a.internalFormat;this.type=a.type;this.offset.copy(a.offset);this.repeat.copy(a.repeat);this.center.copy(a.center);this.rotation=a.rotation;this.matrixAutoUpdate=a.matrixAutoUpdate;this.matrix.copy(a.matrix);this.generateMipmaps=a.generateMipmaps;this.premultiplyAlpha=a.premultiplyAlpha;
this.flipY=a.flipY;this.unpackAlignment=a.unpackAlignment;this.encoding=a.encoding;return this},toJSON:function(a){const b=void 0===a||"string"===typeof a;if(!b&&void 0!==a.textures[this.uuid])return a.textures[this.uuid];const c={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],
format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const d=this.image;void 0===d.uuid&&(d.uuid=MathUtils$$module$node_modules$three$build$three_module.generateUUID());if(!b&&void 0===a.images[d.uuid]){let e;if(Array.isArray(d)){e=[];for(let f=0,h=d.length;f<h;f++)e.push(ImageUtils$$module$node_modules$three$build$three_module.getDataURL(d[f]))}else e=
ImageUtils$$module$node_modules$three$build$three_module.getDataURL(d);a.images[d.uuid]={uuid:d.uuid,url:e}}c.image=d.uuid}b||(a.textures[this.uuid]=c);return c},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(a){if(this.mapping!==UVMapping$$module$node_modules$three$build$three_module)return a;a.applyMatrix3(this.matrix);if(0>a.x||1<a.x)switch(this.wrapS){case RepeatWrapping$$module$node_modules$three$build$three_module:a.x-=Math.floor(a.x);break;case ClampToEdgeWrapping$$module$node_modules$three$build$three_module:a.x=
0>a.x?0:1;break;case MirroredRepeatWrapping$$module$node_modules$three$build$three_module:a.x=1===Math.abs(Math.floor(a.x)%2)?Math.ceil(a.x)-a.x:a.x-Math.floor(a.x)}if(0>a.y||1<a.y)switch(this.wrapT){case RepeatWrapping$$module$node_modules$three$build$three_module:a.y-=Math.floor(a.y);break;case ClampToEdgeWrapping$$module$node_modules$three$build$three_module:a.y=0>a.y?0:1;break;case MirroredRepeatWrapping$$module$node_modules$three$build$three_module:a.y=1===Math.abs(Math.floor(a.y)%2)?Math.ceil(a.y)-
a.y:a.y-Math.floor(a.y)}this.flipY&&(a.y=1-a.y);return a}});Object.defineProperty(Texture$$module$node_modules$three$build$three_module.prototype,"needsUpdate",{set:function(a){!0===a&&this.version++}});
class Vector4$$module$node_modules$three$build$three_module{constructor(a=0,b=0,c=0,d=1){Object.defineProperty(this,"isVector4",{value:!0});this.x=a;this.y=b;this.z=c;this.w=d}get width(){return this.z}set width(a){this.z=a}get height(){return this.w}set height(a){this.w=a}set(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this}setScalar(a){this.w=this.z=this.y=this.x=a;return this}setX(a){this.x=a;return this}setY(a){this.y=a;return this}setZ(a){this.z=a;return this}setW(a){this.w=a;return this}setComponent(a,
b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a);}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a);}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this}add(a,b){if(void 0!==b)return console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this}addScalar(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this}addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this}addScaledVector(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;this.w+=a.w*b;return this}sub(a,b){if(void 0!==b)return console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=
a.z;this.w-=a.w;return this}subScalar(a){this.x-=a;this.y-=a;this.z-=a;this.w-=a;return this}subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this}multiplyScalar(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this}applyMatrix4(a){const b=this.x,c=this.y,d=this.z,e=this.w;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this}divideScalar(a){return this.multiplyScalar(1/
a)}setAxisAngleFromQuaternion(a){this.w=2*Math.acos(a.w);const b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this}setAxisAngleFromRotationMatrix(a){a=a.elements;var b=a[0];var c=a[4];var d=a[8];const e=a[1];var f=a[5],h=a[9];var g=a[2];var k=a[6];var n=a[10];if(.01>Math.abs(c-e)&&.01>Math.abs(d-g)&&.01>Math.abs(h-k)){if(.1>Math.abs(c+e)&&.1>Math.abs(d+g)&&.1>Math.abs(h+k)&&.1>Math.abs(b+f+n-3))return this.set(1,0,0,0),this;a=Math.PI;b=(b+
1)/2;f=(f+1)/2;n=(n+1)/2;c=(c+e)/4;d=(d+g)/4;h=(h+k)/4;b>f&&b>n?.01>b?(k=0,c=g=.707106781):(k=Math.sqrt(b),g=c/k,c=d/k):f>n?.01>f?(k=.707106781,g=0,c=.707106781):(g=Math.sqrt(f),k=c/g,c=h/g):.01>n?(g=k=.707106781,c=0):(c=Math.sqrt(n),k=d/c,g=h/c);this.set(k,g,c,a);return this}a=Math.sqrt((k-h)*(k-h)+(d-g)*(d-g)+(e-c)*(e-c));.001>Math.abs(a)&&(a=1);this.x=(k-h)/a;this.y=(d-g)/a;this.z=(e-c)/a;this.w=Math.acos((b+f+n-1)/2);return this}min(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=
Math.min(this.z,a.z);this.w=Math.min(this.w,a.w);return this}max(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=Math.max(this.z,a.z);this.w=Math.max(this.w,a.w);return this}clamp(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));this.z=Math.max(a.z,Math.min(b.z,this.z));this.w=Math.max(a.w,Math.min(b.w,this.w));return this}clampScalar(a,b){this.x=Math.max(a,Math.min(b,this.x));this.y=Math.max(a,Math.min(b,this.y));this.z=Math.max(a,Math.min(b,
this.z));this.w=Math.max(a,Math.min(b,this.w));return this}clampLength(a,b){const c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))}floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this}ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this}round(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=
Math.round(this.w);return this}roundToZero(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);return this}negate(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this}dot(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*
this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this}lerpVectors(a,b,c){this.x=a.x+(b.x-a.x)*c;this.y=a.y+(b.y-a.y)*c;this.z=a.z+(b.z-a.z)*c;this.w=a.w+(b.w-a.w)*c;return this}equals(a){return a.x===
this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w}fromArray(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];this.w=a[b+3];return this}toArray(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;a[b+3]=this.w;return a}fromBufferAttribute(a,b,c){void 0!==c&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute().");this.x=a.getX(b);this.y=a.getY(b);this.z=a.getZ(b);this.w=a.getW(b);return this}random(){this.x=Math.random();this.y=
Math.random();this.z=Math.random();this.w=Math.random();return this}}
function WebGLRenderTarget$$module$node_modules$three$build$three_module(a,b,c){this.width=a;this.height=b;this.scissor=new Vector4$$module$node_modules$three$build$three_module(0,0,a,b);this.scissorTest=!1;this.viewport=new Vector4$$module$node_modules$three$build$three_module(0,0,a,b);c=c||{};this.texture=new Texture$$module$node_modules$three$build$three_module(void 0,c.mapping,c.wrapS,c.wrapT,c.magFilter,c.minFilter,c.format,c.type,c.anisotropy,c.encoding);this.texture.image={};this.texture.image.width=
a;this.texture.image.height=b;this.texture.generateMipmaps=void 0!==c.generateMipmaps?c.generateMipmaps:!1;this.texture.minFilter=void 0!==c.minFilter?c.minFilter:LinearFilter$$module$node_modules$three$build$three_module;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!1;this.depthTexture=void 0!==c.depthTexture?c.depthTexture:null}
WebGLRenderTarget$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(EventDispatcher$$module$node_modules$three$build$three_module.prototype),{constructor:WebGLRenderTarget$$module$node_modules$three$build$three_module,isWebGLRenderTarget:!0,setSize:function(a,b){if(this.width!==a||this.height!==b)this.width=a,this.height=b,this.texture.image.width=a,this.texture.image.height=b,this.dispose();this.viewport.set(0,0,a,b);this.scissor.set(0,0,a,b)},clone:function(){return(new this.constructor).copy(this)},
copy:function(a){this.width=a.width;this.height=a.height;this.viewport.copy(a.viewport);this.texture=a.texture.clone();this.depthBuffer=a.depthBuffer;this.stencilBuffer=a.stencilBuffer;this.depthTexture=a.depthTexture;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});function WebGLMultisampleRenderTarget$$module$node_modules$three$build$three_module(a,b,c){WebGLRenderTarget$$module$node_modules$three$build$three_module.call(this,a,b,c);this.samples=4}
WebGLMultisampleRenderTarget$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(WebGLRenderTarget$$module$node_modules$three$build$three_module.prototype),{constructor:WebGLMultisampleRenderTarget$$module$node_modules$three$build$three_module,isWebGLMultisampleRenderTarget:!0,copy:function(a){WebGLRenderTarget$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.samples=a.samples;return this}});
class Quaternion$$module$node_modules$three$build$three_module{constructor(a=0,b=0,c=0,d=1){Object.defineProperty(this,"isQuaternion",{value:!0});this._x=a;this._y=b;this._z=c;this._w=d}static slerp(a,b,c,d){return c.copy(a).slerp(b,d)}static slerpFlat(a,b,c,d,e,f,h){let g=c[d+0],k=c[d+1],n=c[d+2];c=c[d+3];d=e[f+0];const w=e[f+1],v=e[f+2];e=e[f+3];if(c!==e||g!==d||k!==w||n!==v){f=1-h;var x=g*d+k*w+n*v+c*e,z=0<=x?1:-1,F=1-x*x;F>Number.EPSILON&&(F=Math.sqrt(F),x=Math.atan2(F,x*z),f=Math.sin(f*x)/F,
h=Math.sin(h*x)/F);z*=h;g=g*f+d*z;k=k*f+w*z;n=n*f+v*z;c=c*f+e*z;f===1-h&&(h=1/Math.sqrt(g*g+k*k+n*n+c*c),g*=h,k*=h,n*=h,c*=h)}a[b]=g;a[b+1]=k;a[b+2]=n;a[b+3]=c}static multiplyQuaternionsFlat(a,b,c,d,e,f){const h=c[d],g=c[d+1],k=c[d+2];c=c[d+3];d=e[f];const n=e[f+1],w=e[f+2];e=e[f+3];a[b]=h*e+c*d+g*w-k*n;a[b+1]=g*e+c*n+k*d-h*w;a[b+2]=k*e+c*w+h*n-g*d;a[b+3]=c*e-h*d-g*n-k*w;return a}get x(){return this._x}set x(a){this._x=a;this._onChangeCallback()}get y(){return this._y}set y(a){this._y=a;this._onChangeCallback()}get z(){return this._z}set z(a){this._z=
a;this._onChangeCallback()}get w(){return this._w}set w(a){this._w=a;this._onChangeCallback()}set(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=d;this._onChangeCallback();return this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(a){this._x=a.x;this._y=a.y;this._z=a.z;this._w=a.w;this._onChangeCallback();return this}setFromEuler(a,b){if(!a||!a.isEuler)throw Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var c=a._x,
d=a._y,e=a._z;a=a._order;var f=Math.cos;const h=Math.sin,g=f(c/2),k=f(d/2);f=f(e/2);c=h(c/2);d=h(d/2);e=h(e/2);switch(a){case "XYZ":this._x=c*k*f+g*d*e;this._y=g*d*f-c*k*e;this._z=g*k*e+c*d*f;this._w=g*k*f-c*d*e;break;case "YXZ":this._x=c*k*f+g*d*e;this._y=g*d*f-c*k*e;this._z=g*k*e-c*d*f;this._w=g*k*f+c*d*e;break;case "ZXY":this._x=c*k*f-g*d*e;this._y=g*d*f+c*k*e;this._z=g*k*e+c*d*f;this._w=g*k*f-c*d*e;break;case "ZYX":this._x=c*k*f-g*d*e;this._y=g*d*f+c*k*e;this._z=g*k*e-c*d*f;this._w=g*k*f+c*d*
e;break;case "YZX":this._x=c*k*f+g*d*e;this._y=g*d*f+c*k*e;this._z=g*k*e-c*d*f;this._w=g*k*f-c*d*e;break;case "XZY":this._x=c*k*f-g*d*e;this._y=g*d*f-c*k*e;this._z=g*k*e+c*d*f;this._w=g*k*f+c*d*e;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}!1!==b&&this._onChangeCallback();return this}setFromAxisAngle(a,b){b/=2;const c=Math.sin(b);this._x=a.x*c;this._y=a.y*c;this._z=a.z*c;this._w=Math.cos(b);this._onChangeCallback();return this}setFromRotationMatrix(a){var b=
a.elements,c=b[0];a=b[4];const d=b[8],e=b[1],f=b[5],h=b[9],g=b[2],k=b[6];b=b[10];const n=c+f+b;0<n?(c=.5/Math.sqrt(n+1),this._w=.25/c,this._x=(k-h)*c,this._y=(d-g)*c,this._z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this._w=(k-h)/c,this._x=.25*c,this._y=(a+e)/c,this._z=(d+g)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this._w=(d-g)/c,this._x=(a+e)/c,this._y=.25*c,this._z=(h+k)/c):(c=2*Math.sqrt(1+b-c-f),this._w=(e-a)/c,this._x=(d+g)/c,this._y=(h+k)/c,this._z=.25*c);this._onChangeCallback();return this}setFromUnitVectors(a,
b){let c=a.dot(b)+1;1E-6>c?(c=0,Math.abs(a.x)>Math.abs(a.z)?(this._x=-a.y,this._y=a.x,this._z=0):(this._x=0,this._y=-a.z,this._z=a.y)):(this._x=a.y*b.z-a.z*b.y,this._y=a.z*b.x-a.x*b.z,this._z=a.x*b.y-a.y*b.x);this._w=c;return this.normalize()}angleTo(a){return 2*Math.acos(Math.abs(MathUtils$$module$node_modules$three$build$three_module.clamp(this.dot(a),-1,1)))}rotateTowards(a,b){const c=this.angleTo(a);if(0===c)return this;this.slerp(a,Math.min(1,b/c));return this}identity(){return this.set(0,0,
0,1)}inverse(){return this.conjugate()}conjugate(){this._x*=-1;this._y*=-1;this._z*=-1;this._onChangeCallback();return this}dot(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let a=this.length();0===a?(this._z=this._y=this._x=0,this._w=1):(a=1/a,this._x*=a,this._y*=a,this._z*=a,this._w*=a);this._onChangeCallback();
return this}multiply(a,b){return void 0!==b?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)}premultiply(a){return this.multiplyQuaternions(a,this)}multiplyQuaternions(a,b){const c=a._x,d=a._y,e=a._z;a=a._w;const f=b._x,h=b._y,g=b._z;b=b._w;this._x=c*b+a*f+d*g-e*h;this._y=d*b+a*h+e*f-c*g;this._z=e*b+a*g+c*h-d*f;this._w=a*b-c*f-d*h-e*g;this._onChangeCallback();return this}slerp(a,
b){if(0===b)return this;if(1===b)return this.copy(a);const c=this._x,d=this._y,e=this._z,f=this._w;var h=f*a._w+c*a._x+d*a._y+e*a._z;0>h?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,h=-h):this.copy(a);if(1<=h)return this._w=f,this._x=c,this._y=d,this._z=e,this;a=1-h*h;if(a<=Number.EPSILON)return h=1-b,this._w=h*f+b*this._w,this._x=h*c+b*this._x,this._y=h*d+b*this._y,this._z=h*e+b*this._z,this.normalize(),this._onChangeCallback(),this;a=Math.sqrt(a);const g=Math.atan2(a,h);h=Math.sin((1-
b)*g)/a;b=Math.sin(b*g)/a;this._w=f*h+this._w*b;this._x=c*h+this._x*b;this._y=d*h+this._y*b;this._z=e*h+this._z*b;this._onChangeCallback();return this}equals(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w}fromArray(a,b){void 0===b&&(b=0);this._x=a[b];this._y=a[b+1];this._z=a[b+2];this._w=a[b+3];this._onChangeCallback();return this}toArray(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._w;return a}fromBufferAttribute(a,b){this._x=
a.getX(b);this._y=a.getY(b);this._z=a.getZ(b);this._w=a.getW(b);return this}_onChange(a){this._onChangeCallback=a;return this}_onChangeCallback(){}}
class Vector3$$module$node_modules$three$build$three_module{constructor(a=0,b=0,c=0){Object.defineProperty(this,"isVector3",{value:!0});this.x=a;this.y=b;this.z=c}set(a,b,c){void 0===c&&(c=this.z);this.x=a;this.y=b;this.z=c;return this}setScalar(a){this.z=this.y=this.x=a;return this}setX(a){this.x=a;return this}setY(a){this.y=a;return this}setZ(a){this.z=a;return this}setComponent(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+
a);}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+a);}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(a){this.x=a.x;this.y=a.y;this.z=a.z;return this}add(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this}addScalar(a){this.x+=a;this.y+=a;
this.z+=a;return this}addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this}addScaledVector(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;return this}sub(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this}subScalar(a){this.x-=a;this.y-=a;this.z-=a;return this}subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this}multiply(a,
b){if(void 0!==b)return console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this}multiplyScalar(a){this.x*=a;this.y*=a;this.z*=a;return this}multiplyVectors(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this}applyEuler(a){a&&a.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.");return this.applyQuaternion(_quaternion$$module$node_modules$three$build$three_module.setFromEuler(a))}applyAxisAngle(a,
b){return this.applyQuaternion(_quaternion$$module$node_modules$three$build$three_module.setFromAxisAngle(a,b))}applyMatrix3(a){const b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this}applyNormalMatrix(a){return this.applyMatrix3(a).normalize()}applyMatrix4(a){const b=this.x,c=this.y,d=this.z;a=a.elements;const e=1/(a[3]*b+a[7]*c+a[11]*d+a[15]);this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*e;this.y=(a[1]*b+a[5]*c+a[9]*d+a[13])*
e;this.z=(a[2]*b+a[6]*c+a[10]*d+a[14])*e;return this}applyQuaternion(a){var b=this.x;const c=this.y,d=this.z,e=a.x,f=a.y,h=a.z;a=a.w;const g=a*b+f*d-h*c,k=a*c+h*b-e*d,n=a*d+e*c-f*b;b=-e*b-f*c-h*d;this.x=g*a+b*-e+k*-h-n*-f;this.y=k*a+b*-f+n*-e-g*-h;this.z=n*a+b*-h+g*-f-k*-e;return this}project(a){return this.applyMatrix4(a.matrixWorldInverse).applyMatrix4(a.projectionMatrix)}unproject(a){return this.applyMatrix4(a.projectionMatrixInverse).applyMatrix4(a.matrixWorld)}transformDirection(a){const b=this.x,
c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;this.z=a[2]*b+a[6]*c+a[10]*d;return this.normalize()}divide(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this}divideScalar(a){return this.multiplyScalar(1/a)}min(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);return this}max(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=Math.max(this.z,a.z);return this}clamp(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));
this.y=Math.max(a.y,Math.min(b.y,this.y));this.z=Math.max(a.z,Math.min(b.z,this.z));return this}clampScalar(a,b){this.x=Math.max(a,Math.min(b,this.x));this.y=Math.max(a,Math.min(b,this.y));this.z=Math.max(a,Math.min(b,this.z));return this}clampLength(a,b){const c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))}floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this}ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);
this.z=Math.ceil(this.z);return this}round(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this}roundToZero(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);return this}negate(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this}dot(a){return this.x*a.x+this.y*a.y+this.z*a.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*
this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this}lerpVectors(a,b,c){this.x=a.x+(b.x-a.x)*c;this.y=a.y+(b.y-a.y)*c;this.z=a.z+(b.z-a.z)*c;return this}cross(a,b){return void 0!==b?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),
this.crossVectors(a,b)):this.crossVectors(this,a)}crossVectors(a,b){const c=a.x,d=a.y;a=a.z;const e=b.x,f=b.y;b=b.z;this.x=d*b-a*f;this.y=a*e-c*b;this.z=c*f-d*e;return this}projectOnVector(a){var b=a.lengthSq();if(0===b)return this.set(0,0,0);b=a.dot(this)/b;return this.copy(a).multiplyScalar(b)}projectOnPlane(a){_vector$$module$node_modules$three$build$three_module.copy(this).projectOnVector(a);return this.sub(_vector$$module$node_modules$three$build$three_module)}reflect(a){return this.sub(_vector$$module$node_modules$three$build$three_module.copy(a).multiplyScalar(2*
this.dot(a)))}angleTo(a){const b=Math.sqrt(this.lengthSq()*a.lengthSq());if(0===b)return Math.PI/2;a=this.dot(a)/b;return Math.acos(MathUtils$$module$node_modules$three$build$three_module.clamp(a,-1,1))}distanceTo(a){return Math.sqrt(this.distanceToSquared(a))}distanceToSquared(a){const b=this.x-a.x,c=this.y-a.y;a=this.z-a.z;return b*b+c*c+a*a}manhattanDistanceTo(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)+Math.abs(this.z-a.z)}setFromSpherical(a){return this.setFromSphericalCoords(a.radius,
a.phi,a.theta)}setFromSphericalCoords(a,b,c){const d=Math.sin(b)*a;this.x=d*Math.sin(c);this.y=Math.cos(b)*a;this.z=d*Math.cos(c);return this}setFromCylindrical(a){return this.setFromCylindricalCoords(a.radius,a.theta,a.y)}setFromCylindricalCoords(a,b,c){this.x=a*Math.sin(b);this.y=c;this.z=a*Math.cos(b);return this}setFromMatrixPosition(a){a=a.elements;this.x=a[12];this.y=a[13];this.z=a[14];return this}setFromMatrixScale(a){const b=this.setFromMatrixColumn(a,0).length(),c=this.setFromMatrixColumn(a,
1).length();a=this.setFromMatrixColumn(a,2).length();this.x=b;this.y=c;this.z=a;return this}setFromMatrixColumn(a,b){return this.fromArray(a.elements,4*b)}setFromMatrix3Column(a,b){return this.fromArray(a.elements,3*b)}equals(a){return a.x===this.x&&a.y===this.y&&a.z===this.z}fromArray(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];return this}toArray(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;return a}fromBufferAttribute(a,b,c){void 0!==c&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute().");
this.x=a.getX(b);this.y=a.getY(b);this.z=a.getZ(b);return this}random(){this.x=Math.random();this.y=Math.random();this.z=Math.random();return this}}const _vector$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_quaternion$$module$node_modules$three$build$three_module=new Quaternion$$module$node_modules$three$build$three_module;
class Box3$$module$node_modules$three$build$three_module{constructor(a,b){Object.defineProperty(this,"isBox3",{value:!0});this.min=void 0!==a?a:new Vector3$$module$node_modules$three$build$three_module(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new Vector3$$module$node_modules$three$build$three_module(-Infinity,-Infinity,-Infinity)}set(a,b){this.min.copy(a);this.max.copy(b);return this}setFromArray(a){let b=Infinity,c=Infinity,d=Infinity,e=-Infinity,f=-Infinity,h=-Infinity;for(let g=0,k=a.length;g<
k;g+=3){const n=a[g],w=a[g+1],v=a[g+2];n<b&&(b=n);w<c&&(c=w);v<d&&(d=v);n>e&&(e=n);w>f&&(f=w);v>h&&(h=v)}this.min.set(b,c,d);this.max.set(e,f,h);return this}setFromBufferAttribute(a){let b=Infinity,c=Infinity,d=Infinity,e=-Infinity,f=-Infinity,h=-Infinity;for(let g=0,k=a.count;g<k;g++){const n=a.getX(g),w=a.getY(g),v=a.getZ(g);n<b&&(b=n);w<c&&(c=w);v<d&&(d=v);n>e&&(e=n);w>f&&(f=w);v>h&&(h=v)}this.min.set(b,c,d);this.max.set(e,f,h);return this}setFromPoints(a){this.makeEmpty();for(let b=0,c=a.length;b<
c;b++)this.expandByPoint(a[b]);return this}setFromCenterAndSize(a,b){b=_vector$1$$module$node_modules$three$build$three_module.copy(b).multiplyScalar(.5);this.min.copy(a).sub(b);this.max.copy(a).add(b);return this}setFromObject(a){this.makeEmpty();return this.expandByObject(a)}clone(){return(new this.constructor).copy(this)}copy(a){this.min.copy(a.min);this.max.copy(a.max);return this}makeEmpty(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this}isEmpty(){return this.max.x<
this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(a){void 0===a&&(console.warn("THREE.Box3: .getCenter() target is now required"),a=new Vector3$$module$node_modules$three$build$three_module);return this.isEmpty()?a.set(0,0,0):a.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(a){void 0===a&&(console.warn("THREE.Box3: .getSize() target is now required"),a=new Vector3$$module$node_modules$three$build$three_module);return this.isEmpty()?a.set(0,0,0):a.subVectors(this.max,this.min)}expandByPoint(a){this.min.min(a);
this.max.max(a);return this}expandByVector(a){this.min.sub(a);this.max.add(a);return this}expandByScalar(a){this.min.addScalar(-a);this.max.addScalar(a);return this}expandByObject(a){a.updateWorldMatrix(!1,!1);const b=a.geometry;void 0!==b&&(null===b.boundingBox&&b.computeBoundingBox(),_box$$module$node_modules$three$build$three_module.copy(b.boundingBox),_box$$module$node_modules$three$build$three_module.applyMatrix4(a.matrixWorld),this.union(_box$$module$node_modules$three$build$three_module));
a=a.children;for(let c=0,d=a.length;c<d;c++)this.expandByObject(a[c]);return this}containsPoint(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0}containsBox(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z}getParameter(a,b){void 0===b&&(console.warn("THREE.Box3: .getParameter() target is now required"),b=new Vector3$$module$node_modules$three$build$three_module);
return b.set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?!1:!0}intersectsSphere(a){this.clampPoint(a.center,_vector$1$$module$node_modules$three$build$three_module);return _vector$1$$module$node_modules$three$build$three_module.distanceToSquared(a.center)<=a.radius*a.radius}intersectsPlane(a){let b,
c;0<a.normal.x?(b=a.normal.x*this.min.x,c=a.normal.x*this.max.x):(b=a.normal.x*this.max.x,c=a.normal.x*this.min.x);0<a.normal.y?(b+=a.normal.y*this.min.y,c+=a.normal.y*this.max.y):(b+=a.normal.y*this.max.y,c+=a.normal.y*this.min.y);0<a.normal.z?(b+=a.normal.z*this.min.z,c+=a.normal.z*this.max.z):(b+=a.normal.z*this.max.z,c+=a.normal.z*this.min.z);return b<=-a.constant&&c>=-a.constant}intersectsTriangle(a){if(this.isEmpty())return!1;this.getCenter(_center$$module$node_modules$three$build$three_module);
_extents$$module$node_modules$three$build$three_module.subVectors(this.max,_center$$module$node_modules$three$build$three_module);_v0$$module$node_modules$three$build$three_module.subVectors(a.a,_center$$module$node_modules$three$build$three_module);_v1$$module$node_modules$three$build$three_module.subVectors(a.b,_center$$module$node_modules$three$build$three_module);_v2$$module$node_modules$three$build$three_module.subVectors(a.c,_center$$module$node_modules$three$build$three_module);_f0$$module$node_modules$three$build$three_module.subVectors(_v1$$module$node_modules$three$build$three_module,
_v0$$module$node_modules$three$build$three_module);_f1$$module$node_modules$three$build$three_module.subVectors(_v2$$module$node_modules$three$build$three_module,_v1$$module$node_modules$three$build$three_module);_f2$$module$node_modules$three$build$three_module.subVectors(_v0$$module$node_modules$three$build$three_module,_v2$$module$node_modules$three$build$three_module);a=[0,-_f0$$module$node_modules$three$build$three_module.z,_f0$$module$node_modules$three$build$three_module.y,0,-_f1$$module$node_modules$three$build$three_module.z,
_f1$$module$node_modules$three$build$three_module.y,0,-_f2$$module$node_modules$three$build$three_module.z,_f2$$module$node_modules$three$build$three_module.y,_f0$$module$node_modules$three$build$three_module.z,0,-_f0$$module$node_modules$three$build$three_module.x,_f1$$module$node_modules$three$build$three_module.z,0,-_f1$$module$node_modules$three$build$three_module.x,_f2$$module$node_modules$three$build$three_module.z,0,-_f2$$module$node_modules$three$build$three_module.x,-_f0$$module$node_modules$three$build$three_module.y,
_f0$$module$node_modules$three$build$three_module.x,0,-_f1$$module$node_modules$three$build$three_module.y,_f1$$module$node_modules$three$build$three_module.x,0,-_f2$$module$node_modules$three$build$three_module.y,_f2$$module$node_modules$three$build$three_module.x,0];if(!satForAxes$$module$node_modules$three$build$three_module(a,_v0$$module$node_modules$three$build$three_module,_v1$$module$node_modules$three$build$three_module,_v2$$module$node_modules$three$build$three_module,_extents$$module$node_modules$three$build$three_module))return!1;
a=[1,0,0,0,1,0,0,0,1];if(!satForAxes$$module$node_modules$three$build$three_module(a,_v0$$module$node_modules$three$build$three_module,_v1$$module$node_modules$three$build$three_module,_v2$$module$node_modules$three$build$three_module,_extents$$module$node_modules$three$build$three_module))return!1;_triangleNormal$$module$node_modules$three$build$three_module.crossVectors(_f0$$module$node_modules$three$build$three_module,_f1$$module$node_modules$three$build$three_module);a=[_triangleNormal$$module$node_modules$three$build$three_module.x,
_triangleNormal$$module$node_modules$three$build$three_module.y,_triangleNormal$$module$node_modules$three$build$three_module.z];return satForAxes$$module$node_modules$three$build$three_module(a,_v0$$module$node_modules$three$build$three_module,_v1$$module$node_modules$three$build$three_module,_v2$$module$node_modules$three$build$three_module,_extents$$module$node_modules$three$build$three_module)}clampPoint(a,b){void 0===b&&(console.warn("THREE.Box3: .clampPoint() target is now required"),b=new Vector3$$module$node_modules$three$build$three_module);
return b.copy(a).clamp(this.min,this.max)}distanceToPoint(a){return _vector$1$$module$node_modules$three$build$three_module.copy(a).clamp(this.min,this.max).sub(a).length()}getBoundingSphere(a){void 0===a&&console.error("THREE.Box3: .getBoundingSphere() target is now required");this.getCenter(a.center);a.radius=.5*this.getSize(_vector$1$$module$node_modules$three$build$three_module).length();return a}intersect(a){this.min.max(a.min);this.max.min(a.max);this.isEmpty()&&this.makeEmpty();return this}union(a){this.min.min(a.min);
this.max.max(a.max);return this}applyMatrix4(a){if(this.isEmpty())return this;_points$$module$node_modules$three$build$three_module[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(a);_points$$module$node_modules$three$build$three_module[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(a);_points$$module$node_modules$three$build$three_module[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(a);_points$$module$node_modules$three$build$three_module[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(a);
_points$$module$node_modules$three$build$three_module[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(a);_points$$module$node_modules$three$build$three_module[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(a);_points$$module$node_modules$three$build$three_module[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(a);_points$$module$node_modules$three$build$three_module[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(a);this.setFromPoints(_points$$module$node_modules$three$build$three_module);
return this}translate(a){this.min.add(a);this.max.add(a);return this}equals(a){return a.min.equals(this.min)&&a.max.equals(this.max)}}
function satForAxes$$module$node_modules$three$build$three_module(a,b,c,d,e){for(let f=0,h=a.length-3;f<=h;f+=3){_testAxis$$module$node_modules$three$build$three_module.fromArray(a,f);const g=e.x*Math.abs(_testAxis$$module$node_modules$three$build$three_module.x)+e.y*Math.abs(_testAxis$$module$node_modules$three$build$three_module.y)+e.z*Math.abs(_testAxis$$module$node_modules$three$build$three_module.z),k=b.dot(_testAxis$$module$node_modules$three$build$three_module),n=c.dot(_testAxis$$module$node_modules$three$build$three_module),
w=d.dot(_testAxis$$module$node_modules$three$build$three_module);if(Math.max(-Math.max(k,n,w),Math.min(k,n,w))>g)return!1}return!0}
const _points$$module$node_modules$three$build$three_module=[new Vector3$$module$node_modules$three$build$three_module,new Vector3$$module$node_modules$three$build$three_module,new Vector3$$module$node_modules$three$build$three_module,new Vector3$$module$node_modules$three$build$three_module,new Vector3$$module$node_modules$three$build$three_module,new Vector3$$module$node_modules$three$build$three_module,new Vector3$$module$node_modules$three$build$three_module,new Vector3$$module$node_modules$three$build$three_module],
_vector$1$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_box$$module$node_modules$three$build$three_module=new Box3$$module$node_modules$three$build$three_module,_v0$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_v1$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_v2$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,
_f0$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_f1$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_f2$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_center$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_extents$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,
_triangleNormal$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_testAxis$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_box$1$$module$node_modules$three$build$three_module=new Box3$$module$node_modules$three$build$three_module;
class Sphere$$module$node_modules$three$build$three_module{constructor(a,b){this.center=void 0!==a?a:new Vector3$$module$node_modules$three$build$three_module;this.radius=void 0!==b?b:-1}set(a,b){this.center.copy(a);this.radius=b;return this}setFromPoints(a,b){const c=this.center;void 0!==b?c.copy(b):_box$1$$module$node_modules$three$build$three_module.setFromPoints(a).getCenter(c);b=0;for(let d=0,e=a.length;d<e;d++)b=Math.max(b,c.distanceToSquared(a[d]));this.radius=Math.sqrt(b);return this}clone(){return(new this.constructor).copy(this)}copy(a){this.center.copy(a.center);
this.radius=a.radius;return this}isEmpty(){return 0>this.radius}makeEmpty(){this.center.set(0,0,0);this.radius=-1;return this}containsPoint(a){return a.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(a){return a.distanceTo(this.center)-this.radius}intersectsSphere(a){const b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b}intersectsBox(a){return a.intersectsSphere(this)}intersectsPlane(a){return Math.abs(a.distanceToPoint(this.center))<=this.radius}clampPoint(a,
b){const c=this.center.distanceToSquared(a);void 0===b&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),b=new Vector3$$module$node_modules$three$build$three_module);b.copy(a);c>this.radius*this.radius&&(b.sub(this.center).normalize(),b.multiplyScalar(this.radius).add(this.center));return b}getBoundingBox(a){void 0===a&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),a=new Box3$$module$node_modules$three$build$three_module);if(this.isEmpty())return a.makeEmpty(),
a;a.set(this.center,this.center);a.expandByScalar(this.radius);return a}applyMatrix4(a){this.center.applyMatrix4(a);this.radius*=a.getMaxScaleOnAxis();return this}translate(a){this.center.add(a);return this}equals(a){return a.center.equals(this.center)&&a.radius===this.radius}}
const _vector$2$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_segCenter$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_segDir$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_diff$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_edge1$$module$node_modules$three$build$three_module=
new Vector3$$module$node_modules$three$build$three_module,_edge2$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_normal$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module;
class Ray$$module$node_modules$three$build$three_module{constructor(a,b){this.origin=void 0!==a?a:new Vector3$$module$node_modules$three$build$three_module;this.direction=void 0!==b?b:new Vector3$$module$node_modules$three$build$three_module(0,0,-1)}set(a,b){this.origin.copy(a);this.direction.copy(b);return this}clone(){return(new this.constructor).copy(this)}copy(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this}at(a,b){void 0===b&&(console.warn("THREE.Ray: .at() target is now required"),
b=new Vector3$$module$node_modules$three$build$three_module);return b.copy(this.direction).multiplyScalar(a).add(this.origin)}lookAt(a){this.direction.copy(a).sub(this.origin).normalize();return this}recast(a){this.origin.copy(this.at(a,_vector$2$$module$node_modules$three$build$three_module));return this}closestPointToPoint(a,b){void 0===b&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),b=new Vector3$$module$node_modules$three$build$three_module);b.subVectors(a,this.origin);
a=b.dot(this.direction);return 0>a?b.copy(this.origin):b.copy(this.direction).multiplyScalar(a).add(this.origin)}distanceToPoint(a){return Math.sqrt(this.distanceSqToPoint(a))}distanceSqToPoint(a){const b=_vector$2$$module$node_modules$three$build$three_module.subVectors(a,this.origin).dot(this.direction);if(0>b)return this.origin.distanceToSquared(a);_vector$2$$module$node_modules$three$build$three_module.copy(this.direction).multiplyScalar(b).add(this.origin);return _vector$2$$module$node_modules$three$build$three_module.distanceToSquared(a)}distanceSqToSegment(a,
b,c,d){_segCenter$$module$node_modules$three$build$three_module.copy(a).add(b).multiplyScalar(.5);_segDir$$module$node_modules$three$build$three_module.copy(b).sub(a).normalize();_diff$$module$node_modules$three$build$three_module.copy(this.origin).sub(_segCenter$$module$node_modules$three$build$three_module);var e=.5*a.distanceTo(b),f=-this.direction.dot(_segDir$$module$node_modules$three$build$three_module);const h=_diff$$module$node_modules$three$build$three_module.dot(this.direction),g=-_diff$$module$node_modules$three$build$three_module.dot(_segDir$$module$node_modules$three$build$three_module),
k=_diff$$module$node_modules$three$build$three_module.lengthSq(),n=Math.abs(1-f*f);let w;0<n?(a=f*g-h,b=f*h-g,w=e*n,0<=a?b>=-w?b<=w?(e=1/n,a*=e,b*=e,f=a*(a+f*b+2*h)+b*(f*a+b+2*g)+k):(b=e,a=Math.max(0,-(f*b+h)),f=-a*a+b*(b+2*g)+k):(b=-e,a=Math.max(0,-(f*b+h)),f=-a*a+b*(b+2*g)+k):b<=-w?(a=Math.max(0,-(-f*e+h)),b=0<a?-e:Math.min(Math.max(-e,-g),e),f=-a*a+b*(b+2*g)+k):b<=w?(a=0,b=Math.min(Math.max(-e,-g),e),f=b*(b+2*g)+k):(a=Math.max(0,-(f*e+h)),b=0<a?e:Math.min(Math.max(-e,-g),e),f=-a*a+b*(b+2*g)+k)):
(b=0<f?-e:e,a=Math.max(0,-(f*b+h)),f=-a*a+b*(b+2*g)+k);c&&c.copy(this.direction).multiplyScalar(a).add(this.origin);d&&d.copy(_segDir$$module$node_modules$three$build$three_module).multiplyScalar(b).add(_segCenter$$module$node_modules$three$build$three_module);return f}intersectSphere(a,b){_vector$2$$module$node_modules$three$build$three_module.subVectors(a.center,this.origin);var c=_vector$2$$module$node_modules$three$build$three_module.dot(this.direction),d=_vector$2$$module$node_modules$three$build$three_module.dot(_vector$2$$module$node_modules$three$build$three_module)-
c*c;a=a.radius*a.radius;if(d>a)return null;a=Math.sqrt(a-d);d=c-a;c+=a;return 0>d&&0>c?null:0>d?this.at(c,b):this.at(d,b)}intersectsSphere(a){return this.distanceSqToPoint(a.center)<=a.radius*a.radius}distanceToPlane(a){const b=a.normal.dot(this.direction);if(0===b)return 0===a.distanceToPoint(this.origin)?0:null;a=-(this.origin.dot(a.normal)+a.constant)/b;return 0<=a?a:null}intersectPlane(a,b){a=this.distanceToPlane(a);return null===a?null:this.at(a,b)}intersectsPlane(a){const b=a.distanceToPoint(this.origin);
return 0===b||0>a.normal.dot(this.direction)*b?!0:!1}intersectBox(a,b){let c;var d=1/this.direction.x;var e=1/this.direction.y;const f=1/this.direction.z,h=this.origin;0<=d?(c=(a.min.x-h.x)*d,d*=a.max.x-h.x):(c=(a.max.x-h.x)*d,d*=a.min.x-h.x);if(0<=e){var g=(a.min.y-h.y)*e;e*=a.max.y-h.y}else g=(a.max.y-h.y)*e,e*=a.min.y-h.y;if(c>e||g>d)return null;if(g>c||c!==c)c=g;if(e<d||d!==d)d=e;0<=f?(g=(a.min.z-h.z)*f,a=(a.max.z-h.z)*f):(g=(a.max.z-h.z)*f,a=(a.min.z-h.z)*f);if(c>a||g>d)return null;if(g>c||c!==
c)c=g;if(a<d||d!==d)d=a;return 0>d?null:this.at(0<=c?c:d,b)}intersectsBox(a){return null!==this.intersectBox(a,_vector$2$$module$node_modules$three$build$three_module)}intersectTriangle(a,b,c,d,e){_edge1$$module$node_modules$three$build$three_module.subVectors(b,a);_edge2$$module$node_modules$three$build$three_module.subVectors(c,a);_normal$$module$node_modules$three$build$three_module.crossVectors(_edge1$$module$node_modules$three$build$three_module,_edge2$$module$node_modules$three$build$three_module);
b=this.direction.dot(_normal$$module$node_modules$three$build$three_module);if(0<b){if(d)return null;d=1}else if(0>b)d=-1,b=-b;else return null;_diff$$module$node_modules$three$build$three_module.subVectors(this.origin,a);a=d*this.direction.dot(_edge2$$module$node_modules$three$build$three_module.crossVectors(_diff$$module$node_modules$three$build$three_module,_edge2$$module$node_modules$three$build$three_module));if(0>a)return null;c=d*this.direction.dot(_edge1$$module$node_modules$three$build$three_module.cross(_diff$$module$node_modules$three$build$three_module));
if(0>c||a+c>b)return null;a=-d*_diff$$module$node_modules$three$build$three_module.dot(_normal$$module$node_modules$three$build$three_module);return 0>a?null:this.at(a/b,e)}applyMatrix4(a){this.origin.applyMatrix4(a);this.direction.transformDirection(a);return this}equals(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)}}
class Matrix4$$module$node_modules$three$build$three_module{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0});this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(a,b,c,d,e,f,h,g,k,n,w,v,x,z,F,N){const p=this.elements;p[0]=a;p[4]=b;p[8]=c;p[12]=d;p[1]=e;p[5]=f;p[9]=h;p[13]=g;p[2]=k;p[6]=n;p[10]=w;p[14]=v;p[3]=x;p[7]=z;p[11]=F;p[15]=N;return this}identity(){this.set(1,0,
0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this}clone(){return(new Matrix4$$module$node_modules$three$build$three_module).fromArray(this.elements)}copy(a){const b=this.elements;a=a.elements;b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];b[9]=a[9];b[10]=a[10];b[11]=a[11];b[12]=a[12];b[13]=a[13];b[14]=a[14];b[15]=a[15];return this}copyPosition(a){const b=this.elements;a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this}extractBasis(a,b,c){a.setFromMatrixColumn(this,
0);b.setFromMatrixColumn(this,1);c.setFromMatrixColumn(this,2);return this}makeBasis(a,b,c){this.set(a.x,b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1);return this}extractRotation(a){const b=this.elements,c=a.elements,d=1/_v1$1$$module$node_modules$three$build$three_module.setFromMatrixColumn(a,0).length(),e=1/_v1$1$$module$node_modules$three$build$three_module.setFromMatrixColumn(a,1).length();a=1/_v1$1$$module$node_modules$three$build$three_module.setFromMatrixColumn(a,2).length();b[0]=c[0]*d;b[1]=
c[1]*d;b[2]=c[2]*d;b[3]=0;b[4]=c[4]*e;b[5]=c[5]*e;b[6]=c[6]*e;b[7]=0;b[8]=c[8]*a;b[9]=c[9]*a;b[10]=c[10]*a;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this}makeRotationFromEuler(a){a&&a.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const b=this.elements;var c=a.x,d=a.y,e=a.z;const f=Math.cos(c);c=Math.sin(c);const h=Math.cos(d);d=Math.sin(d);const g=Math.cos(e);e=Math.sin(e);if("XYZ"===a.order){a=f*g;var k=f*e,n=
c*g,w=c*e;b[0]=h*g;b[4]=-h*e;b[8]=d;b[1]=k+n*d;b[5]=a-w*d;b[9]=-c*h;b[2]=w-a*d;b[6]=n+k*d;b[10]=f*h}else"YXZ"===a.order?(a=h*g,k=h*e,n=d*g,w=d*e,b[0]=a+w*c,b[4]=n*c-k,b[8]=f*d,b[1]=f*e,b[5]=f*g,b[9]=-c,b[2]=k*c-n,b[6]=w+a*c,b[10]=f*h):"ZXY"===a.order?(a=h*g,k=h*e,n=d*g,w=d*e,b[0]=a-w*c,b[4]=-f*e,b[8]=n+k*c,b[1]=k+n*c,b[5]=f*g,b[9]=w-a*c,b[2]=-f*d,b[6]=c,b[10]=f*h):"ZYX"===a.order?(a=f*g,k=f*e,n=c*g,w=c*e,b[0]=h*g,b[4]=n*d-k,b[8]=a*d+w,b[1]=h*e,b[5]=w*d+a,b[9]=k*d-n,b[2]=-d,b[6]=c*h,b[10]=f*h):"YZX"===
a.order?(a=f*h,k=f*d,n=c*h,w=c*d,b[0]=h*g,b[4]=w-a*e,b[8]=n*e+k,b[1]=e,b[5]=f*g,b[9]=-c*g,b[2]=-d*g,b[6]=k*e+n,b[10]=a-w*e):"XZY"===a.order&&(a=f*h,k=f*d,n=c*h,w=c*d,b[0]=h*g,b[4]=-e,b[8]=d*g,b[1]=a*e+w,b[5]=f*g,b[9]=k*e-n,b[2]=n*e-k,b[6]=c*g,b[10]=w*e+a);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this}makeRotationFromQuaternion(a){return this.compose(_zero$$module$node_modules$three$build$three_module,a,_one$$module$node_modules$three$build$three_module)}lookAt(a,b,c){const d=this.elements;
_z$$module$node_modules$three$build$three_module.subVectors(a,b);0===_z$$module$node_modules$three$build$three_module.lengthSq()&&(_z$$module$node_modules$three$build$three_module.z=1);_z$$module$node_modules$three$build$three_module.normalize();_x$$module$node_modules$three$build$three_module.crossVectors(c,_z$$module$node_modules$three$build$three_module);0===_x$$module$node_modules$three$build$three_module.lengthSq()&&(1===Math.abs(c.z)?_z$$module$node_modules$three$build$three_module.x+=1E-4:
_z$$module$node_modules$three$build$three_module.z+=1E-4,_z$$module$node_modules$three$build$three_module.normalize(),_x$$module$node_modules$three$build$three_module.crossVectors(c,_z$$module$node_modules$three$build$three_module));_x$$module$node_modules$three$build$three_module.normalize();_y$$module$node_modules$three$build$three_module.crossVectors(_z$$module$node_modules$three$build$three_module,_x$$module$node_modules$three$build$three_module);d[0]=_x$$module$node_modules$three$build$three_module.x;
d[4]=_y$$module$node_modules$three$build$three_module.x;d[8]=_z$$module$node_modules$three$build$three_module.x;d[1]=_x$$module$node_modules$three$build$three_module.y;d[5]=_y$$module$node_modules$three$build$three_module.y;d[9]=_z$$module$node_modules$three$build$three_module.y;d[2]=_x$$module$node_modules$three$build$three_module.z;d[6]=_y$$module$node_modules$three$build$three_module.z;d[10]=_z$$module$node_modules$three$build$three_module.z;return this}multiply(a,b){return void 0!==b?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),
this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)}premultiply(a){return this.multiplyMatrices(a,this)}multiplyMatrices(a,b){var c=a.elements,d=b.elements;b=this.elements;a=c[0];const e=c[4],f=c[8],h=c[12],g=c[1],k=c[5],n=c[9],w=c[13],v=c[2],x=c[6],z=c[10],F=c[14],N=c[3],p=c[7],A=c[11];c=c[15];const G=d[0],O=d[4],P=d[8],S=d[12],T=d[1],W=d[5],X=d[9],U=d[13],Z=d[2],aa=d[6],r=d[10],y=d[14],J=d[3],C=d[7],E=d[11];d=d[15];b[0]=a*G+e*T+f*Z+h*J;b[4]=a*O+e*W+f*aa+h*C;b[8]=a*P+e*X+f*r+h*E;b[12]=a*S+
e*U+f*y+h*d;b[1]=g*G+k*T+n*Z+w*J;b[5]=g*O+k*W+n*aa+w*C;b[9]=g*P+k*X+n*r+w*E;b[13]=g*S+k*U+n*y+w*d;b[2]=v*G+x*T+z*Z+F*J;b[6]=v*O+x*W+z*aa+F*C;b[10]=v*P+x*X+z*r+F*E;b[14]=v*S+x*U+z*y+F*d;b[3]=N*G+p*T+A*Z+c*J;b[7]=N*O+p*W+A*aa+c*C;b[11]=N*P+p*X+A*r+c*E;b[15]=N*S+p*U+A*y+c*d;return this}multiplyScalar(a){const b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this}determinant(){const a=this.elements,
b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],h=a[5],g=a[9],k=a[13],n=a[2],w=a[6],v=a[10],x=a[14];return a[3]*(+e*g*w-d*k*w-e*h*v+c*k*v+d*h*x-c*g*x)+a[7]*(+b*g*x-b*k*v+e*f*v-d*f*x+d*k*n-e*g*n)+a[11]*(+b*k*w-b*h*x-e*f*w+c*f*x+e*h*n-c*k*n)+a[15]*(-d*h*n-b*g*w+b*h*v+d*f*w-c*f*v+c*g*n)}transpose(){const a=this.elements;let b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this}setPosition(a,b,c){const d=
this.elements;a.isVector3?(d[12]=a.x,d[13]=a.y,d[14]=a.z):(d[12]=a,d[13]=b,d[14]=c);return this}getInverse(a,b){void 0!==b&&console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");b=this.elements;var c=a.elements;a=c[0];const d=c[1],e=c[2],f=c[3],h=c[4],g=c[5],k=c[6],n=c[7],w=c[8],v=c[9],x=c[10],z=c[11],F=c[12],N=c[13],p=c[14];c=c[15];const A=v*p*n-N*x*n+N*k*z-g*p*z-v*k*c+g*x*c,G=F*x*n-w*p*n-F*k*z+h*p*z+w*k*c-h*x*c,O=w*N*n-F*v*n+F*g*z-h*N*z-w*g*c+h*v*c,P=F*
v*k-w*N*k-F*g*x+h*N*x+w*g*p-h*v*p;var S=a*A+d*G+e*O+f*P;if(0===S)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);S=1/S;b[0]=A*S;b[1]=(N*x*f-v*p*f-N*e*z+d*p*z+v*e*c-d*x*c)*S;b[2]=(g*p*f-N*k*f+N*e*n-d*p*n-g*e*c+d*k*c)*S;b[3]=(v*k*f-g*x*f-v*e*n+d*x*n+g*e*z-d*k*z)*S;b[4]=G*S;b[5]=(w*p*f-F*x*f+F*e*z-a*p*z-w*e*c+a*x*c)*S;b[6]=(F*k*f-h*p*f-F*e*n+a*p*n+h*e*c-a*k*c)*S;b[7]=(h*x*f-w*k*f+w*e*n-a*x*n-h*e*z+a*k*z)*S;b[8]=O*S;b[9]=(F*v*f-w*N*f-F*d*z+a*N*z+w*d*c-a*v*c)*S;b[10]=(h*N*f-F*g*f+F*d*n-a*N*n-h*d*c+a*
g*c)*S;b[11]=(w*g*f-h*v*f-w*d*n+a*v*n+h*d*z-a*g*z)*S;b[12]=P*S;b[13]=(w*N*e-F*v*e+F*d*x-a*N*x-w*d*p+a*v*p)*S;b[14]=(F*g*e-h*N*e-F*d*k+a*N*k+h*d*p-a*g*p)*S;b[15]=(h*v*e-w*g*e+w*d*k-a*v*k-h*d*x+a*g*x)*S;return this}scale(a){const b=this.elements,c=a.x,d=a.y;a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this}getMaxScaleOnAxis(){const a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*
a[8]+a[9]*a[9]+a[10]*a[10]))}makeTranslation(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this}makeRotationX(a){const b=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this}makeRotationY(a){const b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this}makeRotationZ(a){const b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this}makeRotationAxis(a,b){const c=Math.cos(b);b=Math.sin(b);const d=1-c,e=a.x,f=a.y;
a=a.z;const h=d*e,g=d*f;this.set(h*e+c,h*f-b*a,h*a+b*f,0,h*f+b*a,g*f+c,g*a-b*e,0,h*a-b*f,g*a+b*e,d*a*a+c,0,0,0,0,1);return this}makeScale(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this}makeShear(a,b,c){this.set(1,b,c,0,a,1,c,0,a,b,1,0,0,0,0,1);return this}compose(a,b,c){const d=this.elements;var e=b._x,f=b._y,h=b._z,g=b._w,k=e+e,n=f+f,w=h+h;b=e*k;const v=e*n;e*=w;const x=f*n;f*=w;h*=w;k*=g;n*=g;g*=w;w=c.x;const z=c.y;c=c.z;d[0]=(1-(x+h))*w;d[1]=(v+g)*w;d[2]=(e-n)*w;d[3]=0;d[4]=(v-g)*
z;d[5]=(1-(b+h))*z;d[6]=(f+k)*z;d[7]=0;d[8]=(e+n)*c;d[9]=(f-k)*c;d[10]=(1-(b+x))*c;d[11]=0;d[12]=a.x;d[13]=a.y;d[14]=a.z;d[15]=1;return this}decompose(a,b,c){var d=this.elements;let e=_v1$1$$module$node_modules$three$build$three_module.set(d[0],d[1],d[2]).length();const f=_v1$1$$module$node_modules$three$build$three_module.set(d[4],d[5],d[6]).length(),h=_v1$1$$module$node_modules$three$build$three_module.set(d[8],d[9],d[10]).length();0>this.determinant()&&(e=-e);a.x=d[12];a.y=d[13];a.z=d[14];_m1$$module$node_modules$three$build$three_module.copy(this);
a=1/e;d=1/f;const g=1/h;_m1$$module$node_modules$three$build$three_module.elements[0]*=a;_m1$$module$node_modules$three$build$three_module.elements[1]*=a;_m1$$module$node_modules$three$build$three_module.elements[2]*=a;_m1$$module$node_modules$three$build$three_module.elements[4]*=d;_m1$$module$node_modules$three$build$three_module.elements[5]*=d;_m1$$module$node_modules$three$build$three_module.elements[6]*=d;_m1$$module$node_modules$three$build$three_module.elements[8]*=g;_m1$$module$node_modules$three$build$three_module.elements[9]*=
g;_m1$$module$node_modules$three$build$three_module.elements[10]*=g;b.setFromRotationMatrix(_m1$$module$node_modules$three$build$three_module);c.x=e;c.y=f;c.z=h;return this}makePerspective(a,b,c,d,e,f){void 0===f&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const h=this.elements;h[0]=2*e/(b-a);h[4]=0;h[8]=(b+a)/(b-a);h[12]=0;h[1]=0;h[5]=2*e/(c-d);h[9]=(c+d)/(c-d);h[13]=0;h[2]=0;h[6]=0;h[10]=-(f+e)/(f-e);h[14]=-2*f*e/(f-e);h[3]=
0;h[7]=0;h[11]=-1;h[15]=0;return this}makeOrthographic(a,b,c,d,e,f){const h=this.elements,g=1/(b-a),k=1/(c-d),n=1/(f-e);h[0]=2*g;h[4]=0;h[8]=0;h[12]=-((b+a)*g);h[1]=0;h[5]=2*k;h[9]=0;h[13]=-((c+d)*k);h[2]=0;h[6]=0;h[10]=-2*n;h[14]=-((f+e)*n);h[3]=0;h[7]=0;h[11]=0;h[15]=1;return this}equals(a){const b=this.elements;a=a.elements;for(let c=0;16>c;c++)if(b[c]!==a[c])return!1;return!0}fromArray(a,b){void 0===b&&(b=0);for(let c=0;16>c;c++)this.elements[c]=a[c+b];return this}toArray(a,b){void 0===a&&(a=
[]);void 0===b&&(b=0);const c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a}}
const _v1$1$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_m1$$module$node_modules$three$build$three_module=new Matrix4$$module$node_modules$three$build$three_module,_zero$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module(0,0,0),_one$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module(1,1,1),_x$$module$node_modules$three$build$three_module=
new Vector3$$module$node_modules$three$build$three_module,_y$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_z$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module;
class Euler$$module$node_modules$three$build$three_module{constructor(a=0,b=0,c=0,d=Euler$$module$node_modules$three$build$three_module.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0});this._x=a;this._y=b;this._z=c;this._order=d}get x(){return this._x}set x(a){this._x=a;this._onChangeCallback()}get y(){return this._y}set y(a){this._y=a;this._onChangeCallback()}get z(){return this._z}set z(a){this._z=a;this._onChangeCallback()}get order(){return this._order}set order(a){this._order=a;
this._onChangeCallback()}set(a,b,c,d){this._x=a;this._y=b;this._z=c;this._order=d||this._order;this._onChangeCallback();return this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(a){this._x=a._x;this._y=a._y;this._z=a._z;this._order=a._order;this._onChangeCallback();return this}setFromRotationMatrix(a,b,c){const d=MathUtils$$module$node_modules$three$build$three_module.clamp;var e=a.elements;a=e[0];const f=e[4],h=e[8],g=e[1],k=e[5],n=e[9],w=e[2],v=e[6];e=e[10];b=b||
this._order;switch(b){case "XYZ":this._y=Math.asin(d(h,-1,1));.9999999>Math.abs(h)?(this._x=Math.atan2(-n,e),this._z=Math.atan2(-f,a)):(this._x=Math.atan2(v,k),this._z=0);break;case "YXZ":this._x=Math.asin(-d(n,-1,1));.9999999>Math.abs(n)?(this._y=Math.atan2(h,e),this._z=Math.atan2(g,k)):(this._y=Math.atan2(-w,a),this._z=0);break;case "ZXY":this._x=Math.asin(d(v,-1,1));.9999999>Math.abs(v)?(this._y=Math.atan2(-w,e),this._z=Math.atan2(-f,k)):(this._y=0,this._z=Math.atan2(g,a));break;case "ZYX":this._y=
Math.asin(-d(w,-1,1));.9999999>Math.abs(w)?(this._x=Math.atan2(v,e),this._z=Math.atan2(g,a)):(this._x=0,this._z=Math.atan2(-f,k));break;case "YZX":this._z=Math.asin(d(g,-1,1));.9999999>Math.abs(g)?(this._x=Math.atan2(-n,k),this._y=Math.atan2(-w,a)):(this._x=0,this._y=Math.atan2(h,e));break;case "XZY":this._z=Math.asin(-d(f,-1,1));.9999999>Math.abs(f)?(this._x=Math.atan2(v,k),this._y=Math.atan2(h,a)):(this._x=Math.atan2(-n,e),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+
b)}this._order=b;!1!==c&&this._onChangeCallback();return this}setFromQuaternion(a,b,c){_matrix$$module$node_modules$three$build$three_module.makeRotationFromQuaternion(a);return this.setFromRotationMatrix(_matrix$$module$node_modules$three$build$three_module,b,c)}setFromVector3(a,b){return this.set(a.x,a.y,a.z,b||this._order)}reorder(a){_quaternion$1$$module$node_modules$three$build$three_module.setFromEuler(this);return this.setFromQuaternion(_quaternion$1$$module$node_modules$three$build$three_module,
a)}equals(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order}fromArray(a){this._x=a[0];this._y=a[1];this._z=a[2];void 0!==a[3]&&(this._order=a[3]);this._onChangeCallback();return this}toArray(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._order;return a}toVector3(a){return a?a.set(this._x,this._y,this._z):new Vector3$$module$node_modules$three$build$three_module(this._x,this._y,this._z)}_onChange(a){this._onChangeCallback=
a;return this}_onChangeCallback(){}}Euler$$module$node_modules$three$build$three_module.DefaultOrder="XYZ";Euler$$module$node_modules$three$build$three_module.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");const _matrix$$module$node_modules$three$build$three_module=new Matrix4$$module$node_modules$three$build$three_module,_quaternion$1$$module$node_modules$three$build$three_module=new Quaternion$$module$node_modules$three$build$three_module;
class Layers$$module$node_modules$three$build$three_module{constructor(){this.mask=1}set(a){this.mask=1<<a|0}enable(a){this.mask=this.mask|1<<a|0}enableAll(){this.mask=-1}toggle(a){this.mask^=1<<a|0}disable(a){this.mask&=~(1<<a|0)}disableAll(){this.mask=0}test(a){return 0!==(this.mask&a.mask)}}let _object3DId$$module$node_modules$three$build$three_module=0;
const _v1$2$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_q1$$module$node_modules$three$build$three_module=new Quaternion$$module$node_modules$three$build$three_module,_m1$1$$module$node_modules$three$build$three_module=new Matrix4$$module$node_modules$three$build$three_module,_target$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_position$$module$node_modules$three$build$three_module=
new Vector3$$module$node_modules$three$build$three_module,_scale$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_quaternion$2$$module$node_modules$three$build$three_module=new Quaternion$$module$node_modules$three$build$three_module,_xAxis$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module(1,0,0),_yAxis$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module(0,
1,0),_zAxis$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module(0,0,1),_addedEvent$$module$node_modules$three$build$three_module={type:"added"},_removedEvent$$module$node_modules$three$build$three_module={type:"removed"};
function Object3D$$module$node_modules$three$build$three_module(){Object.defineProperty(this,"id",{value:_object3DId$$module$node_modules$three$build$three_module++});this.uuid=MathUtils$$module$node_modules$three$build$three_module.generateUUID();this.name="";this.type="Object3D";this.parent=null;this.children=[];this.up=Object3D$$module$node_modules$three$build$three_module.DefaultUp.clone();const a=new Vector3$$module$node_modules$three$build$three_module,b=new Euler$$module$node_modules$three$build$three_module,
c=new Quaternion$$module$node_modules$three$build$three_module,d=new Vector3$$module$node_modules$three$build$three_module(1,1,1);b._onChange(function(){c.setFromEuler(b,!1)});c._onChange(function(){b.setFromQuaternion(c,void 0,!1)});Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:a},rotation:{configurable:!0,enumerable:!0,value:b},quaternion:{configurable:!0,enumerable:!0,value:c},scale:{configurable:!0,enumerable:!0,value:d},modelViewMatrix:{value:new Matrix4$$module$node_modules$three$build$three_module},
normalMatrix:{value:new Matrix3$$module$node_modules$three$build$three_module}});this.matrix=new Matrix4$$module$node_modules$three$build$three_module;this.matrixWorld=new Matrix4$$module$node_modules$three$build$three_module;this.matrixAutoUpdate=Object3D$$module$node_modules$three$build$three_module.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=!1;this.layers=new Layers$$module$node_modules$three$build$three_module;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;
this.renderOrder=0;this.userData={}}Object3D$$module$node_modules$three$build$three_module.DefaultUp=new Vector3$$module$node_modules$three$build$three_module(0,1,0);Object3D$$module$node_modules$three$build$three_module.DefaultMatrixAutoUpdate=!0;
Object3D$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(EventDispatcher$$module$node_modules$three$build$three_module.prototype),{constructor:Object3D$$module$node_modules$three$build$three_module,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(a){this.matrixAutoUpdate&&this.updateMatrix();this.matrix.premultiply(a);this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(a){this.quaternion.premultiply(a);
return this},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(a,b){_q1$$module$node_modules$three$build$three_module.setFromAxisAngle(a,b);this.quaternion.multiply(_q1$$module$node_modules$three$build$three_module);return this},rotateOnWorldAxis:function(a,
b){_q1$$module$node_modules$three$build$three_module.setFromAxisAngle(a,b);this.quaternion.premultiply(_q1$$module$node_modules$three$build$three_module);return this},rotateX:function(a){return this.rotateOnAxis(_xAxis$$module$node_modules$three$build$three_module,a)},rotateY:function(a){return this.rotateOnAxis(_yAxis$$module$node_modules$three$build$three_module,a)},rotateZ:function(a){return this.rotateOnAxis(_zAxis$$module$node_modules$three$build$three_module,a)},translateOnAxis:function(a,b){_v1$2$$module$node_modules$three$build$three_module.copy(a).applyQuaternion(this.quaternion);
this.position.add(_v1$2$$module$node_modules$three$build$three_module.multiplyScalar(b));return this},translateX:function(a){return this.translateOnAxis(_xAxis$$module$node_modules$three$build$three_module,a)},translateY:function(a){return this.translateOnAxis(_yAxis$$module$node_modules$three$build$three_module,a)},translateZ:function(a){return this.translateOnAxis(_zAxis$$module$node_modules$three$build$three_module,a)},localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(a){return a.applyMatrix4(_m1$1$$module$node_modules$three$build$three_module.getInverse(this.matrixWorld))},
lookAt:function(a,b,c){a.isVector3?_target$$module$node_modules$three$build$three_module.copy(a):_target$$module$node_modules$three$build$three_module.set(a,b,c);a=this.parent;this.updateWorldMatrix(!0,!1);_position$$module$node_modules$three$build$three_module.setFromMatrixPosition(this.matrixWorld);this.isCamera||this.isLight?_m1$1$$module$node_modules$three$build$three_module.lookAt(_position$$module$node_modules$three$build$three_module,_target$$module$node_modules$three$build$three_module,this.up):
_m1$1$$module$node_modules$three$build$three_module.lookAt(_target$$module$node_modules$three$build$three_module,_position$$module$node_modules$three$build$three_module,this.up);this.quaternion.setFromRotationMatrix(_m1$1$$module$node_modules$three$build$three_module);a&&(_m1$1$$module$node_modules$three$build$three_module.extractRotation(a.matrixWorld),_q1$$module$node_modules$three$build$three_module.setFromRotationMatrix(_m1$1$$module$node_modules$three$build$three_module),this.quaternion.premultiply(_q1$$module$node_modules$three$build$three_module.inverse()))},
add:function(a){if(1<arguments.length){for(let b=0;b<arguments.length;b++)this.add(arguments[b]);return this}if(a===this)return console.error("THREE.Object3D.add: object can't be added as a child of itself.",a),this;a&&a.isObject3D?(null!==a.parent&&a.parent.remove(a),a.parent=this,this.children.push(a),a.dispatchEvent(_addedEvent$$module$node_modules$three$build$three_module)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",a);return this},remove:function(a){if(1<arguments.length){for(var b=
0;b<arguments.length;b++)this.remove(arguments[b]);return this}b=this.children.indexOf(a);-1!==b&&(a.parent=null,this.children.splice(b,1),a.dispatchEvent(_removedEvent$$module$node_modules$three$build$three_module));return this},attach:function(a){this.updateWorldMatrix(!0,!1);_m1$1$$module$node_modules$three$build$three_module.getInverse(this.matrixWorld);null!==a.parent&&(a.parent.updateWorldMatrix(!0,!1),_m1$1$$module$node_modules$three$build$three_module.multiply(a.parent.matrixWorld));a.applyMatrix4(_m1$1$$module$node_modules$three$build$three_module);
a.updateWorldMatrix(!1,!1);this.add(a);return this},getObjectById:function(a){return this.getObjectByProperty("id",a)},getObjectByName:function(a){return this.getObjectByProperty("name",a)},getObjectByProperty:function(a,b){if(this[a]===b)return this;for(let c=0,d=this.children.length;c<d;c++){const e=this.children[c].getObjectByProperty(a,b);if(void 0!==e)return e}},getWorldPosition:function(a){void 0===a&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),a=new Vector3$$module$node_modules$three$build$three_module);
this.updateMatrixWorld(!0);return a.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(a){void 0===a&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),a=new Quaternion$$module$node_modules$three$build$three_module);this.updateMatrixWorld(!0);this.matrixWorld.decompose(_position$$module$node_modules$three$build$three_module,a,_scale$$module$node_modules$three$build$three_module);return a},getWorldScale:function(a){void 0===a&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),
a=new Vector3$$module$node_modules$three$build$three_module);this.updateMatrixWorld(!0);this.matrixWorld.decompose(_position$$module$node_modules$three$build$three_module,_quaternion$2$$module$node_modules$three$build$three_module,a);return a},getWorldDirection:function(a){void 0===a&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),a=new Vector3$$module$node_modules$three$build$three_module);this.updateMatrixWorld(!0);const b=this.matrixWorld.elements;return a.set(b[8],
b[9],b[10]).normalize()},raycast:function(){},traverse:function(a){a(this);const b=this.children;for(let c=0,d=b.length;c<d;c++)b[c].traverse(a)},traverseVisible:function(a){if(!1!==this.visible){a(this);var b=this.children;for(let c=0,d=b.length;c<d;c++)b[c].traverseVisible(a)}},traverseAncestors:function(a){const b=this.parent;null!==b&&(a(b),b.traverseAncestors(a))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&
this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;const b=this.children;for(let c=0,d=b.length;c<d;c++)b[c].updateMatrixWorld(a)},updateWorldMatrix:function(a,b){const c=this.parent;!0===a&&null!==c&&c.updateWorldMatrix(!0,!1);this.matrixAutoUpdate&&this.updateMatrix();null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,
this.matrix);if(!0===b){a=this.children;for(let d=0,e=a.length;d<e;d++)a[d].updateWorldMatrix(!1,!0)}},toJSON:function(a){function b(g,k){void 0===g[k.uuid]&&(g[k.uuid]=k.toJSON(a));return k.uuid}function c(g){const k=[];for(const n in g){const w=g[n];delete w.metadata;k.push(w)}return k}var d=void 0===a||"string"===typeof a;const e={};d&&(a={geometries:{},materials:{},textures:{},images:{},shapes:{}},e.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const f={};f.uuid=this.uuid;
f.type=this.type;""!==this.name&&(f.name=this.name);!0===this.castShadow&&(f.castShadow=!0);!0===this.receiveShadow&&(f.receiveShadow=!0);!1===this.visible&&(f.visible=!1);!1===this.frustumCulled&&(f.frustumCulled=!1);0!==this.renderOrder&&(f.renderOrder=this.renderOrder);"{}"!==JSON.stringify(this.userData)&&(f.userData=this.userData);f.layers=this.layers.mask;f.matrix=this.matrix.toArray();!1===this.matrixAutoUpdate&&(f.matrixAutoUpdate=!1);this.isInstancedMesh&&(f.type="InstancedMesh",f.count=
this.count,f.instanceMatrix=this.instanceMatrix.toJSON());if(this.isMesh||this.isLine||this.isPoints){f.geometry=b(a.geometries,this.geometry);var h=this.geometry.parameters;if(void 0!==h&&void 0!==h.shapes)if(h=h.shapes,Array.isArray(h))for(let g=0,k=h.length;g<k;g++)b(a.shapes,h[g]);else b(a.shapes,h)}if(void 0!==this.material)if(Array.isArray(this.material)){h=[];for(let g=0,k=this.material.length;g<k;g++)h.push(b(a.materials,this.material[g]));f.material=h}else f.material=b(a.materials,this.material);
if(0<this.children.length)for(f.children=[],h=0;h<this.children.length;h++)f.children.push(this.children[h].toJSON(a).object);if(d){d=c(a.geometries);h=c(a.materials);const g=c(a.textures),k=c(a.images),n=c(a.shapes);0<d.length&&(e.geometries=d);0<h.length&&(e.materials=h);0<g.length&&(e.textures=g);0<k.length&&(e.images=k);0<n.length&&(e.shapes=n)}e.object=f;return e},clone:function(a){return(new this.constructor).copy(this,a)},copy:function(a,b){void 0===b&&(b=!0);this.name=a.name;this.up.copy(a.up);
this.position.copy(a.position);this.rotation.order=a.rotation.order;this.quaternion.copy(a.quaternion);this.scale.copy(a.scale);this.matrix.copy(a.matrix);this.matrixWorld.copy(a.matrixWorld);this.matrixAutoUpdate=a.matrixAutoUpdate;this.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate;this.layers.mask=a.layers.mask;this.visible=a.visible;this.castShadow=a.castShadow;this.receiveShadow=a.receiveShadow;this.frustumCulled=a.frustumCulled;this.renderOrder=a.renderOrder;this.userData=JSON.parse(JSON.stringify(a.userData));
if(!0===b)for(b=0;b<a.children.length;b++)this.add(a.children[b].clone());return this}});const _vector1$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_vector2$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_normalMatrix$$module$node_modules$three$build$three_module=new Matrix3$$module$node_modules$three$build$three_module;
class Plane$$module$node_modules$three$build$three_module{constructor(a,b){Object.defineProperty(this,"isPlane",{value:!0});this.normal=void 0!==a?a:new Vector3$$module$node_modules$three$build$three_module(1,0,0);this.constant=void 0!==b?b:0}set(a,b){this.normal.copy(a);this.constant=b;return this}setComponents(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this}setFromNormalAndCoplanarPoint(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this}setFromCoplanarPoints(a,b,
c){b=_vector1$$module$node_modules$three$build$three_module.subVectors(c,b).cross(_vector2$$module$node_modules$three$build$three_module.subVectors(a,b)).normalize();this.setFromNormalAndCoplanarPoint(b,a);return this}clone(){return(new this.constructor).copy(this)}copy(a){this.normal.copy(a.normal);this.constant=a.constant;return this}normalize(){const a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this}negate(){this.constant*=-1;this.normal.negate();return this}distanceToPoint(a){return this.normal.dot(a)+
this.constant}distanceToSphere(a){return this.distanceToPoint(a.center)-a.radius}projectPoint(a,b){void 0===b&&(console.warn("THREE.Plane: .projectPoint() target is now required"),b=new Vector3$$module$node_modules$three$build$three_module);return b.copy(this.normal).multiplyScalar(-this.distanceToPoint(a)).add(a)}intersectLine(a,b){void 0===b&&(console.warn("THREE.Plane: .intersectLine() target is now required"),b=new Vector3$$module$node_modules$three$build$three_module);const c=a.delta(_vector1$$module$node_modules$three$build$three_module);
var d=this.normal.dot(c);if(0===d){if(0===this.distanceToPoint(a.start))return b.copy(a.start)}else if(d=-(a.start.dot(this.normal)+this.constant)/d,!(0>d||1<d))return b.copy(c).multiplyScalar(d).add(a.start)}intersectsLine(a){const b=this.distanceToPoint(a.start);a=this.distanceToPoint(a.end);return 0>b&&0<a||0>a&&0<b}intersectsBox(a){return a.intersectsPlane(this)}intersectsSphere(a){return a.intersectsPlane(this)}coplanarPoint(a){void 0===a&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),
a=new Vector3$$module$node_modules$three$build$three_module);return a.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(a,b){b=b||_normalMatrix$$module$node_modules$three$build$three_module.getNormalMatrix(a);a=this.coplanarPoint(_vector1$$module$node_modules$three$build$three_module).applyMatrix4(a);b=this.normal.applyMatrix3(b).normalize();this.constant=-a.dot(b);return this}translate(a){this.constant-=a.dot(this.normal);return this}equals(a){return a.normal.equals(this.normal)&&a.constant===
this.constant}}
const _v0$1$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_v1$3$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_v2$1$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_v3$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_vab$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,
_vac$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_vbc$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_vap$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_vbp$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_vcp$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module;
class Triangle$$module$node_modules$three$build$three_module{constructor(a,b,c){this.a=void 0!==a?a:new Vector3$$module$node_modules$three$build$three_module;this.b=void 0!==b?b:new Vector3$$module$node_modules$three$build$three_module;this.c=void 0!==c?c:new Vector3$$module$node_modules$three$build$three_module}static getNormal(a,b,c,d){void 0===d&&(console.warn("THREE.Triangle: .getNormal() target is now required"),d=new Vector3$$module$node_modules$three$build$three_module);d.subVectors(c,b);_v0$1$$module$node_modules$three$build$three_module.subVectors(a,
b);d.cross(_v0$1$$module$node_modules$three$build$three_module);a=d.lengthSq();return 0<a?d.multiplyScalar(1/Math.sqrt(a)):d.set(0,0,0)}static getBarycoord(a,b,c,d,e){_v0$1$$module$node_modules$three$build$three_module.subVectors(d,b);_v1$3$$module$node_modules$three$build$three_module.subVectors(c,b);_v2$1$$module$node_modules$three$build$three_module.subVectors(a,b);a=_v0$1$$module$node_modules$three$build$three_module.dot(_v0$1$$module$node_modules$three$build$three_module);b=_v0$1$$module$node_modules$three$build$three_module.dot(_v1$3$$module$node_modules$three$build$three_module);
c=_v0$1$$module$node_modules$three$build$three_module.dot(_v2$1$$module$node_modules$three$build$three_module);var f=_v1$3$$module$node_modules$three$build$three_module.dot(_v1$3$$module$node_modules$three$build$three_module);d=_v1$3$$module$node_modules$three$build$three_module.dot(_v2$1$$module$node_modules$three$build$three_module);var h=a*f-b*b;void 0===e&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),e=new Vector3$$module$node_modules$three$build$three_module);if(0===
h)return e.set(-2,-1,-1);h=1/h;f=(f*c-b*d)*h;a=(a*d-b*c)*h;return e.set(1-f-a,a,f)}static containsPoint(a,b,c,d){this.getBarycoord(a,b,c,d,_v3$$module$node_modules$three$build$three_module);return 0<=_v3$$module$node_modules$three$build$three_module.x&&0<=_v3$$module$node_modules$three$build$three_module.y&&1>=_v3$$module$node_modules$three$build$three_module.x+_v3$$module$node_modules$three$build$three_module.y}static getUV(a,b,c,d,e,f,h,g){this.getBarycoord(a,b,c,d,_v3$$module$node_modules$three$build$three_module);
g.set(0,0);g.addScaledVector(e,_v3$$module$node_modules$three$build$three_module.x);g.addScaledVector(f,_v3$$module$node_modules$three$build$three_module.y);g.addScaledVector(h,_v3$$module$node_modules$three$build$three_module.z);return g}static isFrontFacing(a,b,c,d){_v0$1$$module$node_modules$three$build$three_module.subVectors(c,b);_v1$3$$module$node_modules$three$build$three_module.subVectors(a,b);return 0>_v0$1$$module$node_modules$three$build$three_module.cross(_v1$3$$module$node_modules$three$build$three_module).dot(d)?
!0:!1}set(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this}setFromPointsAndIndices(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this}clone(){return(new this.constructor).copy(this)}copy(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this}getArea(){_v0$1$$module$node_modules$three$build$three_module.subVectors(this.c,this.b);_v1$3$$module$node_modules$three$build$three_module.subVectors(this.a,this.b);return.5*_v0$1$$module$node_modules$three$build$three_module.cross(_v1$3$$module$node_modules$three$build$three_module).length()}getMidpoint(a){void 0===
a&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),a=new Vector3$$module$node_modules$three$build$three_module);return a.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(a){return Triangle$$module$node_modules$three$build$three_module.getNormal(this.a,this.b,this.c,a)}getPlane(a){void 0===a&&(console.warn("THREE.Triangle: .getPlane() target is now required"),a=new Plane$$module$node_modules$three$build$three_module);return a.setFromCoplanarPoints(this.a,this.b,
this.c)}getBarycoord(a,b){return Triangle$$module$node_modules$three$build$three_module.getBarycoord(a,this.a,this.b,this.c,b)}getUV(a,b,c,d,e){return Triangle$$module$node_modules$three$build$three_module.getUV(a,this.a,this.b,this.c,b,c,d,e)}containsPoint(a){return Triangle$$module$node_modules$three$build$three_module.containsPoint(a,this.a,this.b,this.c)}isFrontFacing(a){return Triangle$$module$node_modules$three$build$three_module.isFrontFacing(this.a,this.b,this.c,a)}intersectsBox(a){return a.intersectsTriangle(this)}closestPointToPoint(a,
b){void 0===b&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),b=new Vector3$$module$node_modules$three$build$three_module);const c=this.a;var d=this.b,e=this.c;_vab$$module$node_modules$three$build$three_module.subVectors(d,c);_vac$$module$node_modules$three$build$three_module.subVectors(e,c);_vap$$module$node_modules$three$build$three_module.subVectors(a,c);var f=_vab$$module$node_modules$three$build$three_module.dot(_vap$$module$node_modules$three$build$three_module),
h=_vac$$module$node_modules$three$build$three_module.dot(_vap$$module$node_modules$three$build$three_module);if(0>=f&&0>=h)return b.copy(c);_vbp$$module$node_modules$three$build$three_module.subVectors(a,d);const g=_vab$$module$node_modules$three$build$three_module.dot(_vbp$$module$node_modules$three$build$three_module),k=_vac$$module$node_modules$three$build$three_module.dot(_vbp$$module$node_modules$three$build$three_module);if(0<=g&&k<=g)return b.copy(d);var n=f*k-g*h;if(0>=n&&0<=f&&0>=g)return d=
f/(f-g),b.copy(c).addScaledVector(_vab$$module$node_modules$three$build$three_module,d);_vcp$$module$node_modules$three$build$three_module.subVectors(a,e);a=_vab$$module$node_modules$three$build$three_module.dot(_vcp$$module$node_modules$three$build$three_module);const w=_vac$$module$node_modules$three$build$three_module.dot(_vcp$$module$node_modules$three$build$three_module);if(0<=w&&a<=w)return b.copy(e);f=a*h-f*w;if(0>=f&&0<=h&&0>=w)return n=h/(h-w),b.copy(c).addScaledVector(_vac$$module$node_modules$three$build$three_module,
n);h=g*w-a*k;if(0>=h&&0<=k-g&&0<=a-w)return _vbc$$module$node_modules$three$build$three_module.subVectors(e,d),n=(k-g)/(k-g+(a-w)),b.copy(d).addScaledVector(_vbc$$module$node_modules$three$build$three_module,n);e=1/(h+f+n);d=f*e;n*=e;return b.copy(c).addScaledVector(_vab$$module$node_modules$three$build$three_module,d).addScaledVector(_vac$$module$node_modules$three$build$three_module,n)}equals(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)}}
const _colorKeywords$$module$node_modules$three$build$three_module={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,
darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,
gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,
lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,
orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,
steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},_hslA$$module$node_modules$three$build$three_module={h:0,s:0,l:0},_hslB$$module$node_modules$three$build$three_module={h:0,s:0,l:0};function hue2rgb$$module$node_modules$three$build$three_module(a,b,c){0>c&&(c+=1);1<c&&--c;return c<1/6?a+6*(b-a)*c:.5>c?b:c<2/3?a+6*(b-a)*(2/3-c):a}
function SRGBToLinear$$module$node_modules$three$build$three_module(a){return.04045>a?.0773993808*a:Math.pow(.9478672986*a+.0521327014,2.4)}function LinearToSRGB$$module$node_modules$three$build$three_module(a){return.0031308>a?12.92*a:1.055*Math.pow(a,.41666)-.055}
class Color$$module$node_modules$three$build$three_module{constructor(a,b,c){Object.defineProperty(this,"isColor",{value:!0});return void 0===b&&void 0===c?this.set(a):this.setRGB(a,b,c)}set(a){a&&a.isColor?this.copy(a):"number"===typeof a?this.setHex(a):"string"===typeof a&&this.setStyle(a);return this}setScalar(a){this.b=this.g=this.r=a;return this}setHex(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this}setRGB(a,b,c){this.r=a;this.g=b;this.b=c;return this}setHSL(a,
b,c){a=MathUtils$$module$node_modules$three$build$three_module.euclideanModulo(a,1);b=MathUtils$$module$node_modules$three$build$three_module.clamp(b,0,1);c=MathUtils$$module$node_modules$three$build$three_module.clamp(c,0,1);0===b?this.r=this.g=this.b=c:(b=.5>=c?c*(1+b):c+b-c*b,c=2*c-b,this.r=hue2rgb$$module$node_modules$three$build$three_module(c,b,a+1/3),this.g=hue2rgb$$module$node_modules$three$build$three_module(c,b,a),this.b=hue2rgb$$module$node_modules$three$build$three_module(c,b,a-1/3));
return this}setStyle(a){function b(e){void 0!==e&&1>parseFloat(e)&&console.warn("THREE.Color: Alpha component of "+a+" will be ignored.")}var c;if(c=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(a)){var d=c[2];switch(c[1]){case "rgb":case "rgba":if(c=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(d))return this.r=Math.min(255,parseInt(c[1],10))/255,this.g=Math.min(255,parseInt(c[2],10))/255,this.b=Math.min(255,parseInt(c[3],10))/255,b(c[5]),this;if(c=/^(\d+)%\s*,\s*(\d+)%\s*,\s*(\d+)%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(d))return this.r=
Math.min(100,parseInt(c[1],10))/100,this.g=Math.min(100,parseInt(c[2],10))/100,this.b=Math.min(100,parseInt(c[3],10))/100,b(c[5]),this;break;case "hsl":case "hsla":if(c=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)%\s*,\s*(\d+)%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(d)){d=parseFloat(c[1])/360;const e=parseInt(c[2],10)/100,f=parseInt(c[3],10)/100;b(c[5]);return this.setHSL(d,e,f)}}}else if(c=/^#([A-Fa-f0-9]+)$/.exec(a)){c=c[1];d=c.length;if(3===d)return this.r=parseInt(c.charAt(0)+c.charAt(0),16)/255,this.g=parseInt(c.charAt(1)+
c.charAt(1),16)/255,this.b=parseInt(c.charAt(2)+c.charAt(2),16)/255,this;if(6===d)return this.r=parseInt(c.charAt(0)+c.charAt(1),16)/255,this.g=parseInt(c.charAt(2)+c.charAt(3),16)/255,this.b=parseInt(c.charAt(4)+c.charAt(5),16)/255,this}return a&&0<a.length?this.setColorName(a):this}setColorName(a){const b=_colorKeywords$$module$node_modules$three$build$three_module[a];void 0!==b?this.setHex(b):console.warn("THREE.Color: Unknown color "+a);return this}clone(){return new this.constructor(this.r,this.g,
this.b)}copy(a){this.r=a.r;this.g=a.g;this.b=a.b;return this}copyGammaToLinear(a,b){void 0===b&&(b=2);this.r=Math.pow(a.r,b);this.g=Math.pow(a.g,b);this.b=Math.pow(a.b,b);return this}copyLinearToGamma(a,b){void 0===b&&(b=2);b=0<b?1/b:1;this.r=Math.pow(a.r,b);this.g=Math.pow(a.g,b);this.b=Math.pow(a.b,b);return this}convertGammaToLinear(a){this.copyGammaToLinear(this,a);return this}convertLinearToGamma(a){this.copyLinearToGamma(this,a);return this}copySRGBToLinear(a){this.r=SRGBToLinear$$module$node_modules$three$build$three_module(a.r);
this.g=SRGBToLinear$$module$node_modules$three$build$three_module(a.g);this.b=SRGBToLinear$$module$node_modules$three$build$three_module(a.b);return this}copyLinearToSRGB(a){this.r=LinearToSRGB$$module$node_modules$three$build$three_module(a.r);this.g=LinearToSRGB$$module$node_modules$three$build$three_module(a.g);this.b=LinearToSRGB$$module$node_modules$three$build$three_module(a.b);return this}convertSRGBToLinear(){this.copySRGBToLinear(this);return this}convertLinearToSRGB(){this.copyLinearToSRGB(this);
return this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(a){void 0===a&&(console.warn("THREE.Color: .getHSL() target is now required"),a={h:0,s:0,l:0});const b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d);var f=Math.min(b,c,d);let h;const g=(f+e)/2;if(f===e)f=h=0;else{const k=e-f;f=.5>=g?k/(e+f):k/(2-e-f);switch(e){case b:h=(c-d)/k+(c<d?6:0);break;case c:h=(d-b)/k+2;break;case d:h=(b-c)/k+4}h/=6}a.h=h;a.s=f;a.l=
g;return a}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(a,b,c){this.getHSL(_hslA$$module$node_modules$three$build$three_module);_hslA$$module$node_modules$three$build$three_module.h+=a;_hslA$$module$node_modules$three$build$three_module.s+=b;_hslA$$module$node_modules$three$build$three_module.l+=c;this.setHSL(_hslA$$module$node_modules$three$build$three_module.h,_hslA$$module$node_modules$three$build$three_module.s,_hslA$$module$node_modules$three$build$three_module.l);
return this}add(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this}addColors(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return this}addScalar(a){this.r+=a;this.g+=a;this.b+=a;return this}sub(a){this.r=Math.max(0,this.r-a.r);this.g=Math.max(0,this.g-a.g);this.b=Math.max(0,this.b-a.b);return this}multiply(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this}multiplyScalar(a){this.r*=a;this.g*=a;this.b*=a;return this}lerp(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;
return this}lerpHSL(a,b){this.getHSL(_hslA$$module$node_modules$three$build$three_module);a.getHSL(_hslB$$module$node_modules$three$build$three_module);a=MathUtils$$module$node_modules$three$build$three_module.lerp(_hslA$$module$node_modules$three$build$three_module.h,_hslB$$module$node_modules$three$build$three_module.h,b);const c=MathUtils$$module$node_modules$three$build$three_module.lerp(_hslA$$module$node_modules$three$build$three_module.s,_hslB$$module$node_modules$three$build$three_module.s,
b);b=MathUtils$$module$node_modules$three$build$three_module.lerp(_hslA$$module$node_modules$three$build$three_module.l,_hslB$$module$node_modules$three$build$three_module.l,b);this.setHSL(a,c,b);return this}equals(a){return a.r===this.r&&a.g===this.g&&a.b===this.b}fromArray(a,b){void 0===b&&(b=0);this.r=a[b];this.g=a[b+1];this.b=a[b+2];return this}toArray(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.r;a[b+1]=this.g;a[b+2]=this.b;return a}fromBufferAttribute(a,b){this.r=a.getX(b);this.g=a.getY(b);
this.b=a.getZ(b);!0===a.normalized&&(this.r/=255,this.g/=255,this.b/=255);return this}toJSON(){return this.getHex()}}Color$$module$node_modules$three$build$three_module.NAMES=_colorKeywords$$module$node_modules$three$build$three_module;Color$$module$node_modules$three$build$three_module.prototype.r=1;Color$$module$node_modules$three$build$three_module.prototype.g=1;Color$$module$node_modules$three$build$three_module.prototype.b=1;
class Face3$$module$node_modules$three$build$three_module{constructor(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d&&d.isVector3?d:new Vector3$$module$node_modules$three$build$three_module;this.vertexNormals=Array.isArray(d)?d:[];this.color=e&&e.isColor?e:new Color$$module$node_modules$three$build$three_module;this.vertexColors=Array.isArray(e)?e:[];this.materialIndex=void 0!==f?f:0}clone(){return(new this.constructor).copy(this)}copy(a){this.a=a.a;this.b=a.b;this.c=a.c;this.normal.copy(a.normal);
this.color.copy(a.color);this.materialIndex=a.materialIndex;for(let b=0,c=a.vertexNormals.length;b<c;b++)this.vertexNormals[b]=a.vertexNormals[b].clone();for(let b=0,c=a.vertexColors.length;b<c;b++)this.vertexColors[b]=a.vertexColors[b].clone();return this}}let materialId$$module$node_modules$three$build$three_module=0;
function Material$$module$node_modules$three$build$three_module(){Object.defineProperty(this,"id",{value:materialId$$module$node_modules$three$build$three_module++});this.uuid=MathUtils$$module$node_modules$three$build$three_module.generateUUID();this.name="";this.type="Material";this.fog=!0;this.blending=NormalBlending$$module$node_modules$three$build$three_module;this.side=FrontSide$$module$node_modules$three$build$three_module;this.vertexColors=this.flatShading=!1;this.opacity=1;this.transparent=
!1;this.blendSrc=SrcAlphaFactor$$module$node_modules$three$build$three_module;this.blendDst=OneMinusSrcAlphaFactor$$module$node_modules$three$build$three_module;this.blendEquation=AddEquation$$module$node_modules$three$build$three_module;this.blendEquationAlpha=this.blendDstAlpha=this.blendSrcAlpha=null;this.depthFunc=LessEqualDepth$$module$node_modules$three$build$three_module;this.depthWrite=this.depthTest=!0;this.stencilWriteMask=255;this.stencilFunc=AlwaysStencilFunc$$module$node_modules$three$build$three_module;
this.stencilRef=0;this.stencilFuncMask=255;this.stencilZPass=this.stencilZFail=this.stencilFail=KeepStencilOp$$module$node_modules$three$build$three_module;this.stencilWrite=!1;this.clippingPlanes=null;this.clipShadows=this.clipIntersection=!1;this.shadowSide=null;this.colorWrite=!0;this.precision=null;this.polygonOffset=!1;this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.dithering=!1;this.alphaTest=0;this.premultipliedAlpha=!1;this.toneMapped=this.visible=!0;this.userData={};this.version=
0}
Material$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(EventDispatcher$$module$node_modules$three$build$three_module.prototype),{constructor:Material$$module$node_modules$three$build$three_module,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(a){if(void 0!==a)for(const b in a){const c=a[b];if(void 0===c){console.warn("THREE.Material: '"+b+"' parameter is undefined.");continue}if("shading"===b){console.warn("THREE."+
this.type+": .shading has been removed. Use the boolean .flatShading instead.");this.flatShading=c===FlatShading$$module$node_modules$three$build$three_module?!0:!1;continue}const d=this[b];void 0===d?console.warn("THREE."+this.type+": '"+b+"' is not a property of this material."):d&&d.isColor?d.set(c):d&&d.isVector3&&c&&c.isVector3?d.copy(c):this[b]=c}},toJSON:function(a){function b(e){const f=[];for(const h in e){const g=e[h];delete g.metadata;f.push(g)}return f}var c=void 0===a||"string"===typeof a;
c&&(a={textures:{},images:{}});const d={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};d.uuid=this.uuid;d.type=this.type;""!==this.name&&(d.name=this.name);this.color&&this.color.isColor&&(d.color=this.color.getHex());void 0!==this.roughness&&(d.roughness=this.roughness);void 0!==this.metalness&&(d.metalness=this.metalness);this.sheen&&this.sheen.isColor&&(d.sheen=this.sheen.getHex());this.emissive&&this.emissive.isColor&&(d.emissive=this.emissive.getHex());this.emissiveIntensity&&
1!==this.emissiveIntensity&&(d.emissiveIntensity=this.emissiveIntensity);this.specular&&this.specular.isColor&&(d.specular=this.specular.getHex());void 0!==this.shininess&&(d.shininess=this.shininess);void 0!==this.clearcoat&&(d.clearcoat=this.clearcoat);void 0!==this.clearcoatRoughness&&(d.clearcoatRoughness=this.clearcoatRoughness);this.clearcoatMap&&this.clearcoatMap.isTexture&&(d.clearcoatMap=this.clearcoatMap.toJSON(a).uuid);this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(d.clearcoatRoughnessMap=
this.clearcoatRoughnessMap.toJSON(a).uuid);this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(d.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(a).uuid,d.clearcoatNormalScale=this.clearcoatNormalScale.toArray());this.map&&this.map.isTexture&&(d.map=this.map.toJSON(a).uuid);this.matcap&&this.matcap.isTexture&&(d.matcap=this.matcap.toJSON(a).uuid);this.alphaMap&&this.alphaMap.isTexture&&(d.alphaMap=this.alphaMap.toJSON(a).uuid);this.lightMap&&this.lightMap.isTexture&&(d.lightMap=this.lightMap.toJSON(a).uuid);
this.aoMap&&this.aoMap.isTexture&&(d.aoMap=this.aoMap.toJSON(a).uuid,d.aoMapIntensity=this.aoMapIntensity);this.bumpMap&&this.bumpMap.isTexture&&(d.bumpMap=this.bumpMap.toJSON(a).uuid,d.bumpScale=this.bumpScale);this.normalMap&&this.normalMap.isTexture&&(d.normalMap=this.normalMap.toJSON(a).uuid,d.normalMapType=this.normalMapType,d.normalScale=this.normalScale.toArray());this.displacementMap&&this.displacementMap.isTexture&&(d.displacementMap=this.displacementMap.toJSON(a).uuid,d.displacementScale=
this.displacementScale,d.displacementBias=this.displacementBias);this.roughnessMap&&this.roughnessMap.isTexture&&(d.roughnessMap=this.roughnessMap.toJSON(a).uuid);this.metalnessMap&&this.metalnessMap.isTexture&&(d.metalnessMap=this.metalnessMap.toJSON(a).uuid);this.emissiveMap&&this.emissiveMap.isTexture&&(d.emissiveMap=this.emissiveMap.toJSON(a).uuid);this.specularMap&&this.specularMap.isTexture&&(d.specularMap=this.specularMap.toJSON(a).uuid);this.envMap&&this.envMap.isTexture&&(d.envMap=this.envMap.toJSON(a).uuid,
d.reflectivity=this.reflectivity,d.refractionRatio=this.refractionRatio,void 0!==this.combine&&(d.combine=this.combine),void 0!==this.envMapIntensity&&(d.envMapIntensity=this.envMapIntensity));this.gradientMap&&this.gradientMap.isTexture&&(d.gradientMap=this.gradientMap.toJSON(a).uuid);void 0!==this.size&&(d.size=this.size);void 0!==this.sizeAttenuation&&(d.sizeAttenuation=this.sizeAttenuation);this.blending!==NormalBlending$$module$node_modules$three$build$three_module&&(d.blending=this.blending);
!0===this.flatShading&&(d.flatShading=this.flatShading);this.side!==FrontSide$$module$node_modules$three$build$three_module&&(d.side=this.side);this.vertexColors&&(d.vertexColors=!0);1>this.opacity&&(d.opacity=this.opacity);!0===this.transparent&&(d.transparent=this.transparent);d.depthFunc=this.depthFunc;d.depthTest=this.depthTest;d.depthWrite=this.depthWrite;d.stencilWrite=this.stencilWrite;d.stencilWriteMask=this.stencilWriteMask;d.stencilFunc=this.stencilFunc;d.stencilRef=this.stencilRef;d.stencilFuncMask=
this.stencilFuncMask;d.stencilFail=this.stencilFail;d.stencilZFail=this.stencilZFail;d.stencilZPass=this.stencilZPass;this.rotation&&0!==this.rotation&&(d.rotation=this.rotation);!0===this.polygonOffset&&(d.polygonOffset=!0);0!==this.polygonOffsetFactor&&(d.polygonOffsetFactor=this.polygonOffsetFactor);0!==this.polygonOffsetUnits&&(d.polygonOffsetUnits=this.polygonOffsetUnits);this.linewidth&&1!==this.linewidth&&(d.linewidth=this.linewidth);void 0!==this.dashSize&&(d.dashSize=this.dashSize);void 0!==
this.gapSize&&(d.gapSize=this.gapSize);void 0!==this.scale&&(d.scale=this.scale);!0===this.dithering&&(d.dithering=!0);0<this.alphaTest&&(d.alphaTest=this.alphaTest);!0===this.premultipliedAlpha&&(d.premultipliedAlpha=this.premultipliedAlpha);!0===this.wireframe&&(d.wireframe=this.wireframe);1<this.wireframeLinewidth&&(d.wireframeLinewidth=this.wireframeLinewidth);"round"!==this.wireframeLinecap&&(d.wireframeLinecap=this.wireframeLinecap);"round"!==this.wireframeLinejoin&&(d.wireframeLinejoin=this.wireframeLinejoin);
!0===this.morphTargets&&(d.morphTargets=!0);!0===this.morphNormals&&(d.morphNormals=!0);!0===this.skinning&&(d.skinning=!0);!1===this.visible&&(d.visible=!1);!1===this.toneMapped&&(d.toneMapped=!1);"{}"!==JSON.stringify(this.userData)&&(d.userData=this.userData);c&&(c=b(a.textures),a=b(a.images),0<c.length&&(d.textures=c),0<a.length&&(d.images=a));return d},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.name=a.name;this.fog=a.fog;this.blending=a.blending;this.side=
a.side;this.flatShading=a.flatShading;this.vertexColors=a.vertexColors;this.opacity=a.opacity;this.transparent=a.transparent;this.blendSrc=a.blendSrc;this.blendDst=a.blendDst;this.blendEquation=a.blendEquation;this.blendSrcAlpha=a.blendSrcAlpha;this.blendDstAlpha=a.blendDstAlpha;this.blendEquationAlpha=a.blendEquationAlpha;this.depthFunc=a.depthFunc;this.depthTest=a.depthTest;this.depthWrite=a.depthWrite;this.stencilWriteMask=a.stencilWriteMask;this.stencilFunc=a.stencilFunc;this.stencilRef=a.stencilRef;
this.stencilFuncMask=a.stencilFuncMask;this.stencilFail=a.stencilFail;this.stencilZFail=a.stencilZFail;this.stencilZPass=a.stencilZPass;this.stencilWrite=a.stencilWrite;const b=a.clippingPlanes;let c=null;if(null!==b){const d=b.length;c=Array(d);for(let e=0;e!==d;++e)c[e]=b[e].clone()}this.clippingPlanes=c;this.clipIntersection=a.clipIntersection;this.clipShadows=a.clipShadows;this.shadowSide=a.shadowSide;this.colorWrite=a.colorWrite;this.precision=a.precision;this.polygonOffset=a.polygonOffset;this.polygonOffsetFactor=
a.polygonOffsetFactor;this.polygonOffsetUnits=a.polygonOffsetUnits;this.dithering=a.dithering;this.alphaTest=a.alphaTest;this.premultipliedAlpha=a.premultipliedAlpha;this.visible=a.visible;this.toneMapped=a.toneMapped;this.userData=JSON.parse(JSON.stringify(a.userData));return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Object.defineProperty(Material$$module$node_modules$three$build$three_module.prototype,"needsUpdate",{set:function(a){!0===a&&this.version++}});
function MeshBasicMaterial$$module$node_modules$three$build$three_module(a){Material$$module$node_modules$three$build$three_module.call(this);this.type="MeshBasicMaterial";this.color=new Color$$module$node_modules$three$build$three_module(16777215);this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.envMap=this.alphaMap=this.specularMap=null;this.combine=MultiplyOperation$$module$node_modules$three$build$three_module;this.reflectivity=1;this.refractionRatio=
.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphTargets=this.skinning=!1;this.setValues(a)}MeshBasicMaterial$$module$node_modules$three$build$three_module.prototype=Object.create(Material$$module$node_modules$three$build$three_module.prototype);MeshBasicMaterial$$module$node_modules$three$build$three_module.prototype.constructor=MeshBasicMaterial$$module$node_modules$three$build$three_module;
MeshBasicMaterial$$module$node_modules$three$build$three_module.prototype.isMeshBasicMaterial=!0;
MeshBasicMaterial$$module$node_modules$three$build$three_module.prototype.copy=function(a){Material$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;
this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;return this};const _vector$3$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_vector2$1$$module$node_modules$three$build$three_module=new Vector2$$module$node_modules$three$build$three_module;
function BufferAttribute$$module$node_modules$three$build$three_module(a,b,c){if(Array.isArray(a))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="";this.array=a;this.itemSize=b;this.count=void 0!==a?a.length/b:0;this.normalized=!0===c;this.usage=StaticDrawUsage$$module$node_modules$three$build$three_module;this.updateRange={offset:0,count:-1};this.version=0}
Object.defineProperty(BufferAttribute$$module$node_modules$three$build$three_module.prototype,"needsUpdate",{set:function(a){!0===a&&this.version++}});
Object.assign(BufferAttribute$$module$node_modules$three$build$three_module.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(a){this.usage=a;return this},copy:function(a){this.name=a.name;this.array=new a.array.constructor(a.array);this.itemSize=a.itemSize;this.count=a.count;this.normalized=a.normalized;this.usage=a.usage;return this},copyAt:function(a,b,c){a*=this.itemSize;c*=b.itemSize;for(let d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d];return this},copyArray:function(a){this.array.set(a);
return this},copyColorsArray:function(a){const b=this.array;let c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",d),f=new Color$$module$node_modules$three$build$three_module);b[c++]=f.r;b[c++]=f.g;b[c++]=f.b}return this},copyVector2sArray:function(a){const b=this.array;let c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",d),
f=new Vector2$$module$node_modules$three$build$three_module);b[c++]=f.x;b[c++]=f.y}return this},copyVector3sArray:function(a){const b=this.array;let c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",d),f=new Vector3$$module$node_modules$three$build$three_module);b[c++]=f.x;b[c++]=f.y;b[c++]=f.z}return this},copyVector4sArray:function(a){const b=this.array;let c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===
f&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",d),f=new Vector4$$module$node_modules$three$build$three_module);b[c++]=f.x;b[c++]=f.y;b[c++]=f.z;b[c++]=f.w}return this},applyMatrix3:function(a){if(2===this.itemSize)for(let b=0,c=this.count;b<c;b++)_vector2$1$$module$node_modules$three$build$three_module.fromBufferAttribute(this,b),_vector2$1$$module$node_modules$three$build$three_module.applyMatrix3(a),this.setXY(b,_vector2$1$$module$node_modules$three$build$three_module.x,
_vector2$1$$module$node_modules$three$build$three_module.y);else if(3===this.itemSize)for(let b=0,c=this.count;b<c;b++)_vector$3$$module$node_modules$three$build$three_module.fromBufferAttribute(this,b),_vector$3$$module$node_modules$three$build$three_module.applyMatrix3(a),this.setXYZ(b,_vector$3$$module$node_modules$three$build$three_module.x,_vector$3$$module$node_modules$three$build$three_module.y,_vector$3$$module$node_modules$three$build$three_module.z);return this},applyMatrix4:function(a){for(let b=
0,c=this.count;b<c;b++)_vector$3$$module$node_modules$three$build$three_module.x=this.getX(b),_vector$3$$module$node_modules$three$build$three_module.y=this.getY(b),_vector$3$$module$node_modules$three$build$three_module.z=this.getZ(b),_vector$3$$module$node_modules$three$build$three_module.applyMatrix4(a),this.setXYZ(b,_vector$3$$module$node_modules$three$build$three_module.x,_vector$3$$module$node_modules$three$build$three_module.y,_vector$3$$module$node_modules$three$build$three_module.z);return this},
applyNormalMatrix:function(a){for(let b=0,c=this.count;b<c;b++)_vector$3$$module$node_modules$three$build$three_module.x=this.getX(b),_vector$3$$module$node_modules$three$build$three_module.y=this.getY(b),_vector$3$$module$node_modules$three$build$three_module.z=this.getZ(b),_vector$3$$module$node_modules$three$build$three_module.applyNormalMatrix(a),this.setXYZ(b,_vector$3$$module$node_modules$three$build$three_module.x,_vector$3$$module$node_modules$three$build$three_module.y,_vector$3$$module$node_modules$three$build$three_module.z);
return this},transformDirection:function(a){for(let b=0,c=this.count;b<c;b++)_vector$3$$module$node_modules$three$build$three_module.x=this.getX(b),_vector$3$$module$node_modules$three$build$three_module.y=this.getY(b),_vector$3$$module$node_modules$three$build$three_module.z=this.getZ(b),_vector$3$$module$node_modules$three$build$three_module.transformDirection(a),this.setXYZ(b,_vector$3$$module$node_modules$three$build$three_module.x,_vector$3$$module$node_modules$three$build$three_module.y,_vector$3$$module$node_modules$three$build$three_module.z);
return this},set:function(a,b){void 0===b&&(b=0);this.array.set(a,b);return this},getX:function(a){return this.array[a*this.itemSize]},setX:function(a,b){this.array[a*this.itemSize]=b;return this},getY:function(a){return this.array[a*this.itemSize+1]},setY:function(a,b){this.array[a*this.itemSize+1]=b;return this},getZ:function(a){return this.array[a*this.itemSize+2]},setZ:function(a,b){this.array[a*this.itemSize+2]=b;return this},getW:function(a){return this.array[a*this.itemSize+3]},setW:function(a,
b){this.array[a*this.itemSize+3]=b;return this},setXY:function(a,b,c){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;return this},setXYZ:function(a,b,c,d){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;this.array[a+2]=d;return this},setXYZW:function(a,b,c,d,e){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;this.array[a+2]=d;this.array[a+3]=e;return this},onUpload:function(a){this.onUploadCallback=a;return this},clone:function(){return(new this.constructor(this.array,this.itemSize)).copy(this)},
toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}});function Int8BufferAttribute$$module$node_modules$three$build$three_module(a,b,c){BufferAttribute$$module$node_modules$three$build$three_module.call(this,new Int8Array(a),b,c)}Int8BufferAttribute$$module$node_modules$three$build$three_module.prototype=Object.create(BufferAttribute$$module$node_modules$three$build$three_module.prototype);
Int8BufferAttribute$$module$node_modules$three$build$three_module.prototype.constructor=Int8BufferAttribute$$module$node_modules$three$build$three_module;function Uint8BufferAttribute$$module$node_modules$three$build$three_module(a,b,c){BufferAttribute$$module$node_modules$three$build$three_module.call(this,new Uint8Array(a),b,c)}Uint8BufferAttribute$$module$node_modules$three$build$three_module.prototype=Object.create(BufferAttribute$$module$node_modules$three$build$three_module.prototype);
Uint8BufferAttribute$$module$node_modules$three$build$three_module.prototype.constructor=Uint8BufferAttribute$$module$node_modules$three$build$three_module;function Uint8ClampedBufferAttribute$$module$node_modules$three$build$three_module(a,b,c){BufferAttribute$$module$node_modules$three$build$three_module.call(this,new Uint8ClampedArray(a),b,c)}Uint8ClampedBufferAttribute$$module$node_modules$three$build$three_module.prototype=Object.create(BufferAttribute$$module$node_modules$three$build$three_module.prototype);
Uint8ClampedBufferAttribute$$module$node_modules$three$build$three_module.prototype.constructor=Uint8ClampedBufferAttribute$$module$node_modules$three$build$three_module;function Int16BufferAttribute$$module$node_modules$three$build$three_module(a,b,c){BufferAttribute$$module$node_modules$three$build$three_module.call(this,new Int16Array(a),b,c)}Int16BufferAttribute$$module$node_modules$three$build$three_module.prototype=Object.create(BufferAttribute$$module$node_modules$three$build$three_module.prototype);
Int16BufferAttribute$$module$node_modules$three$build$three_module.prototype.constructor=Int16BufferAttribute$$module$node_modules$three$build$three_module;function Uint16BufferAttribute$$module$node_modules$three$build$three_module(a,b,c){BufferAttribute$$module$node_modules$three$build$three_module.call(this,new Uint16Array(a),b,c)}Uint16BufferAttribute$$module$node_modules$three$build$three_module.prototype=Object.create(BufferAttribute$$module$node_modules$three$build$three_module.prototype);
Uint16BufferAttribute$$module$node_modules$three$build$three_module.prototype.constructor=Uint16BufferAttribute$$module$node_modules$three$build$three_module;function Int32BufferAttribute$$module$node_modules$three$build$three_module(a,b,c){BufferAttribute$$module$node_modules$three$build$three_module.call(this,new Int32Array(a),b,c)}Int32BufferAttribute$$module$node_modules$three$build$three_module.prototype=Object.create(BufferAttribute$$module$node_modules$three$build$three_module.prototype);
Int32BufferAttribute$$module$node_modules$three$build$three_module.prototype.constructor=Int32BufferAttribute$$module$node_modules$three$build$three_module;function Uint32BufferAttribute$$module$node_modules$three$build$three_module(a,b,c){BufferAttribute$$module$node_modules$three$build$three_module.call(this,new Uint32Array(a),b,c)}Uint32BufferAttribute$$module$node_modules$three$build$three_module.prototype=Object.create(BufferAttribute$$module$node_modules$three$build$three_module.prototype);
Uint32BufferAttribute$$module$node_modules$three$build$three_module.prototype.constructor=Uint32BufferAttribute$$module$node_modules$three$build$three_module;function Float32BufferAttribute$$module$node_modules$three$build$three_module(a,b,c){BufferAttribute$$module$node_modules$three$build$three_module.call(this,new Float32Array(a),b,c)}Float32BufferAttribute$$module$node_modules$three$build$three_module.prototype=Object.create(BufferAttribute$$module$node_modules$three$build$three_module.prototype);
Float32BufferAttribute$$module$node_modules$three$build$three_module.prototype.constructor=Float32BufferAttribute$$module$node_modules$three$build$three_module;function Float64BufferAttribute$$module$node_modules$three$build$three_module(a,b,c){BufferAttribute$$module$node_modules$three$build$three_module.call(this,new Float64Array(a),b,c)}Float64BufferAttribute$$module$node_modules$three$build$three_module.prototype=Object.create(BufferAttribute$$module$node_modules$three$build$three_module.prototype);
Float64BufferAttribute$$module$node_modules$three$build$three_module.prototype.constructor=Float64BufferAttribute$$module$node_modules$three$build$three_module;
class DirectGeometry$$module$node_modules$three$build$three_module{constructor(){this.vertices=[];this.normals=[];this.colors=[];this.uvs=[];this.uvs2=[];this.groups=[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.uvsNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.verticesNeedUpdate=!1}computeGroups(a){const b=[];let c,d=void 0;const e=a.faces;for(a=0;a<e.length;a++){const f=e[a];f.materialIndex!==d&&
(d=f.materialIndex,void 0!==c&&(c.count=3*a-c.start,b.push(c)),c={start:3*a,materialIndex:d})}void 0!==c&&(c.count=3*a-c.start,b.push(c));this.groups=b}fromGeometry(a){const b=a.faces,c=a.vertices,d=a.faceVertexUvs,e=d[0]&&0<d[0].length,f=d[1]&&0<d[1].length,h=a.morphTargets,g=h.length;let k;if(0<g){k=[];for(var n=0;n<g;n++)k[n]={name:h[n].name,data:[]};this.morphTargets.position=k}n=a.morphNormals;const w=n.length;let v;if(0<w){v=[];for(var x=0;x<w;x++)v[x]={name:n[x].name,data:[]};this.morphTargets.normal=
v}x=a.skinIndices;const z=a.skinWeights,F=x.length===c.length,N=z.length===c.length;0<c.length&&0===b.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let G=0;G<b.length;G++){const O=b[G];this.vertices.push(c[O.a],c[O.b],c[O.c]);var p=O.vertexNormals;3===p.length?this.normals.push(p[0],p[1],p[2]):(p=O.normal,this.normals.push(p,p,p));p=O.vertexColors;3===p.length?this.colors.push(p[0],p[1],p[2]):(p=O.color,this.colors.push(p,p,p));!0===e&&(p=d[0][G],void 0!==
p?this.uvs.push(p[0],p[1],p[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",G),this.uvs.push(new Vector2$$module$node_modules$three$build$three_module,new Vector2$$module$node_modules$three$build$three_module,new Vector2$$module$node_modules$three$build$three_module)));!0===f&&(p=d[1][G],void 0!==p?this.uvs2.push(p[0],p[1],p[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",G),this.uvs2.push(new Vector2$$module$node_modules$three$build$three_module,
new Vector2$$module$node_modules$three$build$three_module,new Vector2$$module$node_modules$three$build$three_module)));for(p=0;p<g;p++){var A=h[p].vertices;k[p].data.push(A[O.a],A[O.b],A[O.c])}for(p=0;p<w;p++)A=n[p].vertexNormals[G],v[p].data.push(A.a,A.b,A.c);F&&this.skinIndices.push(x[O.a],x[O.b],x[O.c]);N&&this.skinWeights.push(z[O.a],z[O.b],z[O.c])}this.computeGroups(a);this.verticesNeedUpdate=a.verticesNeedUpdate;this.normalsNeedUpdate=a.normalsNeedUpdate;this.colorsNeedUpdate=a.colorsNeedUpdate;
this.uvsNeedUpdate=a.uvsNeedUpdate;this.groupsNeedUpdate=a.groupsNeedUpdate;null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());return this}}function arrayMax$$module$node_modules$three$build$three_module(a){if(0===a.length)return-Infinity;let b=a[0];for(let c=1,d=a.length;c<d;++c)a[c]>b&&(b=a[c]);return b}let _bufferGeometryId$$module$node_modules$three$build$three_module=1;
const _m1$2$$module$node_modules$three$build$three_module=new Matrix4$$module$node_modules$three$build$three_module,_obj$$module$node_modules$three$build$three_module=new Object3D$$module$node_modules$three$build$three_module,_offset$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_box$2$$module$node_modules$three$build$three_module=new Box3$$module$node_modules$three$build$three_module,_boxMorphTargets$$module$node_modules$three$build$three_module=
new Box3$$module$node_modules$three$build$three_module,_vector$4$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module;
function BufferGeometry$$module$node_modules$three$build$three_module(){Object.defineProperty(this,"id",{value:_bufferGeometryId$$module$node_modules$three$build$three_module+=2});this.uuid=MathUtils$$module$node_modules$three$build$three_module.generateUUID();this.name="";this.type="BufferGeometry";this.index=null;this.attributes={};this.morphAttributes={};this.morphTargetsRelative=!1;this.groups=[];this.boundingSphere=this.boundingBox=null;this.drawRange={start:0,count:Infinity};this.userData={}}
BufferGeometry$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(EventDispatcher$$module$node_modules$three$build$three_module.prototype),{constructor:BufferGeometry$$module$node_modules$three$build$three_module,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(a){Array.isArray(a)?this.index=new (65535<arrayMax$$module$node_modules$three$build$three_module(a)?Uint32BufferAttribute$$module$node_modules$three$build$three_module:Uint16BufferAttribute$$module$node_modules$three$build$three_module)(a,
1):this.index=a},getAttribute:function(a){return this.attributes[a]},setAttribute:function(a,b){this.attributes[a]=b;return this},deleteAttribute:function(a){delete this.attributes[a];return this},addGroup:function(a,b,c){this.groups.push({start:a,count:b,materialIndex:void 0!==c?c:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(a,b){this.drawRange.start=a;this.drawRange.count=b},applyMatrix4:function(a){var b=this.attributes.position;void 0!==b&&(b.applyMatrix4(a),b.needsUpdate=
!0);b=this.attributes.normal;if(void 0!==b){const c=(new Matrix3$$module$node_modules$three$build$three_module).getNormalMatrix(a);b.applyNormalMatrix(c);b.needsUpdate=!0}b=this.attributes.tangent;void 0!==b&&(b.transformDirection(a),b.needsUpdate=!0);null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();return this},rotateX:function(a){_m1$2$$module$node_modules$three$build$three_module.makeRotationX(a);this.applyMatrix4(_m1$2$$module$node_modules$three$build$three_module);
return this},rotateY:function(a){_m1$2$$module$node_modules$three$build$three_module.makeRotationY(a);this.applyMatrix4(_m1$2$$module$node_modules$three$build$three_module);return this},rotateZ:function(a){_m1$2$$module$node_modules$three$build$three_module.makeRotationZ(a);this.applyMatrix4(_m1$2$$module$node_modules$three$build$three_module);return this},translate:function(a,b,c){_m1$2$$module$node_modules$three$build$three_module.makeTranslation(a,b,c);this.applyMatrix4(_m1$2$$module$node_modules$three$build$three_module);
return this},scale:function(a,b,c){_m1$2$$module$node_modules$three$build$three_module.makeScale(a,b,c);this.applyMatrix4(_m1$2$$module$node_modules$three$build$three_module);return this},lookAt:function(a){_obj$$module$node_modules$three$build$three_module.lookAt(a);_obj$$module$node_modules$three$build$three_module.updateMatrix();this.applyMatrix4(_obj$$module$node_modules$three$build$three_module.matrix);return this},center:function(){this.computeBoundingBox();this.boundingBox.getCenter(_offset$$module$node_modules$three$build$three_module).negate();
this.translate(_offset$$module$node_modules$three$build$three_module.x,_offset$$module$node_modules$three$build$three_module.y,_offset$$module$node_modules$three$build$three_module.z);return this},setFromObject:function(a){const b=a.geometry;if(a.isPoints||a.isLine){a=new Float32BufferAttribute$$module$node_modules$three$build$three_module(3*b.vertices.length,3);const c=new Float32BufferAttribute$$module$node_modules$three$build$three_module(3*b.colors.length,3);this.setAttribute("position",a.copyVector3sArray(b.vertices));
this.setAttribute("color",c.copyColorsArray(b.colors));b.lineDistances&&b.lineDistances.length===b.vertices.length&&(a=new Float32BufferAttribute$$module$node_modules$three$build$three_module(b.lineDistances.length,1),this.setAttribute("lineDistance",a.copyArray(b.lineDistances)));null!==b.boundingSphere&&(this.boundingSphere=b.boundingSphere.clone());null!==b.boundingBox&&(this.boundingBox=b.boundingBox.clone())}else a.isMesh&&b&&b.isGeometry&&this.fromGeometry(b);return this},setFromPoints:function(a){const b=
[];for(let c=0,d=a.length;c<d;c++){const e=a[c];b.push(e.x,e.y,e.z||0)}this.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(b,3));return this},updateFromObject:function(a){let b=a.geometry;if(a.isMesh){var c=b.__directGeometry;!0===b.elementsNeedUpdate&&(c=void 0,b.elementsNeedUpdate=!1);if(void 0===c)return this.fromGeometry(b);c.verticesNeedUpdate=b.verticesNeedUpdate;c.normalsNeedUpdate=b.normalsNeedUpdate;c.colorsNeedUpdate=b.colorsNeedUpdate;c.uvsNeedUpdate=
b.uvsNeedUpdate;c.groupsNeedUpdate=b.groupsNeedUpdate;b.verticesNeedUpdate=!1;b.normalsNeedUpdate=!1;b.colorsNeedUpdate=!1;b.uvsNeedUpdate=!1;b.groupsNeedUpdate=!1;b=c}!0===b.verticesNeedUpdate&&(c=this.attributes.position,void 0!==c&&(c.copyVector3sArray(b.vertices),c.needsUpdate=!0),b.verticesNeedUpdate=!1);!0===b.normalsNeedUpdate&&(c=this.attributes.normal,void 0!==c&&(c.copyVector3sArray(b.normals),c.needsUpdate=!0),b.normalsNeedUpdate=!1);!0===b.colorsNeedUpdate&&(c=this.attributes.color,void 0!==
c&&(c.copyColorsArray(b.colors),c.needsUpdate=!0),b.colorsNeedUpdate=!1);b.uvsNeedUpdate&&(c=this.attributes.uv,void 0!==c&&(c.copyVector2sArray(b.uvs),c.needsUpdate=!0),b.uvsNeedUpdate=!1);b.lineDistancesNeedUpdate&&(c=this.attributes.lineDistance,void 0!==c&&(c.copyArray(b.lineDistances),c.needsUpdate=!0),b.lineDistancesNeedUpdate=!1);b.groupsNeedUpdate&&(b.computeGroups(a.geometry),this.groups=b.groups,b.groupsNeedUpdate=!1);return this},fromGeometry:function(a){a.__directGeometry=(new DirectGeometry$$module$node_modules$three$build$three_module).fromGeometry(a);
return this.fromDirectGeometry(a.__directGeometry)},fromDirectGeometry:function(a){var b=new Float32Array(3*a.vertices.length);this.setAttribute("position",(new BufferAttribute$$module$node_modules$three$build$three_module(b,3)).copyVector3sArray(a.vertices));0<a.normals.length&&(b=new Float32Array(3*a.normals.length),this.setAttribute("normal",(new BufferAttribute$$module$node_modules$three$build$three_module(b,3)).copyVector3sArray(a.normals)));0<a.colors.length&&(b=new Float32Array(3*a.colors.length),
this.setAttribute("color",(new BufferAttribute$$module$node_modules$three$build$three_module(b,3)).copyColorsArray(a.colors)));0<a.uvs.length&&(b=new Float32Array(2*a.uvs.length),this.setAttribute("uv",(new BufferAttribute$$module$node_modules$three$build$three_module(b,2)).copyVector2sArray(a.uvs)));0<a.uvs2.length&&(b=new Float32Array(2*a.uvs2.length),this.setAttribute("uv2",(new BufferAttribute$$module$node_modules$three$build$three_module(b,2)).copyVector2sArray(a.uvs2)));this.groups=a.groups;
for(var c in a.morphTargets){b=[];const d=a.morphTargets[c];for(let e=0,f=d.length;e<f;e++){const h=d[e],g=new Float32BufferAttribute$$module$node_modules$three$build$three_module(3*h.data.length,3);g.name=h.name;b.push(g.copyVector3sArray(h.data))}this.morphAttributes[c]=b}0<a.skinIndices.length&&(c=new Float32BufferAttribute$$module$node_modules$three$build$three_module(4*a.skinIndices.length,4),this.setAttribute("skinIndex",c.copyVector4sArray(a.skinIndices)));0<a.skinWeights.length&&(c=new Float32BufferAttribute$$module$node_modules$three$build$three_module(4*
a.skinWeights.length,4),this.setAttribute("skinWeight",c.copyVector4sArray(a.skinWeights)));null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());return this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Box3$$module$node_modules$three$build$three_module);const a=this.attributes.position,b=this.morphAttributes.position;if(a&&a.isGLBufferAttribute)console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',
this),this.boundingBox.set(new Vector3$$module$node_modules$three$build$three_module(-Infinity,-Infinity,-Infinity),new Vector3$$module$node_modules$three$build$three_module(Infinity,Infinity,Infinity));else{if(void 0!==a){if(this.boundingBox.setFromBufferAttribute(a),b)for(let c=0,d=b.length;c<d;c++)_box$2$$module$node_modules$three$build$three_module.setFromBufferAttribute(b[c]),this.morphTargetsRelative?(_vector$4$$module$node_modules$three$build$three_module.addVectors(this.boundingBox.min,_box$2$$module$node_modules$three$build$three_module.min),
this.boundingBox.expandByPoint(_vector$4$$module$node_modules$three$build$three_module),_vector$4$$module$node_modules$three$build$three_module.addVectors(this.boundingBox.max,_box$2$$module$node_modules$three$build$three_module.max),this.boundingBox.expandByPoint(_vector$4$$module$node_modules$three$build$three_module)):(this.boundingBox.expandByPoint(_box$2$$module$node_modules$three$build$three_module.min),this.boundingBox.expandByPoint(_box$2$$module$node_modules$three$build$three_module.max))}else this.boundingBox.makeEmpty();
(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Sphere$$module$node_modules$three$build$three_module);const a=this.attributes.position,b=this.morphAttributes.position;if(a&&a.isGLBufferAttribute)console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',
this),this.boundingSphere.set(new Vector3$$module$node_modules$three$build$three_module,Infinity);else if(a){const c=this.boundingSphere.center;_box$2$$module$node_modules$three$build$three_module.setFromBufferAttribute(a);if(b)for(let e=0,f=b.length;e<f;e++)_boxMorphTargets$$module$node_modules$three$build$three_module.setFromBufferAttribute(b[e]),this.morphTargetsRelative?(_vector$4$$module$node_modules$three$build$three_module.addVectors(_box$2$$module$node_modules$three$build$three_module.min,
_boxMorphTargets$$module$node_modules$three$build$three_module.min),_box$2$$module$node_modules$three$build$three_module.expandByPoint(_vector$4$$module$node_modules$three$build$three_module),_vector$4$$module$node_modules$three$build$three_module.addVectors(_box$2$$module$node_modules$three$build$three_module.max,_boxMorphTargets$$module$node_modules$three$build$three_module.max),_box$2$$module$node_modules$three$build$three_module.expandByPoint(_vector$4$$module$node_modules$three$build$three_module)):
(_box$2$$module$node_modules$three$build$three_module.expandByPoint(_boxMorphTargets$$module$node_modules$three$build$three_module.min),_box$2$$module$node_modules$three$build$three_module.expandByPoint(_boxMorphTargets$$module$node_modules$three$build$three_module.max));_box$2$$module$node_modules$three$build$three_module.getCenter(c);let d=0;for(let e=0,f=a.count;e<f;e++)_vector$4$$module$node_modules$three$build$three_module.fromBufferAttribute(a,e),d=Math.max(d,c.distanceToSquared(_vector$4$$module$node_modules$three$build$three_module));
if(b)for(let e=0,f=b.length;e<f;e++){const h=b[e],g=this.morphTargetsRelative;for(let k=0,n=h.count;k<n;k++)_vector$4$$module$node_modules$three$build$three_module.fromBufferAttribute(h,k),g&&(_offset$$module$node_modules$three$build$three_module.fromBufferAttribute(a,k),_vector$4$$module$node_modules$three$build$three_module.add(_offset$$module$node_modules$three$build$three_module)),d=Math.max(d,c.distanceToSquared(_vector$4$$module$node_modules$three$build$three_module))}this.boundingSphere.radius=
Math.sqrt(d);isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){const a=this.index,b=this.getAttribute("position");if(void 0!==b){let c=this.getAttribute("normal");if(void 0===c)c=new BufferAttribute$$module$node_modules$three$build$three_module(new Float32Array(3*b.count),3),this.setAttribute("normal",
c);else for(let v=0,x=c.count;v<x;v++)c.setXYZ(v,0,0,0);const d=new Vector3$$module$node_modules$three$build$three_module,e=new Vector3$$module$node_modules$three$build$three_module,f=new Vector3$$module$node_modules$three$build$three_module,h=new Vector3$$module$node_modules$three$build$three_module,g=new Vector3$$module$node_modules$three$build$three_module,k=new Vector3$$module$node_modules$three$build$three_module,n=new Vector3$$module$node_modules$three$build$three_module,w=new Vector3$$module$node_modules$three$build$three_module;
if(a)for(let v=0,x=a.count;v<x;v+=3){const z=a.getX(v+0),F=a.getX(v+1),N=a.getX(v+2);d.fromBufferAttribute(b,z);e.fromBufferAttribute(b,F);f.fromBufferAttribute(b,N);n.subVectors(f,e);w.subVectors(d,e);n.cross(w);h.fromBufferAttribute(c,z);g.fromBufferAttribute(c,F);k.fromBufferAttribute(c,N);h.add(n);g.add(n);k.add(n);c.setXYZ(z,h.x,h.y,h.z);c.setXYZ(F,g.x,g.y,g.z);c.setXYZ(N,k.x,k.y,k.z)}else for(let v=0,x=b.count;v<x;v+=3)d.fromBufferAttribute(b,v+0),e.fromBufferAttribute(b,v+1),f.fromBufferAttribute(b,
v+2),n.subVectors(f,e),w.subVectors(d,e),n.cross(w),c.setXYZ(v+0,n.x,n.y,n.z),c.setXYZ(v+1,n.x,n.y,n.z),c.setXYZ(v+2,n.x,n.y,n.z);this.normalizeNormals();c.needsUpdate=!0}},merge:function(a,b){if(a&&a.isBufferGeometry){void 0===b&&(b=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var c=this.attributes;for(const e in c){if(void 0===a.attributes[e])continue;const f=c[e].array;var d=
a.attributes[e];const h=d.array;d=d.itemSize*b;const g=Math.min(h.length,f.length-d);for(let k=0,n=d;k<g;k++,n++)f[n]=h[k]}return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",a)},normalizeNormals:function(){const a=this.attributes.normal;for(let b=0,c=a.count;b<c;b++)_vector$4$$module$node_modules$three$build$three_module.fromBufferAttribute(a,b),_vector$4$$module$node_modules$three$build$three_module.normalize(),a.setXYZ(b,_vector$4$$module$node_modules$three$build$three_module.x,
_vector$4$$module$node_modules$three$build$three_module.y,_vector$4$$module$node_modules$three$build$three_module.z)},toNonIndexed:function(){function a(g,k){const n=g.array,w=g.itemSize;g=g.normalized;const v=new n.constructor(k.length*w);let x,z=0;for(let F=0,N=k.length;F<N;F++){x=k[F]*w;for(let p=0;p<w;p++)v[z++]=n[x++]}return new BufferAttribute$$module$node_modules$three$build$three_module(v,w,g)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),
this;const b=new BufferGeometry$$module$node_modules$three$build$three_module;var c=this.index.array,d=this.attributes;for(var e in d){var f=a(d[e],c);b.setAttribute(e,f)}d=this.morphAttributes;for(var h in d){e=[];f=d[h];for(let g=0,k=f.length;g<k;g++){const n=a(f[g],c);e.push(n)}b.morphAttributes[h]=e}b.morphTargetsRelative=this.morphTargetsRelative;c=this.groups;for(let g=0,k=c.length;g<k;g++)h=c[g],b.addGroup(h.start,h.count,h.materialIndex);return b},toJSON:function(){const a={metadata:{version:4.5,
type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};a.uuid=this.uuid;a.type=this.type;""!==this.name&&(a.name=this.name);0<Object.keys(this.userData).length&&(a.userData=this.userData);if(void 0!==this.parameters){var b=this.parameters;for(var c in b)void 0!==b[c]&&(a[c]=b[c]);return a}a.data={attributes:{}};c=this.index;null!==c&&(a.data.index={type:c.array.constructor.name,array:Array.prototype.slice.call(c.array)});c=this.attributes;for(var d in c){var e=c[d],f=e.toJSON(a.data);""!==e.name&&
(f.name=e.name);a.data.attributes[d]=f}d={};c=!1;for(b in this.morphAttributes){e=this.morphAttributes[b];f=[];for(let h=0,g=e.length;h<g;h++){const k=e[h],n=k.toJSON(a.data);""!==k.name&&(n.name=k.name);f.push(n)}0<f.length&&(d[b]=f,c=!0)}c&&(a.data.morphAttributes=d,a.data.morphTargetsRelative=this.morphTargetsRelative);b=this.groups;0<b.length&&(a.data.groups=JSON.parse(JSON.stringify(b)));b=this.boundingSphere;null!==b&&(a.data.boundingSphere={center:b.center.toArray(),radius:b.radius});return a},
clone:function(){return(new BufferGeometry$$module$node_modules$three$build$three_module).copy(this)},copy:function(a){this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingSphere=this.boundingBox=null;var b={};this.name=a.name;var c=a.index;null!==c&&this.setIndex(c.clone(b));c=a.attributes;for(var d in c)this.setAttribute(d,c[d].clone(b));d=a.morphAttributes;for(var e in d){c=[];const f=d[e];for(let h=0,g=f.length;h<g;h++)c.push(f[h].clone(b));this.morphAttributes[e]=
c}this.morphTargetsRelative=a.morphTargetsRelative;b=a.groups;for(let f=0,h=b.length;f<h;f++)e=b[f],this.addGroup(e.start,e.count,e.materialIndex);b=a.boundingBox;null!==b&&(this.boundingBox=b.clone());b=a.boundingSphere;null!==b&&(this.boundingSphere=b.clone());this.drawRange.start=a.drawRange.start;this.drawRange.count=a.drawRange.count;this.userData=a.userData;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});
const _inverseMatrix$$module$node_modules$three$build$three_module=new Matrix4$$module$node_modules$three$build$three_module,_ray$$module$node_modules$three$build$three_module=new Ray$$module$node_modules$three$build$three_module,_sphere$$module$node_modules$three$build$three_module=new Sphere$$module$node_modules$three$build$three_module,_vA$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_vB$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,
_vC$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_tempA$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_tempB$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_tempC$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_morphA$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,
_morphB$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_morphC$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_uvA$$module$node_modules$three$build$three_module=new Vector2$$module$node_modules$three$build$three_module,_uvB$$module$node_modules$three$build$three_module=new Vector2$$module$node_modules$three$build$three_module,_uvC$$module$node_modules$three$build$three_module=new Vector2$$module$node_modules$three$build$three_module,
_intersectionPoint$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_intersectionPointWorld$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module;
function Mesh$$module$node_modules$three$build$three_module(a,b){Object3D$$module$node_modules$three$build$three_module.call(this);this.type="Mesh";this.geometry=void 0!==a?a:new BufferGeometry$$module$node_modules$three$build$three_module;this.material=void 0!==b?b:new MeshBasicMaterial$$module$node_modules$three$build$three_module;this.updateMorphTargets()}
Mesh$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Object3D$$module$node_modules$three$build$three_module.prototype),{constructor:Mesh$$module$node_modules$three$build$three_module,isMesh:!0,copy:function(a){Object3D$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);void 0!==a.morphTargetInfluences&&(this.morphTargetInfluences=a.morphTargetInfluences.slice());void 0!==a.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},
a.morphTargetDictionary));this.material=a.material;this.geometry=a.geometry;return this},updateMorphTargets:function(){var a=this.geometry;if(a.isBufferGeometry){a=a.morphAttributes;var b=Object.keys(a);if(0<b.length&&(a=a[b[0]],void 0!==a)){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let c=0,d=a.length;c<d;c++)b=a[c].name||String(c),this.morphTargetInfluences.push(0),this.morphTargetDictionary[b]=c}}else a=a.morphTargets,void 0!==a&&0<a.length&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},
raycast:function(a,b){var c=this.geometry;const d=this.material;var e=this.matrixWorld;if(void 0!==d&&(null===c.boundingSphere&&c.computeBoundingSphere(),_sphere$$module$node_modules$three$build$three_module.copy(c.boundingSphere),_sphere$$module$node_modules$three$build$three_module.applyMatrix4(e),!1!==a.ray.intersectsSphere(_sphere$$module$node_modules$three$build$three_module)&&(_inverseMatrix$$module$node_modules$three$build$three_module.getInverse(e),_ray$$module$node_modules$three$build$three_module.copy(a.ray).applyMatrix4(_inverseMatrix$$module$node_modules$three$build$three_module),
null===c.boundingBox||!1!==_ray$$module$node_modules$three$build$three_module.intersectsBox(c.boundingBox))))if(c.isBufferGeometry){var f=c.index,h=c.attributes.position;e=c.morphAttributes.position;var g=c.morphTargetsRelative,k=c.attributes.uv,n=c.attributes.uv2,w=c.groups,v=c.drawRange;if(null!==f)if(Array.isArray(d))for(let N=0,p=w.length;N<p;N++){var x=w[N],z=d[x.materialIndex];c=Math.max(x.start,v.start);var F=Math.min(x.start+x.count,v.start+v.count);for(let A=c,G=F;A<G;A+=3){c=f.getX(A);F=
f.getX(A+1);const O=f.getX(A+2);if(c=checkBufferGeometryIntersection$$module$node_modules$three$build$three_module(this,z,a,_ray$$module$node_modules$three$build$three_module,h,e,g,k,n,c,F,O))c.faceIndex=Math.floor(A/3),c.face.materialIndex=x.materialIndex,b.push(c)}}else{c=Math.max(0,v.start);v=Math.min(f.count,v.start+v.count);for(let N=c,p=v;N<p;N+=3)if(c=f.getX(N),v=f.getX(N+1),w=f.getX(N+2),c=checkBufferGeometryIntersection$$module$node_modules$three$build$three_module(this,d,a,_ray$$module$node_modules$three$build$three_module,
h,e,g,k,n,c,v,w))c.faceIndex=Math.floor(N/3),b.push(c)}else if(void 0!==h)if(Array.isArray(d))for(let N=0,p=w.length;N<p;N++){f=w[N];x=d[f.materialIndex];c=Math.max(f.start,v.start);z=Math.min(f.start+f.count,v.start+v.count);for(let A=c,G=z;A<G;A+=3)if(c=checkBufferGeometryIntersection$$module$node_modules$three$build$three_module(this,x,a,_ray$$module$node_modules$three$build$three_module,h,e,g,k,n,A,A+1,A+2))c.faceIndex=Math.floor(A/3),c.face.materialIndex=f.materialIndex,b.push(c)}else{c=Math.max(0,
v.start);f=Math.min(h.count,v.start+v.count);for(let N=c,p=f;N<p;N+=3)if(c=checkBufferGeometryIntersection$$module$node_modules$three$build$three_module(this,d,a,_ray$$module$node_modules$three$build$three_module,h,e,g,k,n,N,N+1,N+2))c.faceIndex=Math.floor(N/3),b.push(c)}}else if(c.isGeometry){e=Array.isArray(d);g=c.vertices;k=c.faces;n=c.faceVertexUvs[0];0<n.length&&(h=n);for(let N=0,p=k.length;N<p;N++)if(n=k[N],c=e?d[n.materialIndex]:d,void 0!==c&&(f=g[n.a],v=g[n.b],w=g[n.c],c=checkIntersection$$module$node_modules$three$build$three_module(this,
c,a,_ray$$module$node_modules$three$build$three_module,f,v,w,_intersectionPoint$$module$node_modules$three$build$three_module)))h&&h[N]&&(x=h[N],_uvA$$module$node_modules$three$build$three_module.copy(x[0]),_uvB$$module$node_modules$three$build$three_module.copy(x[1]),_uvC$$module$node_modules$three$build$three_module.copy(x[2]),c.uv=Triangle$$module$node_modules$three$build$three_module.getUV(_intersectionPoint$$module$node_modules$three$build$three_module,f,v,w,_uvA$$module$node_modules$three$build$three_module,
_uvB$$module$node_modules$three$build$three_module,_uvC$$module$node_modules$three$build$three_module,new Vector2$$module$node_modules$three$build$three_module)),c.face=n,c.faceIndex=N,b.push(c)}}});
function checkIntersection$$module$node_modules$three$build$three_module(a,b,c,d,e,f,h,g){if(null===(b.side===BackSide$$module$node_modules$three$build$three_module?d.intersectTriangle(h,f,e,!0,g):d.intersectTriangle(e,f,h,b.side!==DoubleSide$$module$node_modules$three$build$three_module,g)))return null;_intersectionPointWorld$$module$node_modules$three$build$three_module.copy(g);_intersectionPointWorld$$module$node_modules$three$build$three_module.applyMatrix4(a.matrixWorld);b=c.ray.origin.distanceTo(_intersectionPointWorld$$module$node_modules$three$build$three_module);
return b<c.near||b>c.far?null:{distance:b,point:_intersectionPointWorld$$module$node_modules$three$build$three_module.clone(),object:a}}
function checkBufferGeometryIntersection$$module$node_modules$three$build$three_module(a,b,c,d,e,f,h,g,k,n,w,v){_vA$$module$node_modules$three$build$three_module.fromBufferAttribute(e,n);_vB$$module$node_modules$three$build$three_module.fromBufferAttribute(e,w);_vC$$module$node_modules$three$build$three_module.fromBufferAttribute(e,v);e=a.morphTargetInfluences;if(b.morphTargets&&f&&e){_morphA$$module$node_modules$three$build$three_module.set(0,0,0);_morphB$$module$node_modules$three$build$three_module.set(0,
0,0);_morphC$$module$node_modules$three$build$three_module.set(0,0,0);for(let x=0,z=f.length;x<z;x++){const F=e[x],N=f[x];0!==F&&(_tempA$$module$node_modules$three$build$three_module.fromBufferAttribute(N,n),_tempB$$module$node_modules$three$build$three_module.fromBufferAttribute(N,w),_tempC$$module$node_modules$three$build$three_module.fromBufferAttribute(N,v),h?(_morphA$$module$node_modules$three$build$three_module.addScaledVector(_tempA$$module$node_modules$three$build$three_module,F),_morphB$$module$node_modules$three$build$three_module.addScaledVector(_tempB$$module$node_modules$three$build$three_module,
F),_morphC$$module$node_modules$three$build$three_module.addScaledVector(_tempC$$module$node_modules$three$build$three_module,F)):(_morphA$$module$node_modules$three$build$three_module.addScaledVector(_tempA$$module$node_modules$three$build$three_module.sub(_vA$$module$node_modules$three$build$three_module),F),_morphB$$module$node_modules$three$build$three_module.addScaledVector(_tempB$$module$node_modules$three$build$three_module.sub(_vB$$module$node_modules$three$build$three_module),F),_morphC$$module$node_modules$three$build$three_module.addScaledVector(_tempC$$module$node_modules$three$build$three_module.sub(_vC$$module$node_modules$three$build$three_module),
F)))}_vA$$module$node_modules$three$build$three_module.add(_morphA$$module$node_modules$three$build$three_module);_vB$$module$node_modules$three$build$three_module.add(_morphB$$module$node_modules$three$build$three_module);_vC$$module$node_modules$three$build$three_module.add(_morphC$$module$node_modules$three$build$three_module)}a.isSkinnedMesh&&(a.boneTransform(n,_vA$$module$node_modules$three$build$three_module),a.boneTransform(w,_vB$$module$node_modules$three$build$three_module),a.boneTransform(v,
_vC$$module$node_modules$three$build$three_module));if(a=checkIntersection$$module$node_modules$three$build$three_module(a,b,c,d,_vA$$module$node_modules$three$build$three_module,_vB$$module$node_modules$three$build$three_module,_vC$$module$node_modules$three$build$three_module,_intersectionPoint$$module$node_modules$three$build$three_module))g&&(_uvA$$module$node_modules$three$build$three_module.fromBufferAttribute(g,n),_uvB$$module$node_modules$three$build$three_module.fromBufferAttribute(g,w),
_uvC$$module$node_modules$three$build$three_module.fromBufferAttribute(g,v),a.uv=Triangle$$module$node_modules$three$build$three_module.getUV(_intersectionPoint$$module$node_modules$three$build$three_module,_vA$$module$node_modules$three$build$three_module,_vB$$module$node_modules$three$build$three_module,_vC$$module$node_modules$three$build$three_module,_uvA$$module$node_modules$three$build$three_module,_uvB$$module$node_modules$three$build$three_module,_uvC$$module$node_modules$three$build$three_module,
new Vector2$$module$node_modules$three$build$three_module)),k&&(_uvA$$module$node_modules$three$build$three_module.fromBufferAttribute(k,n),_uvB$$module$node_modules$three$build$three_module.fromBufferAttribute(k,w),_uvC$$module$node_modules$three$build$three_module.fromBufferAttribute(k,v),a.uv2=Triangle$$module$node_modules$three$build$three_module.getUV(_intersectionPoint$$module$node_modules$three$build$three_module,_vA$$module$node_modules$three$build$three_module,_vB$$module$node_modules$three$build$three_module,
_vC$$module$node_modules$three$build$three_module,_uvA$$module$node_modules$three$build$three_module,_uvB$$module$node_modules$three$build$three_module,_uvC$$module$node_modules$three$build$three_module,new Vector2$$module$node_modules$three$build$three_module)),g=new Face3$$module$node_modules$three$build$three_module(n,w,v),Triangle$$module$node_modules$three$build$three_module.getNormal(_vA$$module$node_modules$three$build$three_module,_vB$$module$node_modules$three$build$three_module,_vC$$module$node_modules$three$build$three_module,
g.normal),a.face=g;return a}let _geometryId$$module$node_modules$three$build$three_module=0;const _m1$3$$module$node_modules$three$build$three_module=new Matrix4$$module$node_modules$three$build$three_module,_obj$1$$module$node_modules$three$build$three_module=new Object3D$$module$node_modules$three$build$three_module,_offset$1$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module;
function Geometry$$module$node_modules$three$build$three_module(){Object.defineProperty(this,"id",{value:_geometryId$$module$node_modules$three$build$three_module+=2});this.uuid=MathUtils$$module$node_modules$three$build$three_module.generateUUID();this.name="";this.type="Geometry";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=
this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.verticesNeedUpdate=this.elementsNeedUpdate=!1}
Geometry$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(EventDispatcher$$module$node_modules$three$build$three_module.prototype),{constructor:Geometry$$module$node_modules$three$build$three_module,isGeometry:!0,applyMatrix4:function(a){const b=(new Matrix3$$module$node_modules$three$build$three_module).getNormalMatrix(a);for(let c=0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);for(let c=0,d=this.faces.length;c<d;c++){a=this.faces[c];a.normal.applyMatrix3(b).normalize();
for(let e=0,f=a.vertexNormals.length;e<f;e++)a.vertexNormals[e].applyMatrix3(b).normalize()}null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();this.normalsNeedUpdate=this.verticesNeedUpdate=!0;return this},rotateX:function(a){_m1$3$$module$node_modules$three$build$three_module.makeRotationX(a);this.applyMatrix4(_m1$3$$module$node_modules$three$build$three_module);return this},rotateY:function(a){_m1$3$$module$node_modules$three$build$three_module.makeRotationY(a);
this.applyMatrix4(_m1$3$$module$node_modules$three$build$three_module);return this},rotateZ:function(a){_m1$3$$module$node_modules$three$build$three_module.makeRotationZ(a);this.applyMatrix4(_m1$3$$module$node_modules$three$build$three_module);return this},translate:function(a,b,c){_m1$3$$module$node_modules$three$build$three_module.makeTranslation(a,b,c);this.applyMatrix4(_m1$3$$module$node_modules$three$build$three_module);return this},scale:function(a,b,c){_m1$3$$module$node_modules$three$build$three_module.makeScale(a,
b,c);this.applyMatrix4(_m1$3$$module$node_modules$three$build$three_module);return this},lookAt:function(a){_obj$1$$module$node_modules$three$build$three_module.lookAt(a);_obj$1$$module$node_modules$three$build$three_module.updateMatrix();this.applyMatrix4(_obj$1$$module$node_modules$three$build$three_module.matrix);return this},fromBufferGeometry:function(a){function b(w,v,x,z){const F=void 0===g?[]:[c.colors[w].clone(),c.colors[v].clone(),c.colors[x].clone()],N=void 0===h?[]:[(new Vector3$$module$node_modules$three$build$three_module).fromBufferAttribute(h,
w),(new Vector3$$module$node_modules$three$build$three_module).fromBufferAttribute(h,v),(new Vector3$$module$node_modules$three$build$three_module).fromBufferAttribute(h,x)];z=new Face3$$module$node_modules$three$build$three_module(w,v,x,N,F,z);c.faces.push(z);void 0!==k&&c.faceVertexUvs[0].push([(new Vector2$$module$node_modules$three$build$three_module).fromBufferAttribute(k,w),(new Vector2$$module$node_modules$three$build$three_module).fromBufferAttribute(k,v),(new Vector2$$module$node_modules$three$build$three_module).fromBufferAttribute(k,
x)]);void 0!==n&&c.faceVertexUvs[1].push([(new Vector2$$module$node_modules$three$build$three_module).fromBufferAttribute(n,w),(new Vector2$$module$node_modules$three$build$three_module).fromBufferAttribute(n,v),(new Vector2$$module$node_modules$three$build$three_module).fromBufferAttribute(n,x)])}const c=this;var d=null!==a.index?a.index:void 0,e=a.attributes;if(void 0===e.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;var f=
e.position;const h=e.normal,g=e.color,k=e.uv,n=e.uv2;void 0!==n&&(this.faceVertexUvs[1]=[]);for(e=0;e<f.count;e++)c.vertices.push((new Vector3$$module$node_modules$three$build$three_module).fromBufferAttribute(f,e)),void 0!==g&&c.colors.push((new Color$$module$node_modules$three$build$three_module).fromBufferAttribute(g,e));e=a.groups;if(0<e.length)for(f=0;f<e.length;f++){const w=e[f],v=w.start,x=w.count;for(let z=v,F=v+x;z<F;z+=3)void 0!==d?b(d.getX(z),d.getX(z+1),d.getX(z+2),w.materialIndex):b(z,
z+1,z+2,w.materialIndex)}else if(void 0!==d)for(e=0;e<d.count;e+=3)b(d.getX(e),d.getX(e+1),d.getX(e+2));else for(d=0;d<f.count;d+=3)b(d,d+1,d+2);this.computeFaceNormals();null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());return this},center:function(){this.computeBoundingBox();this.boundingBox.getCenter(_offset$1$$module$node_modules$three$build$three_module).negate();this.translate(_offset$1$$module$node_modules$three$build$three_module.x,
_offset$1$$module$node_modules$three$build$three_module.y,_offset$1$$module$node_modules$three$build$three_module.z);return this},normalize:function(){this.computeBoundingSphere();const a=this.boundingSphere.center;var b=this.boundingSphere.radius;b=0===b?1:1/b;const c=new Matrix4$$module$node_modules$three$build$three_module;c.set(b,0,0,-b*a.x,0,b,0,-b*a.y,0,0,b,-b*a.z,0,0,0,1);this.applyMatrix4(c);return this},computeFaceNormals:function(){const a=new Vector3$$module$node_modules$three$build$three_module,
b=new Vector3$$module$node_modules$three$build$three_module;for(let c=0,d=this.faces.length;c<d;c++){const e=this.faces[c],f=this.vertices[e.a],h=this.vertices[e.b];a.subVectors(this.vertices[e.c],h);b.subVectors(f,h);a.cross(b);a.normalize();e.normal.copy(a)}},computeVertexNormals:function(a){void 0===a&&(a=!0);const b=Array(this.vertices.length);for(let d=0,e=this.vertices.length;d<e;d++)b[d]=new Vector3$$module$node_modules$three$build$three_module;if(a){a=new Vector3$$module$node_modules$three$build$three_module;
var c=new Vector3$$module$node_modules$three$build$three_module;for(let d=0,e=this.faces.length;d<e;d++){const f=this.faces[d],h=this.vertices[f.a],g=this.vertices[f.b];a.subVectors(this.vertices[f.c],g);c.subVectors(h,g);a.cross(c);b[f.a].add(a);b[f.b].add(a);b[f.c].add(a)}}else{this.computeFaceNormals();for(let d=0,e=this.faces.length;d<e;d++)a=this.faces[d],b[a.a].add(a.normal),b[a.b].add(a.normal),b[a.c].add(a.normal)}for(let d=0,e=this.vertices.length;d<e;d++)b[d].normalize();for(let d=0,e=this.faces.length;d<
e;d++)a=this.faces[d],c=a.vertexNormals,3===c.length?(c[0].copy(b[a.a]),c[1].copy(b[a.b]),c[2].copy(b[a.c])):(c[0]=b[a.a].clone(),c[1]=b[a.b].clone(),c[2]=b[a.c].clone());0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let a=0,b=this.faces.length;a<b;a++){const c=this.faces[a],d=c.vertexNormals;3===d.length?(d[0].copy(c.normal),d[1].copy(c.normal),d[2].copy(c.normal)):(d[0]=c.normal.clone(),d[1]=c.normal.clone(),d[2]=c.normal.clone())}0<
this.faces.length&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let e=0,f=this.faces.length;e<f;e++){var a=this.faces[e];a.__originalFaceNormal?a.__originalFaceNormal.copy(a.normal):a.__originalFaceNormal=a.normal.clone();a.__originalVertexNormals||(a.__originalVertexNormals=[]);for(let h=0,g=a.vertexNormals.length;h<g;h++)a.__originalVertexNormals[h]?a.__originalVertexNormals[h].copy(a.vertexNormals[h]):a.__originalVertexNormals[h]=a.vertexNormals[h].clone()}a=new Geometry$$module$node_modules$three$build$three_module;
a.faces=this.faces;for(let e=0,f=this.morphTargets.length;e<f;e++){if(!this.morphNormals[e]){this.morphNormals[e]={};this.morphNormals[e].faceNormals=[];this.morphNormals[e].vertexNormals=[];var b=this.morphNormals[e].faceNormals,c=this.morphNormals[e].vertexNormals;for(let h=0,g=this.faces.length;h<g;h++){var d=new Vector3$$module$node_modules$three$build$three_module;const k={a:new Vector3$$module$node_modules$three$build$three_module,b:new Vector3$$module$node_modules$three$build$three_module,
c:new Vector3$$module$node_modules$three$build$three_module};b.push(d);c.push(k)}}b=this.morphNormals[e];a.vertices=this.morphTargets[e].vertices;a.computeFaceNormals();a.computeVertexNormals();for(let h=0,g=this.faces.length;h<g;h++)c=this.faces[h],d=b.vertexNormals[h],b.faceNormals[h].copy(c.normal),d.a.copy(c.vertexNormals[0]),d.b.copy(c.vertexNormals[1]),d.c.copy(c.vertexNormals[2])}for(let e=0,f=this.faces.length;e<f;e++)a=this.faces[e],a.normal=a.__originalFaceNormal,a.vertexNormals=a.__originalVertexNormals},
computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Box3$$module$node_modules$three$build$three_module);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Sphere$$module$node_modules$three$build$three_module);this.boundingSphere.setFromPoints(this.vertices)},merge:function(a,b,c){if(a&&a.isGeometry){var d,e=this.vertices.length,f=this.vertices,h=a.vertices,g=this.faces,k=a.faces,n=this.colors,
w=a.colors;void 0===c&&(c=0);void 0!==b&&(d=(new Matrix3$$module$node_modules$three$build$three_module).getNormalMatrix(b));for(let v=0,x=h.length;v<x;v++){const z=h[v].clone();void 0!==b&&z.applyMatrix4(b);f.push(z)}for(let v=0,x=w.length;v<x;v++)n.push(w[v].clone());for(let v=0,x=k.length;v<x;v++){b=k[v];w=b.vertexNormals;f=b.vertexColors;h=new Face3$$module$node_modules$three$build$three_module(b.a+e,b.b+e,b.c+e);h.normal.copy(b.normal);void 0!==d&&h.normal.applyMatrix3(d).normalize();for(let z=
0,F=w.length;z<F;z++)n=w[z].clone(),void 0!==d&&n.applyMatrix3(d).normalize(),h.vertexNormals.push(n);h.color.copy(b.color);for(let z=0,F=f.length;z<F;z++)n=f[z],h.vertexColors.push(n.clone());h.materialIndex=b.materialIndex+c;g.push(h)}for(let v=0,x=a.faceVertexUvs.length;v<x;v++){c=a.faceVertexUvs[v];void 0===this.faceVertexUvs[v]&&(this.faceVertexUvs[v]=[]);for(let z=0,F=c.length;z<F;z++){d=c[z];e=[];for(let N=0,p=d.length;N<p;N++)e.push(d[N].clone());this.faceVertexUvs[v].push(e)}}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",
a)},mergeMesh:function(a){a&&a.isMesh?(a.matrixAutoUpdate&&a.updateMatrix(),this.merge(a.geometry,a.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",a)},mergeVertices:function(){var a={};const b=[];var c=[],d=Math.pow(10,4);for(let f=0,h=this.vertices.length;f<h;f++){var e=this.vertices[f];e=Math.round(e.x*d)+"_"+Math.round(e.y*d)+"_"+Math.round(e.z*d);void 0===a[e]?(a[e]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[e]]}a=[];for(let f=0,h=this.faces.length;f<
h;f++)for(d=this.faces[f],d.a=c[d.a],d.b=c[d.b],d.c=c[d.c],d=[d.a,d.b,d.c],e=0;3>e;e++)if(d[e]===d[(e+1)%3]){a.push(f);break}for(c=a.length-1;0<=c;c--){d=a[c];this.faces.splice(d,1);for(let f=0,h=this.faceVertexUvs.length;f<h;f++)this.faceVertexUvs[f].splice(d,1)}c=this.vertices.length-b.length;this.vertices=b;return c},setFromPoints:function(a){this.vertices=[];for(let b=0,c=a.length;b<c;b++){const d=a[b];this.vertices.push(new Vector3$$module$node_modules$three$build$three_module(d.x,d.y,d.z||0))}return this},
sortFacesByMaterialIndex:function(){const a=this.faces,b=a.length;for(var c=0;c<b;c++)a[c]._id=c;a.sort(function(h,g){return h.materialIndex-g.materialIndex});c=this.faceVertexUvs[0];const d=this.faceVertexUvs[1];let e,f;c&&c.length===b&&(e=[]);d&&d.length===b&&(f=[]);for(let h=0;h<b;h++){const g=a[h]._id;e&&e.push(c[g]);f&&f.push(d[g])}e&&(this.faceVertexUvs[0]=e);f&&(this.faceVertexUvs[1]=f)},toJSON:function(){function a(A,G,O){return O?A|1<<G:A&~(1<<G)}function b(A){const G=A.x.toString()+A.y.toString()+
A.z.toString();if(void 0!==n[G])return n[G];n[G]=k.length/3;k.push(A.x,A.y,A.z);return n[G]}function c(A){const G=A.r.toString()+A.g.toString()+A.b.toString();if(void 0!==v[G])return v[G];v[G]=w.length;w.push(A.getHex());return v[G]}function d(A){const G=A.x.toString()+A.y.toString();if(void 0!==z[G])return z[G];z[G]=x.length/2;x.push(A.x,A.y);return z[G]}const e={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};e.uuid=this.uuid;e.type=this.type;""!==this.name&&(e.name=this.name);
if(void 0!==this.parameters){var f=this.parameters;for(var h in f)void 0!==f[h]&&(e[h]=f[h]);return e}f=[];for(h=0;h<this.vertices.length;h++){var g=this.vertices[h];f.push(g.x,g.y,g.z)}h=[];const k=[],n={},w=[],v={},x=[],z={};for(g=0;g<this.faces.length;g++){var F=this.faces[g],N=void 0!==this.faceVertexUvs[0][g],p=0<F.normal.length();const A=0<F.vertexNormals.length,G=1!==F.color.r||1!==F.color.g||1!==F.color.b,O=0<F.vertexColors.length;let P=0;P=a(P,0,0);P=a(P,1,!0);P=a(P,2,!1);P=a(P,3,N);P=a(P,
4,p);P=a(P,5,A);P=a(P,6,G);P=a(P,7,O);h.push(P);h.push(F.a,F.b,F.c);h.push(F.materialIndex);N&&(N=this.faceVertexUvs[0][g],h.push(d(N[0]),d(N[1]),d(N[2])));p&&h.push(b(F.normal));A&&(p=F.vertexNormals,h.push(b(p[0]),b(p[1]),b(p[2])));G&&h.push(c(F.color));O&&(F=F.vertexColors,h.push(c(F[0]),c(F[1]),c(F[2])))}e.data={};e.data.vertices=f;e.data.normals=k;0<w.length&&(e.data.colors=w);0<x.length&&(e.data.uvs=[x]);e.data.faces=h;return e},clone:function(){return(new Geometry$$module$node_modules$three$build$three_module).copy(this)},
copy:function(a){this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.name=a.name;var b=a.vertices;for(let e=0,f=b.length;e<f;e++)this.vertices.push(b[e].clone());b=a.colors;for(let e=0,f=b.length;e<f;e++)this.colors.push(b[e].clone());b=a.faces;for(let e=0,f=b.length;e<f;e++)this.faces.push(b[e].clone());for(let e=0,f=a.faceVertexUvs.length;e<
f;e++){b=a.faceVertexUvs[e];void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]);for(let h=0,g=b.length;h<g;h++){var c=b[h],d=[];for(let k=0,n=c.length;k<n;k++)d.push(c[k].clone());this.faceVertexUvs[e].push(d)}}b=a.morphTargets;for(let e=0,f=b.length;e<f;e++){c={};c.name=b[e].name;if(void 0!==b[e].vertices){c.vertices=[];for(let h=0,g=b[e].vertices.length;h<g;h++)c.vertices.push(b[e].vertices[h].clone())}if(void 0!==b[e].normals){c.normals=[];for(let h=0,g=b[e].normals.length;h<g;h++)c.normals.push(b[e].normals[h].clone())}this.morphTargets.push(c)}b=
a.morphNormals;for(let e=0,f=b.length;e<f;e++){c={};if(void 0!==b[e].vertexNormals){c.vertexNormals=[];for(let h=0,g=b[e].vertexNormals.length;h<g;h++){d=b[e].vertexNormals[h];const k={};k.a=d.a.clone();k.b=d.b.clone();k.c=d.c.clone();c.vertexNormals.push(k)}}if(void 0!==b[e].faceNormals){c.faceNormals=[];for(let h=0,g=b[e].faceNormals.length;h<g;h++)c.faceNormals.push(b[e].faceNormals[h].clone())}this.morphNormals.push(c)}b=a.skinWeights;for(let e=0,f=b.length;e<f;e++)this.skinWeights.push(b[e].clone());
b=a.skinIndices;for(let e=0,f=b.length;e<f;e++)this.skinIndices.push(b[e].clone());b=a.lineDistances;for(let e=0,f=b.length;e<f;e++)this.lineDistances.push(b[e]);b=a.boundingBox;null!==b&&(this.boundingBox=b.clone());b=a.boundingSphere;null!==b&&(this.boundingSphere=b.clone());this.elementsNeedUpdate=a.elementsNeedUpdate;this.verticesNeedUpdate=a.verticesNeedUpdate;this.uvsNeedUpdate=a.uvsNeedUpdate;this.normalsNeedUpdate=a.normalsNeedUpdate;this.colorsNeedUpdate=a.colorsNeedUpdate;this.lineDistancesNeedUpdate=
a.lineDistancesNeedUpdate;this.groupsNeedUpdate=a.groupsNeedUpdate;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});
class BoxGeometry$$module$node_modules$three$build$three_module extends Geometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d,e,f){super();this.type="BoxGeometry";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};this.fromBufferGeometry(new BoxBufferGeometry$$module$node_modules$three$build$three_module(a,b,c,d,e,f));this.mergeVertices()}}
class BoxBufferGeometry$$module$node_modules$three$build$three_module extends BufferGeometry$$module$node_modules$three$build$three_module{constructor(a=1,b=1,c=1,d=1,e=1,f=1){function h(F,N,p,A,G,O,P,S,T,W,X){const U=O/T,Z=P/W,aa=O/2,r=P/2,y=S/2;P=T+1;const J=W+1;let C=O=0;const E=new Vector3$$module$node_modules$three$build$three_module;for(let I=0;I<J;I++){const L=I*Z-r;for(let m=0;m<P;m++)E[F]=(m*U-aa)*A,E[N]=L*G,E[p]=y,n.push(E.x,E.y,E.z),E[F]=0,E[N]=0,E[p]=0<S?1:-1,w.push(E.x,E.y,E.z),v.push(m/
T),v.push(1-I/W),O+=1}for(F=0;F<W;F++)for(N=0;N<T;N++)p=x+N+P*(F+1),A=x+(N+1)+P*(F+1),G=x+(N+1)+P*F,k.push(x+N+P*F,p,G),k.push(p,A,G),C+=6;g.addGroup(z,C,X);z+=C;x+=O}super();this.type="BoxBufferGeometry";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};const g=this;d=Math.floor(d);e=Math.floor(e);f=Math.floor(f);const k=[],n=[],w=[],v=[];let x=0,z=0;h("z","y","x",-1,-1,c,b,a,f,e,0);h("z","y","x",1,-1,c,b,-a,f,e,1);h("x","z","y",1,1,a,c,b,d,f,2);h("x","z",
"y",1,-1,a,c,-b,d,f,3);h("x","y","z",1,-1,a,b,c,d,e,4);h("x","y","z",-1,-1,a,b,-c,d,e,5);this.setIndex(k);this.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(n,3));this.setAttribute("normal",new Float32BufferAttribute$$module$node_modules$three$build$three_module(w,3));this.setAttribute("uv",new Float32BufferAttribute$$module$node_modules$three$build$three_module(v,2))}}
function cloneUniforms$$module$node_modules$three$build$three_module(a){const b={};for(const c in a){b[c]={};for(const d in a[c]){const e=a[c][d];e&&(e.isColor||e.isMatrix3||e.isMatrix4||e.isVector2||e.isVector3||e.isVector4||e.isTexture)?b[c][d]=e.clone():Array.isArray(e)?b[c][d]=e.slice():b[c][d]=e}}return b}
function mergeUniforms$$module$node_modules$three$build$three_module(a){const b={};for(let c=0;c<a.length;c++){const d=cloneUniforms$$module$node_modules$three$build$three_module(a[c]);for(const e in d)b[e]=d[e]}return b}const UniformsUtils$$module$node_modules$three$build$three_module={clone:cloneUniforms$$module$node_modules$three$build$three_module,merge:mergeUniforms$$module$node_modules$three$build$three_module};
var default_vertex$$module$node_modules$three$build$three_module="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",default_fragment$$module$node_modules$three$build$three_module="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";
function ShaderMaterial$$module$node_modules$three$build$three_module(a){Material$$module$node_modules$three$build$three_module.call(this);this.type="ShaderMaterial";this.defines={};this.uniforms={};this.vertexShader=default_vertex$$module$node_modules$three$build$three_module;this.fragmentShader=default_fragment$$module$node_modules$three$build$three_module;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.morphNormals=this.morphTargets=this.skinning=this.clipping=this.lights=this.fog=
!1;this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1};this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;this.uniformsNeedUpdate=!1;this.glslVersion=null;void 0!==a&&(void 0!==a.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(a))}ShaderMaterial$$module$node_modules$three$build$three_module.prototype=Object.create(Material$$module$node_modules$three$build$three_module.prototype);
ShaderMaterial$$module$node_modules$three$build$three_module.prototype.constructor=ShaderMaterial$$module$node_modules$three$build$three_module;ShaderMaterial$$module$node_modules$three$build$three_module.prototype.isShaderMaterial=!0;
ShaderMaterial$$module$node_modules$three$build$three_module.prototype.copy=function(a){Material$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.fragmentShader=a.fragmentShader;this.vertexShader=a.vertexShader;this.uniforms=cloneUniforms$$module$node_modules$three$build$three_module(a.uniforms);this.defines=Object.assign({},a.defines);this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.lights=a.lights;this.clipping=a.clipping;this.skinning=a.skinning;
this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;this.extensions=Object.assign({},a.extensions);this.glslVersion=a.glslVersion;return this};
ShaderMaterial$$module$node_modules$three$build$three_module.prototype.toJSON=function(a){const b=Material$$module$node_modules$three$build$three_module.prototype.toJSON.call(this,a);b.glslVersion=this.glslVersion;b.uniforms={};for(const c in this.uniforms){const d=this.uniforms[c].value;b.uniforms[c]=d&&d.isTexture?{type:"t",value:d.toJSON(a).uuid}:d&&d.isColor?{type:"c",value:d.getHex()}:d&&d.isVector2?{type:"v2",value:d.toArray()}:d&&d.isVector3?{type:"v3",value:d.toArray()}:d&&d.isVector4?{type:"v4",
value:d.toArray()}:d&&d.isMatrix3?{type:"m3",value:d.toArray()}:d&&d.isMatrix4?{type:"m4",value:d.toArray()}:{value:d}}0<Object.keys(this.defines).length&&(b.defines=this.defines);b.vertexShader=this.vertexShader;b.fragmentShader=this.fragmentShader;a={};for(const c in this.extensions)!0===this.extensions[c]&&(a[c]=!0);0<Object.keys(a).length&&(b.extensions=a);return b};
function Camera$$module$node_modules$three$build$three_module(){Object3D$$module$node_modules$three$build$three_module.call(this);this.type="Camera";this.matrixWorldInverse=new Matrix4$$module$node_modules$three$build$three_module;this.projectionMatrix=new Matrix4$$module$node_modules$three$build$three_module;this.projectionMatrixInverse=new Matrix4$$module$node_modules$three$build$three_module}
Camera$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Object3D$$module$node_modules$three$build$three_module.prototype),{constructor:Camera$$module$node_modules$three$build$three_module,isCamera:!0,copy:function(a,b){Object3D$$module$node_modules$three$build$three_module.prototype.copy.call(this,a,b);this.matrixWorldInverse.copy(a.matrixWorldInverse);this.projectionMatrix.copy(a.projectionMatrix);this.projectionMatrixInverse.copy(a.projectionMatrixInverse);return this},
getWorldDirection:function(a){void 0===a&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),a=new Vector3$$module$node_modules$three$build$three_module);this.updateMatrixWorld(!0);const b=this.matrixWorld.elements;return a.set(-b[8],-b[9],-b[10]).normalize()},updateMatrixWorld:function(a){Object3D$$module$node_modules$three$build$three_module.prototype.updateMatrixWorld.call(this,a);this.matrixWorldInverse.getInverse(this.matrixWorld)},updateWorldMatrix:function(a,b){Object3D$$module$node_modules$three$build$three_module.prototype.updateWorldMatrix.call(this,
a,b);this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}});
function PerspectiveCamera$$module$node_modules$three$build$three_module(a,b,c,d){Camera$$module$node_modules$three$build$three_module.call(this);this.type="PerspectiveCamera";this.fov=void 0!==a?a:50;this.zoom=1;this.near=void 0!==c?c:.1;this.far=void 0!==d?d:2E3;this.focus=10;this.aspect=void 0!==b?b:1;this.view=null;this.filmGauge=35;this.filmOffset=0;this.updateProjectionMatrix()}
PerspectiveCamera$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Camera$$module$node_modules$three$build$three_module.prototype),{constructor:PerspectiveCamera$$module$node_modules$three$build$three_module,isPerspectiveCamera:!0,copy:function(a,b){Camera$$module$node_modules$three$build$three_module.prototype.copy.call(this,a,b);this.fov=a.fov;this.zoom=a.zoom;this.near=a.near;this.far=a.far;this.focus=a.focus;this.aspect=a.aspect;this.view=null===a.view?null:
Object.assign({},a.view);this.filmGauge=a.filmGauge;this.filmOffset=a.filmOffset;return this},setFocalLength:function(a){a=.5*this.getFilmHeight()/a;this.fov=2*MathUtils$$module$node_modules$three$build$three_module.RAD2DEG*Math.atan(a);this.updateProjectionMatrix()},getFocalLength:function(){const a=Math.tan(.5*MathUtils$$module$node_modules$three$build$three_module.DEG2RAD*this.fov);return.5*this.getFilmHeight()/a},getEffectiveFOV:function(){return 2*MathUtils$$module$node_modules$three$build$three_module.RAD2DEG*
Math.atan(Math.tan(.5*MathUtils$$module$node_modules$three$build$three_module.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(a,b,c,d,e,f){this.aspect=a/b;null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1});this.view.enabled=!0;this.view.fullWidth=a;this.view.fullHeight=b;this.view.offsetX=c;this.view.offsetY=
d;this.view.width=e;this.view.height=f;this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1);this.updateProjectionMatrix()},updateProjectionMatrix:function(){const a=this.near;let b=a*Math.tan(.5*MathUtils$$module$node_modules$three$build$three_module.DEG2RAD*this.fov)/this.zoom,c=2*b,d=this.aspect*c,e=-.5*d;var f=this.view;if(null!==this.view&&this.view.enabled){const h=f.fullWidth,g=f.fullHeight;e+=f.offsetX*d/h;b-=f.offsetY*c/g;d*=f.width/h;c*=f.height/
g}f=this.filmOffset;0!==f&&(e+=a*f/this.getFilmWidth());this.projectionMatrix.makePerspective(e,e+d,b,b-c,a,this.far);this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(a){a=Object3D$$module$node_modules$three$build$three_module.prototype.toJSON.call(this,a);a.object.fov=this.fov;a.object.zoom=this.zoom;a.object.near=this.near;a.object.far=this.far;a.object.focus=this.focus;a.object.aspect=this.aspect;null!==this.view&&(a.object.view=Object.assign({},this.view));a.object.filmGauge=
this.filmGauge;a.object.filmOffset=this.filmOffset;return a}});const fov$$module$node_modules$three$build$three_module=90,aspect$$module$node_modules$three$build$three_module=1;
function CubeCamera$$module$node_modules$three$build$three_module(a,b,c){Object3D$$module$node_modules$three$build$three_module.call(this);this.type="CubeCamera";if(!0!==c.isWebGLCubeRenderTarget)console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");else{this.renderTarget=c;var d=new PerspectiveCamera$$module$node_modules$three$build$three_module(fov$$module$node_modules$three$build$three_module,aspect$$module$node_modules$three$build$three_module,
a,b);d.layers=this.layers;d.up.set(0,-1,0);d.lookAt(new Vector3$$module$node_modules$three$build$three_module(1,0,0));this.add(d);var e=new PerspectiveCamera$$module$node_modules$three$build$three_module(fov$$module$node_modules$three$build$three_module,aspect$$module$node_modules$three$build$three_module,a,b);e.layers=this.layers;e.up.set(0,-1,0);e.lookAt(new Vector3$$module$node_modules$three$build$three_module(-1,0,0));this.add(e);var f=new PerspectiveCamera$$module$node_modules$three$build$three_module(fov$$module$node_modules$three$build$three_module,
aspect$$module$node_modules$three$build$three_module,a,b);f.layers=this.layers;f.up.set(0,0,1);f.lookAt(new Vector3$$module$node_modules$three$build$three_module(0,1,0));this.add(f);var h=new PerspectiveCamera$$module$node_modules$three$build$three_module(fov$$module$node_modules$three$build$three_module,aspect$$module$node_modules$three$build$three_module,a,b);h.layers=this.layers;h.up.set(0,0,-1);h.lookAt(new Vector3$$module$node_modules$three$build$three_module(0,-1,0));this.add(h);var g=new PerspectiveCamera$$module$node_modules$three$build$three_module(fov$$module$node_modules$three$build$three_module,
aspect$$module$node_modules$three$build$three_module,a,b);g.layers=this.layers;g.up.set(0,-1,0);g.lookAt(new Vector3$$module$node_modules$three$build$three_module(0,0,1));this.add(g);var k=new PerspectiveCamera$$module$node_modules$three$build$three_module(fov$$module$node_modules$three$build$three_module,aspect$$module$node_modules$three$build$three_module,a,b);k.layers=this.layers;k.up.set(0,-1,0);k.lookAt(new Vector3$$module$node_modules$three$build$three_module(0,0,-1));this.add(k);this.update=
function(n,w){null===this.parent&&this.updateMatrixWorld();const v=n.xr.enabled,x=n.getRenderTarget();n.xr.enabled=!1;const z=c.texture.generateMipmaps;c.texture.generateMipmaps=!1;n.setRenderTarget(c,0);n.render(w,d);n.setRenderTarget(c,1);n.render(w,e);n.setRenderTarget(c,2);n.render(w,f);n.setRenderTarget(c,3);n.render(w,h);n.setRenderTarget(c,4);n.render(w,g);c.texture.generateMipmaps=z;n.setRenderTarget(c,5);n.render(w,k);n.setRenderTarget(x);n.xr.enabled=v};this.clear=function(n,w,v,x){const z=
n.getRenderTarget();for(let F=0;6>F;F++)n.setRenderTarget(c,F),n.clear(w,v,x);n.setRenderTarget(z)}}}CubeCamera$$module$node_modules$three$build$three_module.prototype=Object.create(Object3D$$module$node_modules$three$build$three_module.prototype);CubeCamera$$module$node_modules$three$build$three_module.prototype.constructor=CubeCamera$$module$node_modules$three$build$three_module;
function WebGLCubeRenderTarget$$module$node_modules$three$build$three_module(a,b,c){Number.isInteger(b)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),b=c);WebGLRenderTarget$$module$node_modules$three$build$three_module.call(this,a,a,b);this.texture.isWebGLCubeRenderTargetTexture=!0}WebGLCubeRenderTarget$$module$node_modules$three$build$three_module.prototype=Object.create(WebGLRenderTarget$$module$node_modules$three$build$three_module.prototype);
WebGLCubeRenderTarget$$module$node_modules$three$build$three_module.prototype.constructor=WebGLCubeRenderTarget$$module$node_modules$three$build$three_module;WebGLCubeRenderTarget$$module$node_modules$three$build$three_module.prototype.isWebGLCubeRenderTarget=!0;
WebGLCubeRenderTarget$$module$node_modules$three$build$three_module.prototype.fromEquirectangularTexture=function(a,b){this.texture.type=b.type;this.texture.format=RGBAFormat$$module$node_modules$three$build$three_module;this.texture.encoding=b.encoding;this.texture.generateMipmaps=b.generateMipmaps;this.texture.minFilter=b.minFilter;this.texture.magFilter=b.magFilter;var c=new BoxBufferGeometry$$module$node_modules$three$build$three_module(5,5,5),d=new ShaderMaterial$$module$node_modules$three$build$three_module({name:"CubemapFromEquirect",
uniforms:cloneUniforms$$module$node_modules$three$build$three_module({tEquirect:{value:null}}),vertexShader:"\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t#include <begin_vertex>\n\t\t\t\t#include <project_vertex>\n\n\t\t\t}\n\t\t",fragmentShader:"\n\n\t\t\tuniform sampler2D tEquirect;\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t}\n\t\t",
side:BackSide$$module$node_modules$three$build$three_module,blending:NoBlending$$module$node_modules$three$build$three_module});d.uniforms.tEquirect.value=b;c=new Mesh$$module$node_modules$three$build$three_module(c,d);d=b.minFilter;b.minFilter===LinearMipmapLinearFilter$$module$node_modules$three$build$three_module&&(b.minFilter=LinearFilter$$module$node_modules$three$build$three_module);(new CubeCamera$$module$node_modules$three$build$three_module(1,10,this)).update(a,c);b.minFilter=d;c.geometry.dispose();
c.material.dispose();return this};
function DataTexture$$module$node_modules$three$build$three_module(a,b,c,d,e,f,h,g,k,n,w,v){Texture$$module$node_modules$three$build$three_module.call(this,null,f,h,g,k,n,d,e,w,v);this.image={data:a||null,width:b||1,height:c||1};this.magFilter=void 0!==k?k:NearestFilter$$module$node_modules$three$build$three_module;this.minFilter=void 0!==n?n:NearestFilter$$module$node_modules$three$build$three_module;this.flipY=this.generateMipmaps=!1;this.unpackAlignment=1;this.needsUpdate=!0}
DataTexture$$module$node_modules$three$build$three_module.prototype=Object.create(Texture$$module$node_modules$three$build$three_module.prototype);DataTexture$$module$node_modules$three$build$three_module.prototype.constructor=DataTexture$$module$node_modules$three$build$three_module;DataTexture$$module$node_modules$three$build$three_module.prototype.isDataTexture=!0;
const _sphere$1$$module$node_modules$three$build$three_module=new Sphere$$module$node_modules$three$build$three_module,_vector$5$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module;
class Frustum$$module$node_modules$three$build$three_module{constructor(a,b,c,d,e,f){this.planes=[void 0!==a?a:new Plane$$module$node_modules$three$build$three_module,void 0!==b?b:new Plane$$module$node_modules$three$build$three_module,void 0!==c?c:new Plane$$module$node_modules$three$build$three_module,void 0!==d?d:new Plane$$module$node_modules$three$build$three_module,void 0!==e?e:new Plane$$module$node_modules$three$build$three_module,void 0!==f?f:new Plane$$module$node_modules$three$build$three_module]}set(a,
b,c,d,e,f){const h=this.planes;h[0].copy(a);h[1].copy(b);h[2].copy(c);h[3].copy(d);h[4].copy(e);h[5].copy(f);return this}clone(){return(new this.constructor).copy(this)}copy(a){const b=this.planes;for(let c=0;6>c;c++)b[c].copy(a.planes[c]);return this}setFromProjectionMatrix(a){const b=this.planes;var c=a.elements;a=c[0];const d=c[1],e=c[2],f=c[3],h=c[4],g=c[5],k=c[6],n=c[7],w=c[8],v=c[9],x=c[10],z=c[11],F=c[12],N=c[13],p=c[14];c=c[15];b[0].setComponents(f-a,n-h,z-w,c-F).normalize();b[1].setComponents(f+
a,n+h,z+w,c+F).normalize();b[2].setComponents(f+d,n+g,z+v,c+N).normalize();b[3].setComponents(f-d,n-g,z-v,c-N).normalize();b[4].setComponents(f-e,n-k,z-x,c-p).normalize();b[5].setComponents(f+e,n+k,z+x,c+p).normalize();return this}intersectsObject(a){const b=a.geometry;null===b.boundingSphere&&b.computeBoundingSphere();_sphere$1$$module$node_modules$three$build$three_module.copy(b.boundingSphere).applyMatrix4(a.matrixWorld);return this.intersectsSphere(_sphere$1$$module$node_modules$three$build$three_module)}intersectsSprite(a){_sphere$1$$module$node_modules$three$build$three_module.center.set(0,
0,0);_sphere$1$$module$node_modules$three$build$three_module.radius=.7071067811865476;_sphere$1$$module$node_modules$three$build$three_module.applyMatrix4(a.matrixWorld);return this.intersectsSphere(_sphere$1$$module$node_modules$three$build$three_module)}intersectsSphere(a){const b=this.planes,c=a.center;a=-a.radius;for(let d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0}intersectsBox(a){const b=this.planes;for(let c=0;6>c;c++){const d=b[c];_vector$5$$module$node_modules$three$build$three_module.x=
0<d.normal.x?a.max.x:a.min.x;_vector$5$$module$node_modules$three$build$three_module.y=0<d.normal.y?a.max.y:a.min.y;_vector$5$$module$node_modules$three$build$three_module.z=0<d.normal.z?a.max.z:a.min.z;if(0>d.distanceToPoint(_vector$5$$module$node_modules$three$build$three_module))return!1}return!0}containsPoint(a){const b=this.planes;for(let c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0}}
function WebGLAnimation$$module$node_modules$three$build$three_module(){function a(f,h){d(f,h);e=b.requestAnimationFrame(a)}let b=null,c=!1,d=null,e=null;return{start:function(){!0!==c&&null!==d&&(e=b.requestAnimationFrame(a),c=!0)},stop:function(){b.cancelAnimationFrame(e);c=!1},setAnimationLoop:function(f){d=f},setContext:function(f){b=f}}}
function WebGLAttributes$$module$node_modules$three$build$three_module(a,b){function c(f,h){const g=f.array,k=f.usage,n=a.createBuffer();a.bindBuffer(h,n);a.bufferData(h,g,k);f.onUploadCallback();h=5126;g instanceof Float32Array?h=5126:g instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):g instanceof Uint16Array?h=5123:g instanceof Int16Array?h=5122:g instanceof Uint32Array?h=5125:g instanceof Int32Array?h=5124:g instanceof Int8Array?h=5120:
g instanceof Uint8Array&&(h=5121);return{buffer:n,type:h,bytesPerElement:g.BYTES_PER_ELEMENT,version:f.version}}const d=b.isWebGL2,e=new WeakMap;return{get:function(f){f.isInterleavedBufferAttribute&&(f=f.data);return e.get(f)},remove:function(f){f.isInterleavedBufferAttribute&&(f=f.data);const h=e.get(f);h&&(a.deleteBuffer(h.buffer),e.delete(f))},update:function(f,h){if(f.isGLBufferAttribute)h=e.get(f),(!h||h.version<f.version)&&e.set(f,{buffer:f.buffer,type:f.type,bytesPerElement:f.elementSize,
version:f.version});else{f.isInterleavedBufferAttribute&&(f=f.data);var g=e.get(f);if(void 0===g)e.set(f,c(f,h));else if(g.version<f.version){{const k=f.array,n=f.updateRange;a.bindBuffer(h,g.buffer);-1===n.count?a.bufferSubData(h,0,k):(d?a.bufferSubData(h,n.offset*k.BYTES_PER_ELEMENT,k,n.offset,n.count):a.bufferSubData(h,n.offset*k.BYTES_PER_ELEMENT,k.subarray(n.offset,n.offset+n.count)),n.count=-1)}g.version=f.version}}}}}
class PlaneGeometry$$module$node_modules$three$build$three_module extends Geometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d){super();this.type="PlaneGeometry";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};this.fromBufferGeometry(new PlaneBufferGeometry$$module$node_modules$three$build$three_module(a,b,c,d));this.mergeVertices()}}
class PlaneBufferGeometry$$module$node_modules$three$build$three_module extends BufferGeometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d){super();this.type="PlaneBufferGeometry";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};a=a||1;b=b||1;var e=a/2,f=b/2;c=Math.floor(c)||1;d=Math.floor(d)||1;const h=c+1;var g=d+1,k=a/c,n=b/d;b=[];a=[];const w=[],v=[];for(let x=0;x<g;x++){const z=x*n-f;for(let F=0;F<h;F++)a.push(F*k-e,-z,0),w.push(0,0,1),v.push(F/c),v.push(1-
x/d)}for(e=0;e<d;e++)for(f=0;f<c;f++)g=f+h*(e+1),k=f+1+h*(e+1),n=f+1+h*e,b.push(f+h*e,g,n),b.push(g,k,n);this.setIndex(b);this.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(a,3));this.setAttribute("normal",new Float32BufferAttribute$$module$node_modules$three$build$three_module(w,3));this.setAttribute("uv",new Float32BufferAttribute$$module$node_modules$three$build$three_module(v,2))}}
var alphamap_fragment$$module$node_modules$three$build$three_module="#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment$$module$node_modules$three$build$three_module="#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment$$module$node_modules$three$build$three_module="#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment$$module$node_modules$three$build$three_module="#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",
aomap_pars_fragment$$module$node_modules$three$build$three_module="#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex$$module$node_modules$three$build$three_module="vec3 transformed = vec3( position );",beginnormal_vertex$$module$node_modules$three$build$three_module="vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs$$module$node_modules$three$build$three_module="vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",
bumpmap_pars_fragment$$module$node_modules$three$build$three_module="#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",
clipping_planes_fragment$$module$node_modules$three$build$three_module="#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",
clipping_planes_pars_fragment$$module$node_modules$three$build$three_module="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex$$module$node_modules$three$build$three_module="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex$$module$node_modules$three$build$three_module="#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment$$module$node_modules$three$build$three_module=
"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment$$module$node_modules$three$build$three_module="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex$$module$node_modules$three$build$three_module="#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex$$module$node_modules$three$build$three_module="#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor.xyz *= color.xyz;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",
common$$module$node_modules$three$build$three_module="#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",
cube_uv_reflection_fragment$$module$node_modules$three$build$three_module="#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",
defaultnormal_vertex$$module$node_modules$three$build$three_module="vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",
displacementmap_pars_vertex$$module$node_modules$three$build$three_module="#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex$$module$node_modules$three$build$three_module="#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment$$module$node_modules$three$build$three_module=
"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment$$module$node_modules$three$build$three_module="#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment$$module$node_modules$three$build$three_module="gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment$$module$node_modules$three$build$three_module=
"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",
envmap_fragment$$module$node_modules$three$build$three_module="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",
envmap_common_pars_fragment$$module$node_modules$three$build$three_module="#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment$$module$node_modules$three$build$three_module="#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",
envmap_pars_vertex$$module$node_modules$three$build$three_module="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_vertex$$module$node_modules$three$build$three_module="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",
fog_vertex$$module$node_modules$three$build$three_module="#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex$$module$node_modules$three$build$three_module="#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment$$module$node_modules$three$build$three_module="#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",
fog_pars_fragment$$module$node_modules$three$build$three_module="#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment$$module$node_modules$three$build$three_module="#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",
lightmap_fragment$$module$node_modules$three$build$three_module="#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment$$module$node_modules$three$build$three_module="#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex$$module$node_modules$three$build$three_module="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",
lights_pars_begin$$module$node_modules$three$build$three_module="uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",
envmap_physical_pars_fragment$$module$node_modules$three$build$three_module="#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",
lights_toon_fragment$$module$node_modules$three$build$three_module="ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment$$module$node_modules$three$build$three_module="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",
lights_phong_fragment$$module$node_modules$three$build$three_module="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment$$module$node_modules$three$build$three_module="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",
lights_physical_fragment$$module$node_modules$three$build$three_module="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",
lights_physical_pars_fragment$$module$node_modules$three$build$three_module="struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",
lights_fragment_begin$$module$node_modules$three$build$three_module="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",
lights_fragment_maps$$module$node_modules$three$build$three_module="#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",
lights_fragment_end$$module$node_modules$three$build$three_module="#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment$$module$node_modules$three$build$three_module="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",
logdepthbuf_pars_fragment$$module$node_modules$three$build$three_module="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex$$module$node_modules$three$build$three_module="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex$$module$node_modules$three$build$three_module=
"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment$$module$node_modules$three$build$three_module="#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",
map_pars_fragment$$module$node_modules$three$build$three_module="#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment$$module$node_modules$three$build$three_module="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",
map_particle_pars_fragment$$module$node_modules$three$build$three_module="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment$$module$node_modules$three$build$three_module="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",
metalnessmap_pars_fragment$$module$node_modules$three$build$three_module="#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex$$module$node_modules$three$build$three_module="#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",
morphtarget_pars_vertex$$module$node_modules$three$build$three_module="#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex$$module$node_modules$three$build$three_module="#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",
normal_fragment_begin$$module$node_modules$three$build$three_module="#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",
normal_fragment_maps$$module$node_modules$three$build$three_module="#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",
normalmap_pars_fragment$$module$node_modules$three$build$three_module="#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",
clearcoat_normal_fragment_begin$$module$node_modules$three$build$three_module="#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps$$module$node_modules$three$build$three_module="#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",
clearcoat_pars_fragment$$module$node_modules$three$build$three_module="#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing$$module$node_modules$three$build$three_module="vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",
premultiplied_alpha_fragment$$module$node_modules$three$build$three_module="#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex$$module$node_modules$three$build$three_module="vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment$$module$node_modules$three$build$three_module="#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",
dithering_pars_fragment$$module$node_modules$three$build$three_module="#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment$$module$node_modules$three$build$three_module="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",
roughnessmap_pars_fragment$$module$node_modules$three$build$three_module="#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment$$module$node_modules$three$build$three_module="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",
shadowmap_pars_vertex$$module$node_modules$three$build$three_module="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",
shadowmap_vertex$$module$node_modules$three$build$three_module="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",
shadowmask_pars_fragment$$module$node_modules$three$build$three_module="float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",
skinbase_vertex$$module$node_modules$three$build$three_module="#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex$$module$node_modules$three$build$three_module="#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",
skinning_vertex$$module$node_modules$three$build$three_module="#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex$$module$node_modules$three$build$three_module=
"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment$$module$node_modules$three$build$three_module=
"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment$$module$node_modules$three$build$three_module="#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment$$module$node_modules$three$build$three_module="#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment$$module$node_modules$three$build$three_module=
"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",
transmissionmap_fragment$$module$node_modules$three$build$three_module="#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment$$module$node_modules$three$build$three_module="#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment$$module$node_modules$three$build$three_module="#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex$$module$node_modules$three$build$three_module=
"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex$$module$node_modules$three$build$three_module="#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment$$module$node_modules$three$build$three_module="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex$$module$node_modules$three$build$three_module="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",
uv2_vertex$$module$node_modules$three$build$three_module="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex$$module$node_modules$three$build$three_module="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",
background_frag$$module$node_modules$three$build$three_module="uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert$$module$node_modules$three$build$three_module="varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",
cube_frag$$module$node_modules$three$build$three_module="#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert$$module$node_modules$three$build$three_module="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",
depth_frag$$module$node_modules$three$build$three_module="#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",
depth_vert$$module$node_modules$three$build$three_module="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",
distanceRGBA_frag$$module$node_modules$three$build$three_module="#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",
distanceRGBA_vert$$module$node_modules$three$build$three_module="#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",
equirect_frag$$module$node_modules$three$build$three_module="uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert$$module$node_modules$three$build$three_module="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",
linedashed_frag$$module$node_modules$three$build$three_module="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
linedashed_vert$$module$node_modules$three$build$three_module="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",
meshbasic_frag$$module$node_modules$three$build$three_module="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
meshbasic_vert$$module$node_modules$three$build$three_module="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",
meshlambert_frag$$module$node_modules$three$build$three_module="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
meshlambert_vert$$module$node_modules$three$build$three_module="#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
meshmatcap_frag$$module$node_modules$three$build$three_module="#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
meshmatcap_vert$$module$node_modules$three$build$three_module="#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",
meshtoon_frag$$module$node_modules$three$build$three_module="#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
meshtoon_vert$$module$node_modules$three$build$three_module="#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
meshphong_frag$$module$node_modules$three$build$three_module="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
meshphong_vert$$module$node_modules$three$build$three_module="#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
meshphysical_frag$$module$node_modules$three$build$three_module="#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
meshphysical_vert$$module$node_modules$three$build$three_module="#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
normal_frag$$module$node_modules$three$build$three_module="#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",
normal_vert$$module$node_modules$three$build$three_module="#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",
points_frag$$module$node_modules$three$build$three_module="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
points_vert$$module$node_modules$three$build$three_module="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",
shadow_frag$$module$node_modules$three$build$three_module="uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert$$module$node_modules$three$build$three_module=
"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag$$module$node_modules$three$build$three_module="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
sprite_vert$$module$node_modules$three$build$three_module="uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}";
const ShaderChunk$$module$node_modules$three$build$three_module={alphamap_fragment:alphamap_fragment$$module$node_modules$three$build$three_module,alphamap_pars_fragment:alphamap_pars_fragment$$module$node_modules$three$build$three_module,alphatest_fragment:alphatest_fragment$$module$node_modules$three$build$three_module,aomap_fragment:aomap_fragment$$module$node_modules$three$build$three_module,aomap_pars_fragment:aomap_pars_fragment$$module$node_modules$three$build$three_module,begin_vertex:begin_vertex$$module$node_modules$three$build$three_module,
beginnormal_vertex:beginnormal_vertex$$module$node_modules$three$build$three_module,bsdfs:bsdfs$$module$node_modules$three$build$three_module,bumpmap_pars_fragment:bumpmap_pars_fragment$$module$node_modules$three$build$three_module,clipping_planes_fragment:clipping_planes_fragment$$module$node_modules$three$build$three_module,clipping_planes_pars_fragment:clipping_planes_pars_fragment$$module$node_modules$three$build$three_module,clipping_planes_pars_vertex:clipping_planes_pars_vertex$$module$node_modules$three$build$three_module,
clipping_planes_vertex:clipping_planes_vertex$$module$node_modules$three$build$three_module,color_fragment:color_fragment$$module$node_modules$three$build$three_module,color_pars_fragment:color_pars_fragment$$module$node_modules$three$build$three_module,color_pars_vertex:color_pars_vertex$$module$node_modules$three$build$three_module,color_vertex:color_vertex$$module$node_modules$three$build$three_module,common:common$$module$node_modules$three$build$three_module,cube_uv_reflection_fragment:cube_uv_reflection_fragment$$module$node_modules$three$build$three_module,
defaultnormal_vertex:defaultnormal_vertex$$module$node_modules$three$build$three_module,displacementmap_pars_vertex:displacementmap_pars_vertex$$module$node_modules$three$build$three_module,displacementmap_vertex:displacementmap_vertex$$module$node_modules$three$build$three_module,emissivemap_fragment:emissivemap_fragment$$module$node_modules$three$build$three_module,emissivemap_pars_fragment:emissivemap_pars_fragment$$module$node_modules$three$build$three_module,encodings_fragment:encodings_fragment$$module$node_modules$three$build$three_module,
encodings_pars_fragment:encodings_pars_fragment$$module$node_modules$three$build$three_module,envmap_fragment:envmap_fragment$$module$node_modules$three$build$three_module,envmap_common_pars_fragment:envmap_common_pars_fragment$$module$node_modules$three$build$three_module,envmap_pars_fragment:envmap_pars_fragment$$module$node_modules$three$build$three_module,envmap_pars_vertex:envmap_pars_vertex$$module$node_modules$three$build$three_module,envmap_physical_pars_fragment:envmap_physical_pars_fragment$$module$node_modules$three$build$three_module,
envmap_vertex:envmap_vertex$$module$node_modules$three$build$three_module,fog_vertex:fog_vertex$$module$node_modules$three$build$three_module,fog_pars_vertex:fog_pars_vertex$$module$node_modules$three$build$three_module,fog_fragment:fog_fragment$$module$node_modules$three$build$three_module,fog_pars_fragment:fog_pars_fragment$$module$node_modules$three$build$three_module,gradientmap_pars_fragment:gradientmap_pars_fragment$$module$node_modules$three$build$three_module,lightmap_fragment:lightmap_fragment$$module$node_modules$three$build$three_module,
lightmap_pars_fragment:lightmap_pars_fragment$$module$node_modules$three$build$three_module,lights_lambert_vertex:lights_lambert_vertex$$module$node_modules$three$build$three_module,lights_pars_begin:lights_pars_begin$$module$node_modules$three$build$three_module,lights_toon_fragment:lights_toon_fragment$$module$node_modules$three$build$three_module,lights_toon_pars_fragment:lights_toon_pars_fragment$$module$node_modules$three$build$three_module,lights_phong_fragment:lights_phong_fragment$$module$node_modules$three$build$three_module,
lights_phong_pars_fragment:lights_phong_pars_fragment$$module$node_modules$three$build$three_module,lights_physical_fragment:lights_physical_fragment$$module$node_modules$three$build$three_module,lights_physical_pars_fragment:lights_physical_pars_fragment$$module$node_modules$three$build$three_module,lights_fragment_begin:lights_fragment_begin$$module$node_modules$three$build$three_module,lights_fragment_maps:lights_fragment_maps$$module$node_modules$three$build$three_module,lights_fragment_end:lights_fragment_end$$module$node_modules$three$build$three_module,
logdepthbuf_fragment:logdepthbuf_fragment$$module$node_modules$three$build$three_module,logdepthbuf_pars_fragment:logdepthbuf_pars_fragment$$module$node_modules$three$build$three_module,logdepthbuf_pars_vertex:logdepthbuf_pars_vertex$$module$node_modules$three$build$three_module,logdepthbuf_vertex:logdepthbuf_vertex$$module$node_modules$three$build$three_module,map_fragment:map_fragment$$module$node_modules$three$build$three_module,map_pars_fragment:map_pars_fragment$$module$node_modules$three$build$three_module,
map_particle_fragment:map_particle_fragment$$module$node_modules$three$build$three_module,map_particle_pars_fragment:map_particle_pars_fragment$$module$node_modules$three$build$three_module,metalnessmap_fragment:metalnessmap_fragment$$module$node_modules$three$build$three_module,metalnessmap_pars_fragment:metalnessmap_pars_fragment$$module$node_modules$three$build$three_module,morphnormal_vertex:morphnormal_vertex$$module$node_modules$three$build$three_module,morphtarget_pars_vertex:morphtarget_pars_vertex$$module$node_modules$three$build$three_module,
morphtarget_vertex:morphtarget_vertex$$module$node_modules$three$build$three_module,normal_fragment_begin:normal_fragment_begin$$module$node_modules$three$build$three_module,normal_fragment_maps:normal_fragment_maps$$module$node_modules$three$build$three_module,normalmap_pars_fragment:normalmap_pars_fragment$$module$node_modules$three$build$three_module,clearcoat_normal_fragment_begin:clearcoat_normal_fragment_begin$$module$node_modules$three$build$three_module,clearcoat_normal_fragment_maps:clearcoat_normal_fragment_maps$$module$node_modules$three$build$three_module,
clearcoat_pars_fragment:clearcoat_pars_fragment$$module$node_modules$three$build$three_module,packing:packing$$module$node_modules$three$build$three_module,premultiplied_alpha_fragment:premultiplied_alpha_fragment$$module$node_modules$three$build$three_module,project_vertex:project_vertex$$module$node_modules$three$build$three_module,dithering_fragment:dithering_fragment$$module$node_modules$three$build$three_module,dithering_pars_fragment:dithering_pars_fragment$$module$node_modules$three$build$three_module,
roughnessmap_fragment:roughnessmap_fragment$$module$node_modules$three$build$three_module,roughnessmap_pars_fragment:roughnessmap_pars_fragment$$module$node_modules$three$build$three_module,shadowmap_pars_fragment:shadowmap_pars_fragment$$module$node_modules$three$build$three_module,shadowmap_pars_vertex:shadowmap_pars_vertex$$module$node_modules$three$build$three_module,shadowmap_vertex:shadowmap_vertex$$module$node_modules$three$build$three_module,shadowmask_pars_fragment:shadowmask_pars_fragment$$module$node_modules$three$build$three_module,
skinbase_vertex:skinbase_vertex$$module$node_modules$three$build$three_module,skinning_pars_vertex:skinning_pars_vertex$$module$node_modules$three$build$three_module,skinning_vertex:skinning_vertex$$module$node_modules$three$build$three_module,skinnormal_vertex:skinnormal_vertex$$module$node_modules$three$build$three_module,specularmap_fragment:specularmap_fragment$$module$node_modules$three$build$three_module,specularmap_pars_fragment:specularmap_pars_fragment$$module$node_modules$three$build$three_module,
tonemapping_fragment:tonemapping_fragment$$module$node_modules$three$build$three_module,tonemapping_pars_fragment:tonemapping_pars_fragment$$module$node_modules$three$build$three_module,transmissionmap_fragment:transmissionmap_fragment$$module$node_modules$three$build$three_module,transmissionmap_pars_fragment:transmissionmap_pars_fragment$$module$node_modules$three$build$three_module,uv_pars_fragment:uv_pars_fragment$$module$node_modules$three$build$three_module,uv_pars_vertex:uv_pars_vertex$$module$node_modules$three$build$three_module,
uv_vertex:uv_vertex$$module$node_modules$three$build$three_module,uv2_pars_fragment:uv2_pars_fragment$$module$node_modules$three$build$three_module,uv2_pars_vertex:uv2_pars_vertex$$module$node_modules$three$build$three_module,uv2_vertex:uv2_vertex$$module$node_modules$three$build$three_module,worldpos_vertex:worldpos_vertex$$module$node_modules$three$build$three_module,background_frag:background_frag$$module$node_modules$three$build$three_module,background_vert:background_vert$$module$node_modules$three$build$three_module,
cube_frag:cube_frag$$module$node_modules$three$build$three_module,cube_vert:cube_vert$$module$node_modules$three$build$three_module,depth_frag:depth_frag$$module$node_modules$three$build$three_module,depth_vert:depth_vert$$module$node_modules$three$build$three_module,distanceRGBA_frag:distanceRGBA_frag$$module$node_modules$three$build$three_module,distanceRGBA_vert:distanceRGBA_vert$$module$node_modules$three$build$three_module,equirect_frag:equirect_frag$$module$node_modules$three$build$three_module,
equirect_vert:equirect_vert$$module$node_modules$three$build$three_module,linedashed_frag:linedashed_frag$$module$node_modules$three$build$three_module,linedashed_vert:linedashed_vert$$module$node_modules$three$build$three_module,meshbasic_frag:meshbasic_frag$$module$node_modules$three$build$three_module,meshbasic_vert:meshbasic_vert$$module$node_modules$three$build$three_module,meshlambert_frag:meshlambert_frag$$module$node_modules$three$build$three_module,meshlambert_vert:meshlambert_vert$$module$node_modules$three$build$three_module,
meshmatcap_frag:meshmatcap_frag$$module$node_modules$three$build$three_module,meshmatcap_vert:meshmatcap_vert$$module$node_modules$three$build$three_module,meshtoon_frag:meshtoon_frag$$module$node_modules$three$build$three_module,meshtoon_vert:meshtoon_vert$$module$node_modules$three$build$three_module,meshphong_frag:meshphong_frag$$module$node_modules$three$build$three_module,meshphong_vert:meshphong_vert$$module$node_modules$three$build$three_module,meshphysical_frag:meshphysical_frag$$module$node_modules$three$build$three_module,
meshphysical_vert:meshphysical_vert$$module$node_modules$three$build$three_module,normal_frag:normal_frag$$module$node_modules$three$build$three_module,normal_vert:normal_vert$$module$node_modules$three$build$three_module,points_frag:points_frag$$module$node_modules$three$build$three_module,points_vert:points_vert$$module$node_modules$three$build$three_module,shadow_frag:shadow_frag$$module$node_modules$three$build$three_module,shadow_vert:shadow_vert$$module$node_modules$three$build$three_module,
sprite_frag:sprite_frag$$module$node_modules$three$build$three_module,sprite_vert:sprite_vert$$module$node_modules$three$build$three_module},UniformsLib$$module$node_modules$three$build$three_module={common:{diffuse:{value:new Color$$module$node_modules$three$build$three_module(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Matrix3$$module$node_modules$three$build$three_module},uv2Transform:{value:new Matrix3$$module$node_modules$three$build$three_module},alphaMap:{value:null}},
specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Vector2$$module$node_modules$three$build$three_module(1,1)}},displacementmap:{displacementMap:{value:null},
displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:2.5E-4},fogNear:{value:1},fogFar:{value:2E3},fogColor:{value:new Color$$module$node_modules$three$build$three_module(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},
shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],
properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Color$$module$node_modules$three$build$three_module(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},
map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3$$module$node_modules$three$build$three_module}},sprite:{diffuse:{value:new Color$$module$node_modules$three$build$three_module(15658734)},opacity:{value:1},center:{value:new Vector2$$module$node_modules$three$build$three_module(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3$$module$node_modules$three$build$three_module}}},ShaderLib$$module$node_modules$three$build$three_module={basic:{uniforms:mergeUniforms$$module$node_modules$three$build$three_module([UniformsLib$$module$node_modules$three$build$three_module.common,
UniformsLib$$module$node_modules$three$build$three_module.specularmap,UniformsLib$$module$node_modules$three$build$three_module.envmap,UniformsLib$$module$node_modules$three$build$three_module.aomap,UniformsLib$$module$node_modules$three$build$three_module.lightmap,UniformsLib$$module$node_modules$three$build$three_module.fog]),vertexShader:ShaderChunk$$module$node_modules$three$build$three_module.meshbasic_vert,fragmentShader:ShaderChunk$$module$node_modules$three$build$three_module.meshbasic_frag},
lambert:{uniforms:mergeUniforms$$module$node_modules$three$build$three_module([UniformsLib$$module$node_modules$three$build$three_module.common,UniformsLib$$module$node_modules$three$build$three_module.specularmap,UniformsLib$$module$node_modules$three$build$three_module.envmap,UniformsLib$$module$node_modules$three$build$three_module.aomap,UniformsLib$$module$node_modules$three$build$three_module.lightmap,UniformsLib$$module$node_modules$three$build$three_module.emissivemap,UniformsLib$$module$node_modules$three$build$three_module.fog,
UniformsLib$$module$node_modules$three$build$three_module.lights,{emissive:{value:new Color$$module$node_modules$three$build$three_module(0)}}]),vertexShader:ShaderChunk$$module$node_modules$three$build$three_module.meshlambert_vert,fragmentShader:ShaderChunk$$module$node_modules$three$build$three_module.meshlambert_frag},phong:{uniforms:mergeUniforms$$module$node_modules$three$build$three_module([UniformsLib$$module$node_modules$three$build$three_module.common,UniformsLib$$module$node_modules$three$build$three_module.specularmap,
UniformsLib$$module$node_modules$three$build$three_module.envmap,UniformsLib$$module$node_modules$three$build$three_module.aomap,UniformsLib$$module$node_modules$three$build$three_module.lightmap,UniformsLib$$module$node_modules$three$build$three_module.emissivemap,UniformsLib$$module$node_modules$three$build$three_module.bumpmap,UniformsLib$$module$node_modules$three$build$three_module.normalmap,UniformsLib$$module$node_modules$three$build$three_module.displacementmap,UniformsLib$$module$node_modules$three$build$three_module.fog,
UniformsLib$$module$node_modules$three$build$three_module.lights,{emissive:{value:new Color$$module$node_modules$three$build$three_module(0)},specular:{value:new Color$$module$node_modules$three$build$three_module(1118481)},shininess:{value:30}}]),vertexShader:ShaderChunk$$module$node_modules$three$build$three_module.meshphong_vert,fragmentShader:ShaderChunk$$module$node_modules$three$build$three_module.meshphong_frag},standard:{uniforms:mergeUniforms$$module$node_modules$three$build$three_module([UniformsLib$$module$node_modules$three$build$three_module.common,
UniformsLib$$module$node_modules$three$build$three_module.envmap,UniformsLib$$module$node_modules$three$build$three_module.aomap,UniformsLib$$module$node_modules$three$build$three_module.lightmap,UniformsLib$$module$node_modules$three$build$three_module.emissivemap,UniformsLib$$module$node_modules$three$build$three_module.bumpmap,UniformsLib$$module$node_modules$three$build$three_module.normalmap,UniformsLib$$module$node_modules$three$build$three_module.displacementmap,UniformsLib$$module$node_modules$three$build$three_module.roughnessmap,
UniformsLib$$module$node_modules$three$build$three_module.metalnessmap,UniformsLib$$module$node_modules$three$build$three_module.fog,UniformsLib$$module$node_modules$three$build$three_module.lights,{emissive:{value:new Color$$module$node_modules$three$build$three_module(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ShaderChunk$$module$node_modules$three$build$three_module.meshphysical_vert,fragmentShader:ShaderChunk$$module$node_modules$three$build$three_module.meshphysical_frag},
toon:{uniforms:mergeUniforms$$module$node_modules$three$build$three_module([UniformsLib$$module$node_modules$three$build$three_module.common,UniformsLib$$module$node_modules$three$build$three_module.aomap,UniformsLib$$module$node_modules$three$build$three_module.lightmap,UniformsLib$$module$node_modules$three$build$three_module.emissivemap,UniformsLib$$module$node_modules$three$build$three_module.bumpmap,UniformsLib$$module$node_modules$three$build$three_module.normalmap,UniformsLib$$module$node_modules$three$build$three_module.displacementmap,
UniformsLib$$module$node_modules$three$build$three_module.gradientmap,UniformsLib$$module$node_modules$three$build$three_module.fog,UniformsLib$$module$node_modules$three$build$three_module.lights,{emissive:{value:new Color$$module$node_modules$three$build$three_module(0)}}]),vertexShader:ShaderChunk$$module$node_modules$three$build$three_module.meshtoon_vert,fragmentShader:ShaderChunk$$module$node_modules$three$build$three_module.meshtoon_frag},matcap:{uniforms:mergeUniforms$$module$node_modules$three$build$three_module([UniformsLib$$module$node_modules$three$build$three_module.common,
UniformsLib$$module$node_modules$three$build$three_module.bumpmap,UniformsLib$$module$node_modules$three$build$three_module.normalmap,UniformsLib$$module$node_modules$three$build$three_module.displacementmap,UniformsLib$$module$node_modules$three$build$three_module.fog,{matcap:{value:null}}]),vertexShader:ShaderChunk$$module$node_modules$three$build$three_module.meshmatcap_vert,fragmentShader:ShaderChunk$$module$node_modules$three$build$three_module.meshmatcap_frag},points:{uniforms:mergeUniforms$$module$node_modules$three$build$three_module([UniformsLib$$module$node_modules$three$build$three_module.points,
UniformsLib$$module$node_modules$three$build$three_module.fog]),vertexShader:ShaderChunk$$module$node_modules$three$build$three_module.points_vert,fragmentShader:ShaderChunk$$module$node_modules$three$build$three_module.points_frag},dashed:{uniforms:mergeUniforms$$module$node_modules$three$build$three_module([UniformsLib$$module$node_modules$three$build$three_module.common,UniformsLib$$module$node_modules$three$build$three_module.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ShaderChunk$$module$node_modules$three$build$three_module.linedashed_vert,
fragmentShader:ShaderChunk$$module$node_modules$three$build$three_module.linedashed_frag},depth:{uniforms:mergeUniforms$$module$node_modules$three$build$three_module([UniformsLib$$module$node_modules$three$build$three_module.common,UniformsLib$$module$node_modules$three$build$three_module.displacementmap]),vertexShader:ShaderChunk$$module$node_modules$three$build$three_module.depth_vert,fragmentShader:ShaderChunk$$module$node_modules$three$build$three_module.depth_frag},normal:{uniforms:mergeUniforms$$module$node_modules$three$build$three_module([UniformsLib$$module$node_modules$three$build$three_module.common,
UniformsLib$$module$node_modules$three$build$three_module.bumpmap,UniformsLib$$module$node_modules$three$build$three_module.normalmap,UniformsLib$$module$node_modules$three$build$three_module.displacementmap,{opacity:{value:1}}]),vertexShader:ShaderChunk$$module$node_modules$three$build$three_module.normal_vert,fragmentShader:ShaderChunk$$module$node_modules$three$build$three_module.normal_frag},sprite:{uniforms:mergeUniforms$$module$node_modules$three$build$three_module([UniformsLib$$module$node_modules$three$build$three_module.sprite,
UniformsLib$$module$node_modules$three$build$three_module.fog]),vertexShader:ShaderChunk$$module$node_modules$three$build$three_module.sprite_vert,fragmentShader:ShaderChunk$$module$node_modules$three$build$three_module.sprite_frag},background:{uniforms:{uvTransform:{value:new Matrix3$$module$node_modules$three$build$three_module},t2D:{value:null}},vertexShader:ShaderChunk$$module$node_modules$three$build$three_module.background_vert,fragmentShader:ShaderChunk$$module$node_modules$three$build$three_module.background_frag},
cube:{uniforms:mergeUniforms$$module$node_modules$three$build$three_module([UniformsLib$$module$node_modules$three$build$three_module.envmap,{opacity:{value:1}}]),vertexShader:ShaderChunk$$module$node_modules$three$build$three_module.cube_vert,fragmentShader:ShaderChunk$$module$node_modules$three$build$three_module.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ShaderChunk$$module$node_modules$three$build$three_module.equirect_vert,fragmentShader:ShaderChunk$$module$node_modules$three$build$three_module.equirect_frag},
distanceRGBA:{uniforms:mergeUniforms$$module$node_modules$three$build$three_module([UniformsLib$$module$node_modules$three$build$three_module.common,UniformsLib$$module$node_modules$three$build$three_module.displacementmap,{referencePosition:{value:new Vector3$$module$node_modules$three$build$three_module},nearDistance:{value:1},farDistance:{value:1E3}}]),vertexShader:ShaderChunk$$module$node_modules$three$build$three_module.distanceRGBA_vert,fragmentShader:ShaderChunk$$module$node_modules$three$build$three_module.distanceRGBA_frag},
shadow:{uniforms:mergeUniforms$$module$node_modules$three$build$three_module([UniformsLib$$module$node_modules$three$build$three_module.lights,UniformsLib$$module$node_modules$three$build$three_module.fog,{color:{value:new Color$$module$node_modules$three$build$three_module(0)},opacity:{value:1}}]),vertexShader:ShaderChunk$$module$node_modules$three$build$three_module.shadow_vert,fragmentShader:ShaderChunk$$module$node_modules$three$build$three_module.shadow_frag}};
ShaderLib$$module$node_modules$three$build$three_module.physical={uniforms:mergeUniforms$$module$node_modules$three$build$three_module([ShaderLib$$module$node_modules$three$build$three_module.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Vector2$$module$node_modules$three$build$three_module(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Color$$module$node_modules$three$build$three_module(0)},
transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:ShaderChunk$$module$node_modules$three$build$three_module.meshphysical_vert,fragmentShader:ShaderChunk$$module$node_modules$three$build$three_module.meshphysical_frag};
function WebGLBackground$$module$node_modules$three$build$three_module(a,b,c,d,e){function f(z,F){c.buffers.color.setClear(z.r,z.g,z.b,F,e)}const h=new Color$$module$node_modules$three$build$three_module(0);let g=0,k,n,w=null,v=0,x=null;return{getClearColor:function(){return h},setClearColor:function(z,F){h.set(z);g=void 0!==F?F:1;f(h,g)},getClearAlpha:function(){return g},setClearAlpha:function(z){g=z;f(h,g)},render:function(z,F,N,p){(F=!0===F.isScene?F.background:null)&&F.isTexture&&(F=b.get(F));
N=a.xr;(N=N.getSession&&N.getSession())&&"additive"===N.environmentBlendMode&&(F=null);null===F?f(h,g):F&&F.isColor&&(f(F,1),p=!0);(a.autoClear||p)&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil);if(F&&(F.isCubeTexture||F.isWebGLCubeRenderTarget||F.isWebGLCubeRenderTargetTexture||F.mapping===CubeUVReflectionMapping$$module$node_modules$three$build$three_module)){void 0===n&&(n=new Mesh$$module$node_modules$three$build$three_module(new BoxBufferGeometry$$module$node_modules$three$build$three_module(1,
1,1),new ShaderMaterial$$module$node_modules$three$build$three_module({name:"BackgroundCubeMaterial",uniforms:cloneUniforms$$module$node_modules$three$build$three_module(ShaderLib$$module$node_modules$three$build$three_module.cube.uniforms),vertexShader:ShaderLib$$module$node_modules$three$build$three_module.cube.vertexShader,fragmentShader:ShaderLib$$module$node_modules$three$build$three_module.cube.fragmentShader,side:BackSide$$module$node_modules$three$build$three_module,depthTest:!1,depthWrite:!1,
fog:!1})),n.geometry.deleteAttribute("normal"),n.geometry.deleteAttribute("uv"),n.onBeforeRender=function(A,G,O){this.matrixWorld.copyPosition(O.matrixWorld)},Object.defineProperty(n.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),d.update(n));F.isWebGLCubeRenderTarget&&(F=F.texture);n.material.uniforms.envMap.value=F;n.material.uniforms.flipEnvMap.value=F.isCubeTexture?-1:1;if(w!==F||v!==F.version||x!==a.toneMapping)n.material.needsUpdate=!0,w=F,v=F.version,x=a.toneMapping;
z.unshift(n,n.geometry,n.material,0,0,null)}else if(F&&F.isTexture){void 0===k&&(k=new Mesh$$module$node_modules$three$build$three_module(new PlaneBufferGeometry$$module$node_modules$three$build$three_module(2,2),new ShaderMaterial$$module$node_modules$three$build$three_module({name:"BackgroundMaterial",uniforms:cloneUniforms$$module$node_modules$three$build$three_module(ShaderLib$$module$node_modules$three$build$three_module.background.uniforms),vertexShader:ShaderLib$$module$node_modules$three$build$three_module.background.vertexShader,
fragmentShader:ShaderLib$$module$node_modules$three$build$three_module.background.fragmentShader,side:FrontSide$$module$node_modules$three$build$three_module,depthTest:!1,depthWrite:!1,fog:!1})),k.geometry.deleteAttribute("normal"),Object.defineProperty(k.material,"map",{get:function(){return this.uniforms.t2D.value}}),d.update(k));k.material.uniforms.t2D.value=F;!0===F.matrixAutoUpdate&&F.updateMatrix();k.material.uniforms.uvTransform.value.copy(F.matrix);if(w!==F||v!==F.version||x!==a.toneMapping)k.material.needsUpdate=
!0,w=F,v=F.version,x=a.toneMapping;z.unshift(k,k.geometry,k.material,0,0,null)}}}}
function WebGLBindingStates$$module$node_modules$three$build$three_module(a,b,c,d){function e(O){return d.isWebGL2?a.bindVertexArray(O):F.bindVertexArrayOES(O)}function f(O){return d.isWebGL2?a.deleteVertexArray(O):F.deleteVertexArrayOES(O)}function h(O){const P=[],S=[],T=[];for(let W=0;W<z;W++)P[W]=0,S[W]=0,T[W]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:P,enabledAttributes:S,attributeDivisors:T,object:O,attributes:{},index:null}}function g(){const O=G.newAttributes;for(let P=
0,S=O.length;P<S;P++)O[P]=0}function k(O){n(O,0)}function n(O,P){const S=G.enabledAttributes,T=G.attributeDivisors;G.newAttributes[O]=1;0===S[O]&&(a.enableVertexAttribArray(O),S[O]=1);T[O]!==P&&((d.isWebGL2?a:b.get("ANGLE_instanced_arrays"))[d.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](O,P),T[O]=P)}function w(){const O=G.newAttributes,P=G.enabledAttributes;for(let S=0,T=P.length;S<T;S++)P[S]!==O[S]&&(a.disableVertexAttribArray(S),P[S]=0)}function v(){x();G!==A&&(G=A,e(G.object))}function x(){A.geometry=
null;A.program=null;A.wireframe=!1}const z=a.getParameter(34921),F=d.isWebGL2?null:b.get("OES_vertex_array_object"),N=d.isWebGL2||null!==F,p={},A=h(null);let G=A;return{setup:function(O,P,S,T,W){var X=!1;if(N){X=!0===P.wireframe;var U=p[T.id];void 0===U&&(U={},p[T.id]=U);var Z=U[S.id];void 0===Z&&(Z={},U[S.id]=Z);U=Z[X];void 0===U&&(U=h(d.isWebGL2?a.createVertexArray():F.createVertexArrayOES()),Z[X]=U);X=U;G!==X&&(G=X,e(G.object));a:if(X=G.attributes,Z=T.attributes,Object.keys(X).length!==Object.keys(Z).length)X=
!0;else{for(var aa in Z){U=X[aa];var r=Z[aa];if(void 0===U||U.attribute!==r||U.data!==r.data){X=!0;break a}}X=G.index!==W?!0:!1}if(X){aa={};Z=T.attributes;for(var y in Z)U=Z[y],r={},r.attribute=U,U.data&&(r.data=U.data),aa[y]=r;G.attributes=aa;G.index=W}}else if(y=!0===P.wireframe,G.geometry!==T.id||G.program!==S.id||G.wireframe!==y)G.geometry=T.id,G.program=S.id,G.wireframe=y,X=!0;!0===O.isInstancedMesh&&(X=!0);null!==W&&c.update(W,34963);if(X){if(!1!==d.isWebGL2||!O.isInstancedMesh&&!T.isInstancedBufferGeometry||
null!==b.get("ANGLE_instanced_arrays")){g();y=T.attributes;S=S.getAttributes();P=P.defaultAttributeValues;for(const E in S)if(X=S[E],0<=X){var J=y[E];if(void 0!==J){aa=J.normalized;r=J.itemSize;U=c.get(J);if(void 0===U)continue;const I=U.buffer;Z=U.type;U=U.bytesPerElement;if(J.isInterleavedBufferAttribute){const L=J.data;var C=L.stride;J=J.offset;L&&L.isInstancedInterleavedBuffer?(n(X,L.meshPerAttribute),void 0===T._maxInstanceCount&&(T._maxInstanceCount=L.meshPerAttribute*L.count)):k(X);a.bindBuffer(34962,
I);C*=U;U*=J;!0!==d.isWebGL2||5124!==Z&&5125!==Z?a.vertexAttribPointer(X,r,Z,aa,C,U):a.vertexAttribIPointer(X,r,Z,C,U)}else J.isInstancedBufferAttribute?(n(X,J.meshPerAttribute),void 0===T._maxInstanceCount&&(T._maxInstanceCount=J.meshPerAttribute*J.count)):k(X),a.bindBuffer(34962,I),U=r,!0!==d.isWebGL2||5124!==Z&&5125!==Z?a.vertexAttribPointer(X,U,Z,aa,0,0):a.vertexAttribIPointer(X,U,Z,0,0)}else if("instanceMatrix"===E)Z=c.get(O.instanceMatrix),void 0!==Z&&(aa=Z.buffer,Z=Z.type,n(X+0,1),n(X+1,1),
n(X+2,1),n(X+3,1),a.bindBuffer(34962,aa),a.vertexAttribPointer(X+0,4,Z,!1,64,0),a.vertexAttribPointer(X+1,4,Z,!1,64,16),a.vertexAttribPointer(X+2,4,Z,!1,64,32),a.vertexAttribPointer(X+3,4,Z,!1,64,48));else if("instanceColor"===E)Z=c.get(O.instanceColor),void 0!==Z&&(aa=Z.buffer,Z=Z.type,n(X,1),a.bindBuffer(34962,aa),a.vertexAttribPointer(X,3,Z,!1,12,0));else if(void 0!==P&&(aa=P[E],void 0!==aa))switch(aa.length){case 2:a.vertexAttrib2fv(X,aa);break;case 3:a.vertexAttrib3fv(X,aa);break;case 4:a.vertexAttrib4fv(X,
aa);break;default:a.vertexAttrib1fv(X,aa)}}w()}null!==W&&a.bindBuffer(34963,c.get(W).buffer)}},reset:v,resetDefaultState:x,dispose:function(){v();for(const O in p){const P=p[O];for(const S in P){const T=P[S];for(const W in T)f(T[W].object),delete T[W];delete P[S]}delete p[O]}},releaseStatesOfGeometry:function(O){if(void 0!==p[O.id]){var P=p[O.id];for(const S in P){const T=P[S];for(const W in T)f(T[W].object),delete T[W];delete P[S]}delete p[O.id]}},releaseStatesOfProgram:function(O){for(const P in p){const S=
p[P];if(void 0===S[O.id])continue;const T=S[O.id];for(const W in T)f(T[W].object),delete T[W];delete S[O.id]}},initAttributes:g,enableAttribute:k,disableUnusedAttributes:w}}
function WebGLBufferRenderer$$module$node_modules$three$build$three_module(a,b,c,d){const e=d.isWebGL2;let f;this.setMode=function(h){f=h};this.render=function(h,g){a.drawArrays(f,h,g);c.update(g,f,1)};this.renderInstances=function(h,g,k){if(0!==k){if(e){var n=a;var w="drawArraysInstanced"}else if(n=b.get("ANGLE_instanced_arrays"),w="drawArraysInstancedANGLE",null===n){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
return}n[w](f,h,g,k);c.update(g,f,k)}}}
function WebGLCapabilities$$module$node_modules$three$build$three_module(a,b,c){function d(O){if("highp"===O){if(0<a.getShaderPrecisionFormat(35633,36338).precision&&0<a.getShaderPrecisionFormat(35632,36338).precision)return"highp";O="mediump"}return"mediump"===O&&0<a.getShaderPrecisionFormat(35633,36337).precision&&0<a.getShaderPrecisionFormat(35632,36337).precision?"mediump":"lowp"}let e;const f="undefined"!==typeof WebGL2RenderingContext&&a instanceof WebGL2RenderingContext||"undefined"!==typeof WebGL2ComputeRenderingContext&&
a instanceof WebGL2ComputeRenderingContext;let h=void 0!==c.precision?c.precision:"highp";var g=d(h);g!==h&&(console.warn("THREE.WebGLRenderer:",h,"not supported, using",g,"instead."),h=g);c=!0===c.logarithmicDepthBuffer;g=a.getParameter(34930);const k=a.getParameter(35660),n=a.getParameter(3379),w=a.getParameter(34076),v=a.getParameter(34921),x=a.getParameter(36347),z=a.getParameter(36348),F=a.getParameter(36349),N=0<k,p=f||!!b.get("OES_texture_float"),A=N&&p,G=f?a.getParameter(36183):0;return{isWebGL2:f,
getMaxAnisotropy:function(){if(void 0!==e)return e;const O=b.get("EXT_texture_filter_anisotropic");return e=null!==O?a.getParameter(O.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},getMaxPrecision:d,precision:h,logarithmicDepthBuffer:c,maxTextures:g,maxVertexTextures:k,maxTextureSize:n,maxCubemapSize:w,maxAttributes:v,maxVertexUniforms:x,maxVaryings:z,maxFragmentUniforms:F,vertexTextures:N,floatFragmentTextures:p,floatVertexTextures:A,maxSamples:G}}
function WebGLClipping$$module$node_modules$three$build$three_module(a){function b(){w.value!==e&&(w.value=e,w.needsUpdate=0<f);d.numPlanes=f;d.numIntersection=0}function c(v,x,z,F){const N=null!==v?v.length:0;let p=null;if(0!==N){p=w.value;if(!0!==F||null===p){F=z+4*N;x=x.matrixWorldInverse;n.getNormalMatrix(x);if(null===p||p.length<F)p=new Float32Array(F);for(let A=0,G=z;A!==N;++A,G+=4)k.copy(v[A]).applyMatrix4(x,n),k.normal.toArray(p,G),p[G+3]=k.constant}w.value=p;w.needsUpdate=!0}d.numPlanes=
N;d.numIntersection=0;return p}const d=this;let e=null,f=0,h=!1,g=!1;const k=new Plane$$module$node_modules$three$build$three_module,n=new Matrix3$$module$node_modules$three$build$three_module,w={value:null,needsUpdate:!1};this.uniform=w;this.numIntersection=this.numPlanes=0;this.init=function(v,x,z){const F=0!==v.length||x||0!==f||h;h=x;e=c(v,z,0);f=v.length;return F};this.beginShadows=function(){g=!0;c(null)};this.endShadows=function(){g=!1;b()};this.setState=function(v,x,z){const F=v.clippingPlanes,
N=v.clipIntersection;var p=v.clipShadows;v=a.get(v);if(!h||null===F||0===F.length||g&&!p)g?c(null):b();else{p=g?0:f;const A=4*p;let G=v.clippingState||null;w.value=G;G=c(F,x,A,z);for(x=0;x!==A;++x)G[x]=e[x];v.clippingState=G;this.numIntersection=N?this.numPlanes:0;this.numPlanes+=p}}}
function WebGLCubeMaps$$module$node_modules$three$build$three_module(a){function b(d,e){e===EquirectangularReflectionMapping$$module$node_modules$three$build$three_module?d.mapping=CubeReflectionMapping$$module$node_modules$three$build$three_module:e===EquirectangularRefractionMapping$$module$node_modules$three$build$three_module&&(d.mapping=CubeRefractionMapping$$module$node_modules$three$build$three_module);return d}let c=new WeakMap;return{get:function(d){if(d&&d.isTexture){var e=d.mapping;if(e===
EquirectangularReflectionMapping$$module$node_modules$three$build$three_module||e===EquirectangularRefractionMapping$$module$node_modules$three$build$three_module){if(c.has(d))return e=c.get(d).texture,b(e,d.mapping);var f=d.image;if(f&&0<f.height){e=a.getRenderList();const h=a.getRenderTarget(),g=a.getRenderState();f=new WebGLCubeRenderTarget$$module$node_modules$three$build$three_module(f.height/2);f.fromEquirectangularTexture(a,d);c.set(d,f);a.setRenderTarget(h);a.setRenderList(e);a.setRenderState(g);
return b(f.texture,d.mapping)}return null}}return d},dispose:function(){c=new WeakMap}}}
function WebGLExtensions$$module$node_modules$three$build$three_module(a){const b={};return{has:function(c){if(void 0!==b[c])return null!==b[c];let d;switch(c){case "WEBGL_depth_texture":d=a.getExtension("WEBGL_depth_texture")||a.getExtension("MOZ_WEBGL_depth_texture")||a.getExtension("WEBKIT_WEBGL_depth_texture");break;case "EXT_texture_filter_anisotropic":d=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
break;case "WEBGL_compressed_texture_s3tc":d=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case "WEBGL_compressed_texture_pvrtc":d=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:d=a.getExtension(c)}b[c]=d;return null!==d},get:function(c){this.has(c)||console.warn("THREE.WebGLRenderer: "+c+" extension not supported.");
return b[c]}}}
function WebGLGeometries$$module$node_modules$three$build$three_module(a,b,c,d){function e(k){k=k.target;const n=h.get(k);null!==n.index&&b.remove(n.index);for(var w in n.attributes)b.remove(n.attributes[w]);k.removeEventListener("dispose",e);h.delete(k);if(w=g.get(n))b.remove(w),g.delete(n);d.releaseStatesOfGeometry(k);!0===k.isInstancedBufferGeometry&&delete k._maxInstanceCount;c.memory.geometries--}function f(k){var n=[],w=k.index,v=k.attributes.position;if(null!==w){v=w.array;w=w.version;for(let F=
0,N=v.length;F<N;F+=3){var x=v[F+0],z=v[F+1];const p=v[F+2];n.push(x,z,z,p,p,x)}}else{x=v.array;w=v.version;for(let F=0,N=x.length/3-1;F<N;F+=3)v=F+0,x=F+1,z=F+2,n.push(v,x,x,z,z,v)}n=new (65535<arrayMax$$module$node_modules$three$build$three_module(n)?Uint32BufferAttribute$$module$node_modules$three$build$three_module:Uint16BufferAttribute$$module$node_modules$three$build$three_module)(n,1);n.version=w;(w=g.get(k))&&b.remove(w);g.set(k,n)}const h=new WeakMap,g=new WeakMap;return{get:function(k,n){let w=
h.get(n);if(w)return w;n.addEventListener("dispose",e);n.isBufferGeometry?w=n:n.isGeometry&&(void 0===n._bufferGeometry&&(n._bufferGeometry=(new BufferGeometry$$module$node_modules$three$build$three_module).setFromObject(k)),w=n._bufferGeometry);h.set(n,w);c.memory.geometries++;return w},update:function(k){var n=k.attributes;for(const w in n)b.update(n[w],34962);k=k.morphAttributes;for(const w in k){n=k[w];for(let v=0,x=n.length;v<x;v++)b.update(n[v],34962)}},getWireframeAttribute:function(k){const n=
g.get(k);if(n){const w=k.index;null!==w&&n.version<w.version&&f(k)}else f(k);return g.get(k)}}}
function WebGLIndexedBufferRenderer$$module$node_modules$three$build$three_module(a,b,c,d){const e=d.isWebGL2;let f,h,g;this.setMode=function(k){f=k};this.setIndex=function(k){h=k.type;g=k.bytesPerElement};this.render=function(k,n){a.drawElements(f,n,h,k*g);c.update(n,f,1)};this.renderInstances=function(k,n,w){if(0!==w){if(e){var v=a;var x="drawElementsInstanced"}else if(v=b.get("ANGLE_instanced_arrays"),x="drawElementsInstancedANGLE",null===v){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
return}v[x](f,n,h,k*g,w);c.update(n,f,w)}}}
function WebGLInfo$$module$node_modules$three$build$three_module(a){const b={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:b,programs:null,autoReset:!0,reset:function(){b.frame++;b.calls=0;b.triangles=0;b.points=0;b.lines=0},update:function(c,d,e){b.calls++;switch(d){case 4:b.triangles+=c/3*e;break;case 1:b.lines+=c/2*e;break;case 3:b.lines+=e*(c-1);break;case 2:b.lines+=e*c;break;case 0:b.points+=e*c;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",
d)}}}}function numericalSort$$module$node_modules$three$build$three_module(a,b){return a[0]-b[0]}function absNumericalSort$$module$node_modules$three$build$three_module(a,b){return Math.abs(b[1])-Math.abs(a[1])}
function WebGLMorphtargets$$module$node_modules$three$build$three_module(a){const b={},c=new Float32Array(8),d=[];for(let e=0;8>e;e++)d[e]=[e,0];return{update:function(e,f,h,g){var k=e.morphTargetInfluences;e=void 0===k?0:k.length;var n=b[f.id];if(void 0===n){n=[];for(var w=0;w<e;w++)n[w]=[w,0];b[f.id]=n}for(w=0;w<e;w++){var v=n[w];v[0]=w;v[1]=k[w]}n.sort(absNumericalSort$$module$node_modules$three$build$three_module);for(k=0;8>k;k++)k<e&&n[k][1]?(d[k][0]=n[k][0],d[k][1]=n[k][1]):(d[k][0]=Number.MAX_SAFE_INTEGER,
d[k][1]=0);d.sort(numericalSort$$module$node_modules$three$build$three_module);e=h.morphTargets&&f.morphAttributes.position;h=h.morphNormals&&f.morphAttributes.normal;n=0;for(k=0;8>k;k++)v=d[k],w=v[0],v=v[1],w!==Number.MAX_SAFE_INTEGER&&v?(e&&f.getAttribute("morphTarget"+k)!==e[w]&&f.setAttribute("morphTarget"+k,e[w]),h&&f.getAttribute("morphNormal"+k)!==h[w]&&f.setAttribute("morphNormal"+k,h[w]),c[k]=v,n+=v):(e&&void 0!==f.getAttribute("morphTarget"+k)&&f.deleteAttribute("morphTarget"+k),h&&void 0!==
f.getAttribute("morphNormal"+k)&&f.deleteAttribute("morphNormal"+k),c[k]=0);f=f.morphTargetsRelative?1:1-n;g.getUniforms().setValue(a,"morphTargetBaseInfluence",f);g.getUniforms().setValue(a,"morphTargetInfluences",c)}}}
function WebGLObjects$$module$node_modules$three$build$three_module(a,b,c,d){let e=new WeakMap;return{update:function(f){const h=d.render.frame,g=f.geometry,k=b.get(f,g);e.get(k)!==h&&(g.isGeometry&&k.updateFromObject(f),b.update(k),e.set(k,h));f.isInstancedMesh&&(c.update(f.instanceMatrix,34962),null!==f.instanceColor&&c.update(f.instanceColor,34962));return k},dispose:function(){e=new WeakMap}}}
function CubeTexture$$module$node_modules$three$build$three_module(a,b,c,d,e,f,h,g,k,n){a=void 0!==a?a:[];b=void 0!==b?b:CubeReflectionMapping$$module$node_modules$three$build$three_module;h=void 0!==h?h:RGBFormat$$module$node_modules$three$build$three_module;Texture$$module$node_modules$three$build$three_module.call(this,a,b,c,d,e,f,h,g,k,n);this.flipY=!1}CubeTexture$$module$node_modules$three$build$three_module.prototype=Object.create(Texture$$module$node_modules$three$build$three_module.prototype);
CubeTexture$$module$node_modules$three$build$three_module.prototype.constructor=CubeTexture$$module$node_modules$three$build$three_module;CubeTexture$$module$node_modules$three$build$three_module.prototype.isCubeTexture=!0;Object.defineProperty(CubeTexture$$module$node_modules$three$build$three_module.prototype,"images",{get:function(){return this.image},set:function(a){this.image=a}});
function DataTexture2DArray$$module$node_modules$three$build$three_module(a,b,c,d){Texture$$module$node_modules$three$build$three_module.call(this,null);this.image={data:a||null,width:b||1,height:c||1,depth:d||1};this.minFilter=this.magFilter=NearestFilter$$module$node_modules$three$build$three_module;this.wrapR=ClampToEdgeWrapping$$module$node_modules$three$build$three_module;this.flipY=this.generateMipmaps=!1;this.needsUpdate=!0}
DataTexture2DArray$$module$node_modules$three$build$three_module.prototype=Object.create(Texture$$module$node_modules$three$build$three_module.prototype);DataTexture2DArray$$module$node_modules$three$build$three_module.prototype.constructor=DataTexture2DArray$$module$node_modules$three$build$three_module;DataTexture2DArray$$module$node_modules$three$build$three_module.prototype.isDataTexture2DArray=!0;
function DataTexture3D$$module$node_modules$three$build$three_module(a,b,c,d){Texture$$module$node_modules$three$build$three_module.call(this,null);this.image={data:a||null,width:b||1,height:c||1,depth:d||1};this.minFilter=this.magFilter=NearestFilter$$module$node_modules$three$build$three_module;this.wrapR=ClampToEdgeWrapping$$module$node_modules$three$build$three_module;this.flipY=this.generateMipmaps=!1;this.needsUpdate=!0}DataTexture3D$$module$node_modules$three$build$three_module.prototype=Object.create(Texture$$module$node_modules$three$build$three_module.prototype);
DataTexture3D$$module$node_modules$three$build$three_module.prototype.constructor=DataTexture3D$$module$node_modules$three$build$three_module;DataTexture3D$$module$node_modules$three$build$three_module.prototype.isDataTexture3D=!0;
const emptyTexture$$module$node_modules$three$build$three_module=new Texture$$module$node_modules$three$build$three_module,emptyTexture2dArray$$module$node_modules$three$build$three_module=new DataTexture2DArray$$module$node_modules$three$build$three_module,emptyTexture3d$$module$node_modules$three$build$three_module=new DataTexture3D$$module$node_modules$three$build$three_module,emptyCubeTexture$$module$node_modules$three$build$three_module=new CubeTexture$$module$node_modules$three$build$three_module,
arrayCacheF32$$module$node_modules$three$build$three_module=[],arrayCacheI32$$module$node_modules$three$build$three_module=[],mat4array$$module$node_modules$three$build$three_module=new Float32Array(16),mat3array$$module$node_modules$three$build$three_module=new Float32Array(9),mat2array$$module$node_modules$three$build$three_module=new Float32Array(4);
function flatten$$module$node_modules$three$build$three_module(a,b,c){const d=a[0];if(0>=d||0<d)return a;const e=b*c;let f=arrayCacheF32$$module$node_modules$three$build$three_module[e];void 0===f&&(f=new Float32Array(e),arrayCacheF32$$module$node_modules$three$build$three_module[e]=f);if(0!==b){d.toArray(f,0);for(let h=1,g=0;h!==b;++h)g+=c,a[h].toArray(f,g)}return f}
function arraysEqual$$module$node_modules$three$build$three_module(a,b){if(a.length!==b.length)return!1;for(let c=0,d=a.length;c<d;c++)if(a[c]!==b[c])return!1;return!0}function copyArray$$module$node_modules$three$build$three_module(a,b){for(let c=0,d=b.length;c<d;c++)a[c]=b[c]}
function allocTexUnits$$module$node_modules$three$build$three_module(a,b){let c=arrayCacheI32$$module$node_modules$three$build$three_module[b];void 0===c&&(c=new Int32Array(b),arrayCacheI32$$module$node_modules$three$build$three_module[b]=c);for(let d=0;d!==b;++d)c[d]=a.allocateTextureUnit();return c}function setValueV1f$$module$node_modules$three$build$three_module(a,b){const c=this.cache;c[0]!==b&&(a.uniform1f(this.addr,b),c[0]=b)}
function setValueV2f$$module$node_modules$three$build$three_module(a,b){const c=this.cache;if(void 0!==b.x){if(c[0]!==b.x||c[1]!==b.y)a.uniform2f(this.addr,b.x,b.y),c[0]=b.x,c[1]=b.y}else arraysEqual$$module$node_modules$three$build$three_module(c,b)||(a.uniform2fv(this.addr,b),copyArray$$module$node_modules$three$build$three_module(c,b))}
function setValueV3f$$module$node_modules$three$build$three_module(a,b){const c=this.cache;if(void 0!==b.x){if(c[0]!==b.x||c[1]!==b.y||c[2]!==b.z)a.uniform3f(this.addr,b.x,b.y,b.z),c[0]=b.x,c[1]=b.y,c[2]=b.z}else if(void 0!==b.r){if(c[0]!==b.r||c[1]!==b.g||c[2]!==b.b)a.uniform3f(this.addr,b.r,b.g,b.b),c[0]=b.r,c[1]=b.g,c[2]=b.b}else arraysEqual$$module$node_modules$three$build$three_module(c,b)||(a.uniform3fv(this.addr,b),copyArray$$module$node_modules$three$build$three_module(c,b))}
function setValueV4f$$module$node_modules$three$build$three_module(a,b){const c=this.cache;if(void 0!==b.x){if(c[0]!==b.x||c[1]!==b.y||c[2]!==b.z||c[3]!==b.w)a.uniform4f(this.addr,b.x,b.y,b.z,b.w),c[0]=b.x,c[1]=b.y,c[2]=b.z,c[3]=b.w}else arraysEqual$$module$node_modules$three$build$three_module(c,b)||(a.uniform4fv(this.addr,b),copyArray$$module$node_modules$three$build$three_module(c,b))}
function setValueM2$$module$node_modules$three$build$three_module(a,b){const c=this.cache,d=b.elements;void 0===d?arraysEqual$$module$node_modules$three$build$three_module(c,b)||(a.uniformMatrix2fv(this.addr,!1,b),copyArray$$module$node_modules$three$build$three_module(c,b)):arraysEqual$$module$node_modules$three$build$three_module(c,d)||(mat2array$$module$node_modules$three$build$three_module.set(d),a.uniformMatrix2fv(this.addr,!1,mat2array$$module$node_modules$three$build$three_module),copyArray$$module$node_modules$three$build$three_module(c,
d))}
function setValueM3$$module$node_modules$three$build$three_module(a,b){const c=this.cache,d=b.elements;void 0===d?arraysEqual$$module$node_modules$three$build$three_module(c,b)||(a.uniformMatrix3fv(this.addr,!1,b),copyArray$$module$node_modules$three$build$three_module(c,b)):arraysEqual$$module$node_modules$three$build$three_module(c,d)||(mat3array$$module$node_modules$three$build$three_module.set(d),a.uniformMatrix3fv(this.addr,!1,mat3array$$module$node_modules$three$build$three_module),copyArray$$module$node_modules$three$build$three_module(c,d))}
function setValueM4$$module$node_modules$three$build$three_module(a,b){const c=this.cache,d=b.elements;void 0===d?arraysEqual$$module$node_modules$three$build$three_module(c,b)||(a.uniformMatrix4fv(this.addr,!1,b),copyArray$$module$node_modules$three$build$three_module(c,b)):arraysEqual$$module$node_modules$three$build$three_module(c,d)||(mat4array$$module$node_modules$three$build$three_module.set(d),a.uniformMatrix4fv(this.addr,!1,mat4array$$module$node_modules$three$build$three_module),copyArray$$module$node_modules$three$build$three_module(c,
d))}function setValueT1$$module$node_modules$three$build$three_module(a,b,c){const d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e);c.safeSetTexture2D(b||emptyTexture$$module$node_modules$three$build$three_module,e)}
function setValueT2DArray1$$module$node_modules$three$build$three_module(a,b,c){const d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e);c.setTexture2DArray(b||emptyTexture2dArray$$module$node_modules$three$build$three_module,e)}
function setValueT3D1$$module$node_modules$three$build$three_module(a,b,c){const d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e);c.setTexture3D(b||emptyTexture3d$$module$node_modules$three$build$three_module,e)}function setValueT6$$module$node_modules$three$build$three_module(a,b,c){const d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e);c.safeSetTextureCube(b||emptyCubeTexture$$module$node_modules$three$build$three_module,e)}
function setValueV1i$$module$node_modules$three$build$three_module(a,b){const c=this.cache;c[0]!==b&&(a.uniform1i(this.addr,b),c[0]=b)}function setValueV2i$$module$node_modules$three$build$three_module(a,b){const c=this.cache;arraysEqual$$module$node_modules$three$build$three_module(c,b)||(a.uniform2iv(this.addr,b),copyArray$$module$node_modules$three$build$three_module(c,b))}
function setValueV3i$$module$node_modules$three$build$three_module(a,b){const c=this.cache;arraysEqual$$module$node_modules$three$build$three_module(c,b)||(a.uniform3iv(this.addr,b),copyArray$$module$node_modules$three$build$three_module(c,b))}function setValueV4i$$module$node_modules$three$build$three_module(a,b){const c=this.cache;arraysEqual$$module$node_modules$three$build$three_module(c,b)||(a.uniform4iv(this.addr,b),copyArray$$module$node_modules$three$build$three_module(c,b))}
function setValueV1ui$$module$node_modules$three$build$three_module(a,b){const c=this.cache;c[0]!==b&&(a.uniform1ui(this.addr,b),c[0]=b)}
function getSingularSetter$$module$node_modules$three$build$three_module(a){switch(a){case 5126:return setValueV1f$$module$node_modules$three$build$three_module;case 35664:return setValueV2f$$module$node_modules$three$build$three_module;case 35665:return setValueV3f$$module$node_modules$three$build$three_module;case 35666:return setValueV4f$$module$node_modules$three$build$three_module;case 35674:return setValueM2$$module$node_modules$three$build$three_module;case 35675:return setValueM3$$module$node_modules$three$build$three_module;
case 35676:return setValueM4$$module$node_modules$three$build$three_module;case 5124:case 35670:return setValueV1i$$module$node_modules$three$build$three_module;case 35667:case 35671:return setValueV2i$$module$node_modules$three$build$three_module;case 35668:case 35672:return setValueV3i$$module$node_modules$three$build$three_module;case 35669:case 35673:return setValueV4i$$module$node_modules$three$build$three_module;case 5125:return setValueV1ui$$module$node_modules$three$build$three_module;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1$$module$node_modules$three$build$three_module;
case 35679:case 36299:case 36307:return setValueT3D1$$module$node_modules$three$build$three_module;case 35680:case 36300:case 36308:case 36293:return setValueT6$$module$node_modules$three$build$three_module;case 36289:case 36303:case 36311:case 36292:return setValueT2DArray1$$module$node_modules$three$build$three_module}}function setValueV1fArray$$module$node_modules$three$build$three_module(a,b){a.uniform1fv(this.addr,b)}
function setValueV1iArray$$module$node_modules$three$build$three_module(a,b){a.uniform1iv(this.addr,b)}function setValueV2iArray$$module$node_modules$three$build$three_module(a,b){a.uniform2iv(this.addr,b)}function setValueV3iArray$$module$node_modules$three$build$three_module(a,b){a.uniform3iv(this.addr,b)}function setValueV4iArray$$module$node_modules$three$build$three_module(a,b){a.uniform4iv(this.addr,b)}
function setValueV2fArray$$module$node_modules$three$build$three_module(a,b){b=flatten$$module$node_modules$three$build$three_module(b,this.size,2);a.uniform2fv(this.addr,b)}function setValueV3fArray$$module$node_modules$three$build$three_module(a,b){b=flatten$$module$node_modules$three$build$three_module(b,this.size,3);a.uniform3fv(this.addr,b)}
function setValueV4fArray$$module$node_modules$three$build$three_module(a,b){b=flatten$$module$node_modules$three$build$three_module(b,this.size,4);a.uniform4fv(this.addr,b)}function setValueM2Array$$module$node_modules$three$build$three_module(a,b){b=flatten$$module$node_modules$three$build$three_module(b,this.size,4);a.uniformMatrix2fv(this.addr,!1,b)}
function setValueM3Array$$module$node_modules$three$build$three_module(a,b){b=flatten$$module$node_modules$three$build$three_module(b,this.size,9);a.uniformMatrix3fv(this.addr,!1,b)}function setValueM4Array$$module$node_modules$three$build$three_module(a,b){b=flatten$$module$node_modules$three$build$three_module(b,this.size,16);a.uniformMatrix4fv(this.addr,!1,b)}
function setValueT1Array$$module$node_modules$three$build$three_module(a,b,c){const d=b.length,e=allocTexUnits$$module$node_modules$three$build$three_module(c,d);a.uniform1iv(this.addr,e);for(a=0;a!==d;++a)c.safeSetTexture2D(b[a]||emptyTexture$$module$node_modules$three$build$three_module,e[a])}
function setValueT6Array$$module$node_modules$three$build$three_module(a,b,c){const d=b.length,e=allocTexUnits$$module$node_modules$three$build$three_module(c,d);a.uniform1iv(this.addr,e);for(a=0;a!==d;++a)c.safeSetTextureCube(b[a]||emptyCubeTexture$$module$node_modules$three$build$three_module,e[a])}
function getPureArraySetter$$module$node_modules$three$build$three_module(a){switch(a){case 5126:return setValueV1fArray$$module$node_modules$three$build$three_module;case 35664:return setValueV2fArray$$module$node_modules$three$build$three_module;case 35665:return setValueV3fArray$$module$node_modules$three$build$three_module;case 35666:return setValueV4fArray$$module$node_modules$three$build$three_module;case 35674:return setValueM2Array$$module$node_modules$three$build$three_module;case 35675:return setValueM3Array$$module$node_modules$three$build$three_module;
case 35676:return setValueM4Array$$module$node_modules$three$build$three_module;case 5124:case 35670:return setValueV1iArray$$module$node_modules$three$build$three_module;case 35667:case 35671:return setValueV2iArray$$module$node_modules$three$build$three_module;case 35668:case 35672:return setValueV3iArray$$module$node_modules$three$build$three_module;case 35669:case 35673:return setValueV4iArray$$module$node_modules$three$build$three_module;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1Array$$module$node_modules$three$build$three_module;
case 35680:case 36300:case 36308:case 36293:return setValueT6Array$$module$node_modules$three$build$three_module}}function SingleUniform$$module$node_modules$three$build$three_module(a,b,c){this.id=a;this.addr=c;this.cache=[];this.setValue=getSingularSetter$$module$node_modules$three$build$three_module(b.type)}
function PureArrayUniform$$module$node_modules$three$build$three_module(a,b,c){this.id=a;this.addr=c;this.cache=[];this.size=b.size;this.setValue=getPureArraySetter$$module$node_modules$three$build$three_module(b.type)}PureArrayUniform$$module$node_modules$three$build$three_module.prototype.updateCache=function(a){const b=this.cache;a instanceof Float32Array&&b.length!==a.length&&(this.cache=new Float32Array(a.length));copyArray$$module$node_modules$three$build$three_module(b,a)};
function StructuredUniform$$module$node_modules$three$build$three_module(a){this.id=a;this.seq=[];this.map={}}StructuredUniform$$module$node_modules$three$build$three_module.prototype.setValue=function(a,b,c){const d=this.seq;for(let e=0,f=d.length;e!==f;++e){const h=d[e];h.setValue(a,b[h.id],c)}};const RePathPart$$module$node_modules$three$build$three_module=/([\w\d_]+)(\])?(\[|\.)?/g;function addUniform$$module$node_modules$three$build$three_module(a,b){a.seq.push(b);a.map[b.id]=b}
function parseUniform$$module$node_modules$three$build$three_module(a,b,c){const d=a.name,e=d.length;for(RePathPart$$module$node_modules$three$build$three_module.lastIndex=0;;){var f=RePathPart$$module$node_modules$three$build$three_module.exec(d);const h=RePathPart$$module$node_modules$three$build$three_module.lastIndex;let g=f[1];const k=f[3];"]"===f[2]&&(g|=0);if(void 0===k||"["===k&&h+2===e){addUniform$$module$node_modules$three$build$three_module(c,void 0===k?new SingleUniform$$module$node_modules$three$build$three_module(g,
a,b):new PureArrayUniform$$module$node_modules$three$build$three_module(g,a,b));break}else f=c.map[g],void 0===f&&(f=new StructuredUniform$$module$node_modules$three$build$three_module(g),addUniform$$module$node_modules$three$build$three_module(c,f)),c=f}}
function WebGLUniforms$$module$node_modules$three$build$three_module(a,b){this.seq=[];this.map={};const c=a.getProgramParameter(b,35718);for(let d=0;d<c;++d){const e=a.getActiveUniform(b,d),f=a.getUniformLocation(b,e.name);parseUniform$$module$node_modules$three$build$three_module(e,f,this)}}WebGLUniforms$$module$node_modules$three$build$three_module.prototype.setValue=function(a,b,c,d){b=this.map[b];void 0!==b&&b.setValue(a,c,d)};
WebGLUniforms$$module$node_modules$three$build$three_module.prototype.setOptional=function(a,b,c){b=b[c];void 0!==b&&this.setValue(a,c,b)};WebGLUniforms$$module$node_modules$three$build$three_module.upload=function(a,b,c,d){for(let e=0,f=b.length;e!==f;++e){const h=b[e],g=c[h.id];!1!==g.needsUpdate&&h.setValue(a,g.value,d)}};WebGLUniforms$$module$node_modules$three$build$three_module.seqWithValue=function(a,b){const c=[];for(let d=0,e=a.length;d!==e;++d){const f=a[d];f.id in b&&c.push(f)}return c};
function WebGLShader$$module$node_modules$three$build$three_module(a,b,c){b=a.createShader(b);a.shaderSource(b,c);a.compileShader(b);return b}let programIdCount$$module$node_modules$three$build$three_module=0;function addLineNumbers$$module$node_modules$three$build$three_module(a){a=a.split("\n");for(let b=0;b<a.length;b++)a[b]=b+1+": "+a[b];return a.join("\n")}
function getEncodingComponents$$module$node_modules$three$build$three_module(a){switch(a){case LinearEncoding$$module$node_modules$three$build$three_module:return["Linear","( value )"];case sRGBEncoding$$module$node_modules$three$build$three_module:return["sRGB","( value )"];case RGBEEncoding$$module$node_modules$three$build$three_module:return["RGBE","( value )"];case RGBM7Encoding$$module$node_modules$three$build$three_module:return["RGBM","( value, 7.0 )"];case RGBM16Encoding$$module$node_modules$three$build$three_module:return["RGBM",
"( value, 16.0 )"];case RGBDEncoding$$module$node_modules$three$build$three_module:return["RGBD","( value, 256.0 )"];case GammaEncoding$$module$node_modules$three$build$three_module:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case LogLuvEncoding$$module$node_modules$three$build$three_module:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",a),["Linear","( value )"]}}
function getShaderErrors$$module$node_modules$three$build$three_module(a,b,c){const d=a.getShaderParameter(b,35713),e=a.getShaderInfoLog(b).trim();if(d&&""===e)return"";a=a.getShaderSource(b);return"THREE.WebGLShader: gl.getShaderInfoLog() "+c+"\n"+e+addLineNumbers$$module$node_modules$three$build$three_module(a)}
function getTexelDecodingFunction$$module$node_modules$three$build$three_module(a,b){b=getEncodingComponents$$module$node_modules$three$build$three_module(b);return"vec4 "+a+"( vec4 value ) { return "+b[0]+"ToLinear"+b[1]+"; }"}function getTexelEncodingFunction$$module$node_modules$three$build$three_module(a,b){b=getEncodingComponents$$module$node_modules$three$build$three_module(b);return"vec4 "+a+"( vec4 value ) { return LinearTo"+b[0]+b[1]+"; }"}
function getToneMappingFunction$$module$node_modules$three$build$three_module(a,b){switch(b){case LinearToneMapping$$module$node_modules$three$build$three_module:b="Linear";break;case ReinhardToneMapping$$module$node_modules$three$build$three_module:b="Reinhard";break;case CineonToneMapping$$module$node_modules$three$build$three_module:b="OptimizedCineon";break;case ACESFilmicToneMapping$$module$node_modules$three$build$three_module:b="ACESFilmic";break;case CustomToneMapping$$module$node_modules$three$build$three_module:b=
"Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",b),b="Linear"}return"vec3 "+a+"( vec3 color ) { return "+b+"ToneMapping( color ); }"}
function generateExtensions$$module$node_modules$three$build$three_module(a){return[a.extensionDerivatives||a.envMapCubeUV||a.bumpMap||a.tangentSpaceNormalMap||a.clearcoatNormalMap||a.flatShading||"physical"===a.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(a.extensionFragDepth||a.logarithmicDepthBuffer)&&a.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",a.extensionDrawBuffers&&a.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(a.extensionShaderTextureLOD||
a.envMap)&&a.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(filterEmptyLine$$module$node_modules$three$build$three_module).join("\n")}function generateDefines$$module$node_modules$three$build$three_module(a){const b=[];for(const c in a){const d=a[c];!1!==d&&b.push("#define "+c+" "+d)}return b.join("\n")}
function fetchAttributeLocations$$module$node_modules$three$build$three_module(a,b){const c={},d=a.getProgramParameter(b,35721);for(let e=0;e<d;e++){const f=a.getActiveAttrib(b,e).name;c[f]=a.getAttribLocation(b,f)}return c}function filterEmptyLine$$module$node_modules$three$build$three_module(a){return""!==a}
function replaceLightNums$$module$node_modules$three$build$three_module(a,b){return a.replace(/NUM_DIR_LIGHTS/g,b.numDirLights).replace(/NUM_SPOT_LIGHTS/g,b.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,b.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,b.numPointLights).replace(/NUM_HEMI_LIGHTS/g,b.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,b.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,b.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,b.numPointLightShadows)}
function replaceClippingPlaneNums$$module$node_modules$three$build$three_module(a,b){return a.replace(/NUM_CLIPPING_PLANES/g,b.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,b.numClippingPlanes-b.numClipIntersection)}const includePattern$$module$node_modules$three$build$three_module=/^[ \t]*#include +<([\w\d./]+)>/gm;
function resolveIncludes$$module$node_modules$three$build$three_module(a){return a.replace(includePattern$$module$node_modules$three$build$three_module,includeReplacer$$module$node_modules$three$build$three_module)}function includeReplacer$$module$node_modules$three$build$three_module(a,b){a=ShaderChunk$$module$node_modules$three$build$three_module[b];if(void 0===a)throw Error("Can not resolve #include <"+b+">");return resolveIncludes$$module$node_modules$three$build$three_module(a)}
const deprecatedUnrollLoopPattern$$module$node_modules$three$build$three_module=/#pragma unroll_loop[\s]+?for \( int i = (\d+); i < (\d+); i \+\+ \) \{([\s\S]+?)(?=\})\}/g,unrollLoopPattern$$module$node_modules$three$build$three_module=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
function unrollLoops$$module$node_modules$three$build$three_module(a){return a.replace(unrollLoopPattern$$module$node_modules$three$build$three_module,loopReplacer$$module$node_modules$three$build$three_module).replace(deprecatedUnrollLoopPattern$$module$node_modules$three$build$three_module,deprecatedLoopReplacer$$module$node_modules$three$build$three_module)}
function deprecatedLoopReplacer$$module$node_modules$three$build$three_module(a,b,c,d){console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.");return loopReplacer$$module$node_modules$three$build$three_module(a,b,c,d)}function loopReplacer$$module$node_modules$three$build$three_module(a,b,c,d){a="";for(b=parseInt(b);b<parseInt(c);b++)a+=d.replace(/\[\s*i\s*\]/g,"[ "+b+" ]").replace(/UNROLLED_LOOP_INDEX/g,b);return a}
function generatePrecision$$module$node_modules$three$build$three_module(a){let b="precision "+a.precision+" float;\nprecision "+a.precision+" int;";"highp"===a.precision?b+="\n#define HIGH_PRECISION":"mediump"===a.precision?b+="\n#define MEDIUM_PRECISION":"lowp"===a.precision&&(b+="\n#define LOW_PRECISION");return b}
function generateShadowMapTypeDefine$$module$node_modules$three$build$three_module(a){let b="SHADOWMAP_TYPE_BASIC";a.shadowMapType===PCFShadowMap$$module$node_modules$three$build$three_module?b="SHADOWMAP_TYPE_PCF":a.shadowMapType===PCFSoftShadowMap$$module$node_modules$three$build$three_module?b="SHADOWMAP_TYPE_PCF_SOFT":a.shadowMapType===VSMShadowMap$$module$node_modules$three$build$three_module&&(b="SHADOWMAP_TYPE_VSM");return b}
function generateEnvMapTypeDefine$$module$node_modules$three$build$three_module(a){let b="ENVMAP_TYPE_CUBE";if(a.envMap)switch(a.envMapMode){case CubeReflectionMapping$$module$node_modules$three$build$three_module:case CubeRefractionMapping$$module$node_modules$three$build$three_module:b="ENVMAP_TYPE_CUBE";break;case CubeUVReflectionMapping$$module$node_modules$three$build$three_module:case CubeUVRefractionMapping$$module$node_modules$three$build$three_module:b="ENVMAP_TYPE_CUBE_UV"}return b}
function generateEnvMapModeDefine$$module$node_modules$three$build$three_module(a){let b="ENVMAP_MODE_REFLECTION";if(a.envMap)switch(a.envMapMode){case CubeRefractionMapping$$module$node_modules$three$build$three_module:case CubeUVRefractionMapping$$module$node_modules$three$build$three_module:b="ENVMAP_MODE_REFRACTION"}return b}
function generateEnvMapBlendingDefine$$module$node_modules$three$build$three_module(a){let b="ENVMAP_BLENDING_NONE";if(a.envMap)switch(a.combine){case MultiplyOperation$$module$node_modules$three$build$three_module:b="ENVMAP_BLENDING_MULTIPLY";break;case MixOperation$$module$node_modules$three$build$three_module:b="ENVMAP_BLENDING_MIX";break;case AddOperation$$module$node_modules$three$build$three_module:b="ENVMAP_BLENDING_ADD"}return b}
function WebGLProgram$$module$node_modules$three$build$three_module(a,b,c,d){const e=a.getContext();var f=c.defines,h=c.vertexShader,g=c.fragmentShader,k=generateShadowMapTypeDefine$$module$node_modules$three$build$three_module(c),n=generateEnvMapTypeDefine$$module$node_modules$three$build$three_module(c),w=generateEnvMapModeDefine$$module$node_modules$three$build$three_module(c),v=generateEnvMapBlendingDefine$$module$node_modules$three$build$three_module(c),x=0<a.gammaFactor?a.gammaFactor:1,z=c.isWebGL2?
"":generateExtensions$$module$node_modules$three$build$three_module(c);const F=generateDefines$$module$node_modules$three$build$three_module(f),N=e.createProgram();var p=c.glslVersion?"#version "+c.glslVersion+"\n":"";c.isRawShaderMaterial?(f=[F].filter(filterEmptyLine$$module$node_modules$three$build$three_module).join("\n"),0<f.length&&(f+="\n"),k=[z,F].filter(filterEmptyLine$$module$node_modules$three$build$three_module).join("\n"),0<k.length&&(k+="\n")):(f=[generatePrecision$$module$node_modules$three$build$three_module(c),
"#define SHADER_NAME "+c.shaderName,F,c.instancing?"#define USE_INSTANCING":"",c.instancingColor?"#define USE_INSTANCING_COLOR":"",c.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+x,"#define MAX_BONES "+c.maxBones,c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.envMap?"#define "+w:"",c.lightMap?"#define USE_LIGHTMAP":"",c.aoMap?"#define USE_AOMAP":"",c.emissiveMap?"#define USE_EMISSIVEMAP":
"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.normalMap&&c.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",c.normalMap&&c.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",c.clearcoatMap?"#define USE_CLEARCOATMAP":"",c.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",c.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",c.displacementMap&&c.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",c.specularMap?"#define USE_SPECULARMAP":
"",c.roughnessMap?"#define USE_ROUGHNESSMAP":"",c.metalnessMap?"#define USE_METALNESSMAP":"",c.alphaMap?"#define USE_ALPHAMAP":"",c.transmissionMap?"#define USE_TRANSMISSIONMAP":"",c.vertexTangents?"#define USE_TANGENT":"",c.vertexColors?"#define USE_COLOR":"",c.vertexUvs?"#define USE_UV":"",c.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",c.flatShading?"#define FLAT_SHADED":"",c.skinning?"#define USE_SKINNING":"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.morphTargets?"#define USE_MORPHTARGETS":
"",c.morphNormals&&!1===c.flatShading?"#define USE_MORPHNORMALS":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+k:"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"",c.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",c.logarithmicDepthBuffer&&c.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;",
"uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;",
"\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;",
"#endif","\n"].filter(filterEmptyLine$$module$node_modules$three$build$three_module).join("\n"),k=[z,generatePrecision$$module$node_modules$three$build$three_module(c),"#define SHADER_NAME "+c.shaderName,F,c.alphaTest?"#define ALPHATEST "+c.alphaTest+(c.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+x,c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.matcap?"#define USE_MATCAP":"",c.envMap?"#define USE_ENVMAP":"",c.envMap?"#define "+n:"",
c.envMap?"#define "+w:"",c.envMap?"#define "+v:"",c.lightMap?"#define USE_LIGHTMAP":"",c.aoMap?"#define USE_AOMAP":"",c.emissiveMap?"#define USE_EMISSIVEMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.normalMap&&c.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",c.normalMap&&c.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",c.clearcoatMap?"#define USE_CLEARCOATMAP":"",c.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",c.clearcoatNormalMap?
"#define USE_CLEARCOAT_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.roughnessMap?"#define USE_ROUGHNESSMAP":"",c.metalnessMap?"#define USE_METALNESSMAP":"",c.alphaMap?"#define USE_ALPHAMAP":"",c.sheen?"#define USE_SHEEN":"",c.transmissionMap?"#define USE_TRANSMISSIONMAP":"",c.vertexTangents?"#define USE_TANGENT":"",c.vertexColors||c.instancingColor?"#define USE_COLOR":"",c.vertexUvs?"#define USE_UV":"",c.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",c.gradientMap?"#define USE_GRADIENTMAP":
"",c.flatShading?"#define FLAT_SHADED":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+k:"",c.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",c.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",c.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",c.logarithmicDepthBuffer&&c.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(c.extensionShaderTextureLOD||c.envMap)&&
c.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",c.toneMapping!==NoToneMapping$$module$node_modules$three$build$three_module?"#define TONE_MAPPING":"",c.toneMapping!==NoToneMapping$$module$node_modules$three$build$three_module?ShaderChunk$$module$node_modules$three$build$three_module.tonemapping_pars_fragment:"",c.toneMapping!==NoToneMapping$$module$node_modules$three$build$three_module?getToneMappingFunction$$module$node_modules$three$build$three_module("toneMapping",
c.toneMapping):"",c.dithering?"#define DITHERING":"",ShaderChunk$$module$node_modules$three$build$three_module.encodings_pars_fragment,c.map?getTexelDecodingFunction$$module$node_modules$three$build$three_module("mapTexelToLinear",c.mapEncoding):"",c.matcap?getTexelDecodingFunction$$module$node_modules$three$build$three_module("matcapTexelToLinear",c.matcapEncoding):"",c.envMap?getTexelDecodingFunction$$module$node_modules$three$build$three_module("envMapTexelToLinear",c.envMapEncoding):"",c.emissiveMap?
getTexelDecodingFunction$$module$node_modules$three$build$three_module("emissiveMapTexelToLinear",c.emissiveMapEncoding):"",c.lightMap?getTexelDecodingFunction$$module$node_modules$three$build$three_module("lightMapTexelToLinear",c.lightMapEncoding):"",getTexelEncodingFunction$$module$node_modules$three$build$three_module("linearToOutputTexel",c.outputEncoding),c.depthPacking?"#define DEPTH_PACKING "+c.depthPacking:"","\n"].filter(filterEmptyLine$$module$node_modules$three$build$three_module).join("\n"));
h=resolveIncludes$$module$node_modules$three$build$three_module(h);h=replaceLightNums$$module$node_modules$three$build$three_module(h,c);h=replaceClippingPlaneNums$$module$node_modules$three$build$three_module(h,c);g=resolveIncludes$$module$node_modules$three$build$three_module(g);g=replaceLightNums$$module$node_modules$three$build$three_module(g,c);g=replaceClippingPlaneNums$$module$node_modules$three$build$three_module(g,c);h=unrollLoops$$module$node_modules$three$build$three_module(h);g=unrollLoops$$module$node_modules$three$build$three_module(g);
c.isWebGL2&&!0!==c.isRawShaderMaterial&&(p="#version 300 es\n",f="#define attribute in\n#define varying out\n#define texture2D texture\n"+f,k=["#define varying in",c.glslVersion===GLSL3$$module$node_modules$three$build$three_module?"":"out highp vec4 pc_fragColor;",c.glslVersion===GLSL3$$module$node_modules$three$build$three_module?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth\n#define texture2D texture\n#define textureCube texture\n#define texture2DProj textureProj\n#define texture2DLodEXT textureLod\n#define texture2DProjLodEXT textureProjLod\n#define textureCubeLodEXT textureLod\n#define texture2DGradEXT textureGrad\n#define texture2DProjGradEXT textureProjGrad\n#define textureCubeGradEXT textureGrad"].join("\n")+
"\n"+k);g=p+k+g;h=WebGLShader$$module$node_modules$three$build$three_module(e,35633,p+f+h);g=WebGLShader$$module$node_modules$three$build$three_module(e,35632,g);e.attachShader(N,h);e.attachShader(N,g);void 0!==c.index0AttributeName?e.bindAttribLocation(N,0,c.index0AttributeName):!0===c.morphTargets&&e.bindAttribLocation(N,0,"position");e.linkProgram(N);if(a.debug.checkShaderErrors){a=e.getProgramInfoLog(N).trim();p=e.getShaderInfoLog(h).trim();n=e.getShaderInfoLog(g).trim();v=w=!0;if(!1===e.getProgramParameter(N,
35714))w=!1,x=getShaderErrors$$module$node_modules$three$build$three_module(e,h,"vertex"),z=getShaderErrors$$module$node_modules$three$build$three_module(e,g,"fragment"),console.error("THREE.WebGLProgram: shader error: ",e.getError(),"35715",e.getProgramParameter(N,35715),"gl.getProgramInfoLog",a,x,z);else if(""!==a)console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",a);else if(""===p||""===n)v=!1;v&&(this.diagnostics={runnable:w,programLog:a,vertexShader:{log:p,prefix:f},fragmentShader:{log:n,
prefix:k}})}e.deleteShader(h);e.deleteShader(g);let A;this.getUniforms=function(){void 0===A&&(A=new WebGLUniforms$$module$node_modules$three$build$three_module(e,N));return A};let G;this.getAttributes=function(){void 0===G&&(G=fetchAttributeLocations$$module$node_modules$three$build$three_module(e,N));return G};this.destroy=function(){d.releaseStatesOfProgram(this);e.deleteProgram(N);this.program=void 0};this.name=c.shaderName;this.id=programIdCount$$module$node_modules$three$build$three_module++;
this.cacheKey=b;this.usedTimes=1;this.program=N;this.vertexShader=h;this.fragmentShader=g;return this}
function WebGLPrograms$$module$node_modules$three$build$three_module(a,b,c,d,e,f){function h(p){let A;p?p.isTexture?A=p.encoding:p.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),A=p.texture.encoding):A=LinearEncoding$$module$node_modules$three$build$three_module;return A}const g=[],k=d.isWebGL2,n=d.logarithmicDepthBuffer,w=d.floatVertexTextures,v=d.maxVertexUniforms,x=d.vertexTextures;
let z=d.precision;const F={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},N="precision isWebGL2 supportsVertexTextures outputEncoding instancing instancingColor map mapEncoding matcap matcapEncoding envMap envMapMode envMapEncoding envMapCubeUV lightMap lightMapEncoding aoMap emissiveMap emissiveMapEncoding bumpMap normalMap objectSpaceNormalMap tangentSpaceNormalMap clearcoatMap clearcoatRoughnessMap clearcoatNormalMap displacementMap specularMap roughnessMap metalnessMap gradientMap alphaMap combine vertexColors vertexTangents vertexUvs uvsVertexOnly fog useFog fogExp2 flatShading sizeAttenuation logarithmicDepthBuffer skinning maxBones useVertexTexture morphTargets morphNormals maxMorphTargets maxMorphNormals premultipliedAlpha numDirLights numPointLights numSpotLights numHemiLights numRectAreaLights numDirLightShadows numPointLightShadows numSpotLightShadows shadowMapEnabled shadowMapType toneMapping physicallyCorrectLights alphaTest doubleSided flipSided numClippingPlanes numClipIntersection depthPacking dithering sheen transmissionMap".split(" ");
return{getParameters:function(p,A,G,O,P){const S=O.fog;O=p.isMeshStandardMaterial?O.environment:null;O=b.get(p.envMap||O);const T=F[p.type];if(P.isSkinnedMesh){var W=P.skeleton.bones;if(w)W=1024;else{var X=Math.min(Math.floor((v-20)/4),W.length);X<W.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+W.length+" bones. This GPU supports "+X+"."),W=0):W=X}}else W=0;null!==p.precision&&(z=d.getMaxPrecision(p.precision),z!==p.precision&&console.warn("THREE.WebGLProgram.getParameters:",p.precision,
"not supported, using",z,"instead."));if(T){var U=ShaderLib$$module$node_modules$three$build$three_module[T];X=U.vertexShader;U=U.fragmentShader}else X=p.vertexShader,U=p.fragmentShader;const Z=a.getRenderTarget();return{isWebGL2:k,shaderID:T,shaderName:p.type,vertexShader:X,fragmentShader:U,defines:p.defines,isRawShaderMaterial:!0===p.isRawShaderMaterial,glslVersion:p.glslVersion,precision:z,instancing:!0===P.isInstancedMesh,instancingColor:!0===P.isInstancedMesh&&null!==P.instanceColor,supportsVertexTextures:x,
outputEncoding:null!==Z?h(Z.texture):a.outputEncoding,map:!!p.map,mapEncoding:h(p.map),matcap:!!p.matcap,matcapEncoding:h(p.matcap),envMap:!!O,envMapMode:O&&O.mapping,envMapEncoding:h(O),envMapCubeUV:!!O&&(O.mapping===CubeUVReflectionMapping$$module$node_modules$three$build$three_module||O.mapping===CubeUVRefractionMapping$$module$node_modules$three$build$three_module),lightMap:!!p.lightMap,lightMapEncoding:h(p.lightMap),aoMap:!!p.aoMap,emissiveMap:!!p.emissiveMap,emissiveMapEncoding:h(p.emissiveMap),
bumpMap:!!p.bumpMap,normalMap:!!p.normalMap,objectSpaceNormalMap:p.normalMapType===ObjectSpaceNormalMap$$module$node_modules$three$build$three_module,tangentSpaceNormalMap:p.normalMapType===TangentSpaceNormalMap$$module$node_modules$three$build$three_module,clearcoatMap:!!p.clearcoatMap,clearcoatRoughnessMap:!!p.clearcoatRoughnessMap,clearcoatNormalMap:!!p.clearcoatNormalMap,displacementMap:!!p.displacementMap,roughnessMap:!!p.roughnessMap,metalnessMap:!!p.metalnessMap,specularMap:!!p.specularMap,
alphaMap:!!p.alphaMap,gradientMap:!!p.gradientMap,sheen:!!p.sheen,transmissionMap:!!p.transmissionMap,combine:p.combine,vertexTangents:p.normalMap&&p.vertexTangents,vertexColors:p.vertexColors,vertexUvs:!!p.map||!!p.bumpMap||!!p.normalMap||!!p.specularMap||!!p.alphaMap||!!p.emissiveMap||!!p.roughnessMap||!!p.metalnessMap||!!p.clearcoatMap||!!p.clearcoatRoughnessMap||!!p.clearcoatNormalMap||!!p.displacementMap||!!p.transmissionMap,uvsVertexOnly:!(p.map||p.bumpMap||p.normalMap||p.specularMap||p.alphaMap||
p.emissiveMap||p.roughnessMap||p.metalnessMap||p.clearcoatNormalMap||p.transmissionMap)&&!!p.displacementMap,fog:!!S,useFog:p.fog,fogExp2:S&&S.isFogExp2,flatShading:p.flatShading,sizeAttenuation:p.sizeAttenuation,logarithmicDepthBuffer:n,skinning:p.skinning&&0<W,maxBones:W,useVertexTexture:w,morphTargets:p.morphTargets,morphNormals:p.morphNormals,maxMorphTargets:a.maxMorphTargets,maxMorphNormals:a.maxMorphNormals,numDirLights:A.directional.length,numPointLights:A.point.length,numSpotLights:A.spot.length,
numRectAreaLights:A.rectArea.length,numHemiLights:A.hemi.length,numDirLightShadows:A.directionalShadowMap.length,numPointLightShadows:A.pointShadowMap.length,numSpotLightShadows:A.spotShadowMap.length,numClippingPlanes:f.numPlanes,numClipIntersection:f.numIntersection,dithering:p.dithering,shadowMapEnabled:a.shadowMap.enabled&&0<G.length,shadowMapType:a.shadowMap.type,toneMapping:p.toneMapped?a.toneMapping:NoToneMapping$$module$node_modules$three$build$three_module,physicallyCorrectLights:a.physicallyCorrectLights,
premultipliedAlpha:p.premultipliedAlpha,alphaTest:p.alphaTest,doubleSided:p.side===DoubleSide$$module$node_modules$three$build$three_module,flipSided:p.side===BackSide$$module$node_modules$three$build$three_module,depthPacking:void 0!==p.depthPacking?p.depthPacking:!1,index0AttributeName:p.index0AttributeName,extensionDerivatives:p.extensions&&p.extensions.derivatives,extensionFragDepth:p.extensions&&p.extensions.fragDepth,extensionDrawBuffers:p.extensions&&p.extensions.drawBuffers,extensionShaderTextureLOD:p.extensions&&
p.extensions.shaderTextureLOD,rendererExtensionFragDepth:k||c.has("EXT_frag_depth"),rendererExtensionDrawBuffers:k||c.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:k||c.has("EXT_shader_texture_lod"),customProgramCacheKey:p.customProgramCacheKey()}},getProgramCacheKey:function(p){const A=[];p.shaderID?A.push(p.shaderID):(A.push(p.fragmentShader),A.push(p.vertexShader));if(void 0!==p.defines)for(var G in p.defines)A.push(G),A.push(p.defines[G]);if(!1===p.isRawShaderMaterial){for(G=0;G<
N.length;G++)A.push(p[N[G]]);A.push(a.outputEncoding);A.push(a.gammaFactor)}A.push(p.customProgramCacheKey);return A.join()},getUniforms:function(p){const A=F[p.type];return A?UniformsUtils$$module$node_modules$three$build$three_module.clone(ShaderLib$$module$node_modules$three$build$three_module[A].uniforms):p.uniforms},acquireProgram:function(p,A){let G;for(let O=0,P=g.length;O<P;O++){const S=g[O];if(S.cacheKey===A){G=S;++G.usedTimes;break}}void 0===G&&(G=new WebGLProgram$$module$node_modules$three$build$three_module(a,
A,p,e),g.push(G));return G},releaseProgram:function(p){if(0===--p.usedTimes){const A=g.indexOf(p);g[A]=g[g.length-1];g.pop();p.destroy()}},programs:g}}function WebGLProperties$$module$node_modules$three$build$three_module(){let a=new WeakMap;return{get:function(b){let c=a.get(b);void 0===c&&(c={},a.set(b,c));return c},remove:function(b){a.delete(b)},update:function(b,c,d){a.get(b)[c]=d},dispose:function(){a=new WeakMap}}}
function painterSortStable$$module$node_modules$three$build$three_module(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.program!==b.program?a.program.id-b.program.id:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}
function reversePainterSortStable$$module$node_modules$three$build$three_module(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}
function WebGLRenderList$$module$node_modules$three$build$three_module(a){function b(g,k,n,w,v,x){let z=c[d];const F=a.get(n);void 0===z?(z={id:g.id,object:g,geometry:k,material:n,program:F.program||h,groupOrder:w,renderOrder:g.renderOrder,z:v,group:x},c[d]=z):(z.id=g.id,z.object=g,z.geometry=k,z.material=n,z.program=F.program||h,z.groupOrder=w,z.renderOrder=g.renderOrder,z.z=v,z.group=x);d++;return z}const c=[];let d=0;const e=[],f=[],h={id:-1};return{opaque:e,transparent:f,init:function(){d=0;e.length=
0;f.length=0},push:function(g,k,n,w,v,x){g=b(g,k,n,w,v,x);(!0===n.transparent?f:e).push(g)},unshift:function(g,k,n,w,v,x){g=b(g,k,n,w,v,x);(!0===n.transparent?f:e).unshift(g)},finish:function(){for(let g=d,k=c.length;g<k;g++){const n=c[g];if(null===n.id)break;n.id=null;n.object=null;n.geometry=null;n.material=null;n.program=null;n.group=null}},sort:function(g,k){1<e.length&&e.sort(g||painterSortStable$$module$node_modules$three$build$three_module);1<f.length&&f.sort(k||reversePainterSortStable$$module$node_modules$three$build$three_module)}}}
function WebGLRenderLists$$module$node_modules$three$build$three_module(a){let b=new WeakMap;return{get:function(c,d){const e=b.get(c);let f;void 0===e?(f=new WebGLRenderList$$module$node_modules$three$build$three_module(a),b.set(c,new WeakMap),b.get(c).set(d,f)):(f=e.get(d),void 0===f&&(f=new WebGLRenderList$$module$node_modules$three$build$three_module(a),e.set(d,f)));return f},dispose:function(){b=new WeakMap}}}
function UniformsCache$$module$node_modules$three$build$three_module(){const a={};return{get:function(b){if(void 0!==a[b.id])return a[b.id];let c;switch(b.type){case "DirectionalLight":c={direction:new Vector3$$module$node_modules$three$build$three_module,color:new Color$$module$node_modules$three$build$three_module};break;case "SpotLight":c={position:new Vector3$$module$node_modules$three$build$three_module,direction:new Vector3$$module$node_modules$three$build$three_module,color:new Color$$module$node_modules$three$build$three_module,
distance:0,coneCos:0,penumbraCos:0,decay:0};break;case "PointLight":c={position:new Vector3$$module$node_modules$three$build$three_module,color:new Color$$module$node_modules$three$build$three_module,distance:0,decay:0};break;case "HemisphereLight":c={direction:new Vector3$$module$node_modules$three$build$three_module,skyColor:new Color$$module$node_modules$three$build$three_module,groundColor:new Color$$module$node_modules$three$build$three_module};break;case "RectAreaLight":c={color:new Color$$module$node_modules$three$build$three_module,
position:new Vector3$$module$node_modules$three$build$three_module,halfWidth:new Vector3$$module$node_modules$three$build$three_module,halfHeight:new Vector3$$module$node_modules$three$build$three_module}}return a[b.id]=c}}}
function ShadowUniformsCache$$module$node_modules$three$build$three_module(){const a={};return{get:function(b){if(void 0!==a[b.id])return a[b.id];let c;switch(b.type){case "DirectionalLight":c={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2$$module$node_modules$three$build$three_module};break;case "SpotLight":c={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2$$module$node_modules$three$build$three_module};break;case "PointLight":c={shadowBias:0,shadowNormalBias:0,
shadowRadius:1,shadowMapSize:new Vector2$$module$node_modules$three$build$three_module,shadowCameraNear:1,shadowCameraFar:1E3}}return a[b.id]=c}}}let nextVersion$$module$node_modules$three$build$three_module=0;function shadowCastingLightsFirst$$module$node_modules$three$build$three_module(a,b){return(b.castShadow?1:0)-(a.castShadow?1:0)}
function WebGLLights$$module$node_modules$three$build$three_module(){const a=new UniformsCache$$module$node_modules$three$build$three_module,b=ShadowUniformsCache$$module$node_modules$three$build$three_module(),c={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],
spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let h=0;9>h;h++)c.probe.push(new Vector3$$module$node_modules$three$build$three_module);const d=new Vector3$$module$node_modules$three$build$three_module,e=new Matrix4$$module$node_modules$three$build$three_module,f=new Matrix4$$module$node_modules$three$build$three_module;return{setup:function(h,g,k){let n=g=0,w=0;for(var v=0;9>v;v++)c.probe[v].set(0,
0,0);let x=v=0,z=0,F=0,N=0,p=0,A=0,G=0;k=k.matrixWorldInverse;h.sort(shadowCastingLightsFirst$$module$node_modules$three$build$three_module);for(let W=0,X=h.length;W<X;W++){const U=h[W];var O=U.color,P=U.intensity;const Z=U.distance;var S=U.shadow&&U.shadow.map?U.shadow.map.texture:null;if(U.isAmbientLight)g+=O.r*P,n+=O.g*P,w+=O.b*P;else if(U.isLightProbe)for(S=0;9>S;S++)c.probe[S].addScaledVector(U.sh.coefficients[S],P);else if(U.isDirectionalLight){P=a.get(U);P.color.copy(U.color).multiplyScalar(U.intensity);
P.direction.setFromMatrixPosition(U.matrixWorld);d.setFromMatrixPosition(U.target.matrixWorld);P.direction.sub(d);P.direction.transformDirection(k);if(U.castShadow){var T=U.shadow;O=b.get(U);O.shadowBias=T.bias;O.shadowNormalBias=T.normalBias;O.shadowRadius=T.radius;O.shadowMapSize=T.mapSize;c.directionalShadow[v]=O;c.directionalShadowMap[v]=S;c.directionalShadowMatrix[v]=U.shadow.matrix;p++}c.directional[v]=P;v++}else U.isSpotLight?(T=a.get(U),T.position.setFromMatrixPosition(U.matrixWorld),T.position.applyMatrix4(k),
T.color.copy(O).multiplyScalar(P),T.distance=Z,T.direction.setFromMatrixPosition(U.matrixWorld),d.setFromMatrixPosition(U.target.matrixWorld),T.direction.sub(d),T.direction.transformDirection(k),T.coneCos=Math.cos(U.angle),T.penumbraCos=Math.cos(U.angle*(1-U.penumbra)),T.decay=U.decay,U.castShadow&&(P=U.shadow,O=b.get(U),O.shadowBias=P.bias,O.shadowNormalBias=P.normalBias,O.shadowRadius=P.radius,O.shadowMapSize=P.mapSize,c.spotShadow[z]=O,c.spotShadowMap[z]=S,c.spotShadowMatrix[z]=U.shadow.matrix,
G++),c.spot[z]=T,z++):U.isRectAreaLight?(S=a.get(U),S.color.copy(O).multiplyScalar(P),S.position.setFromMatrixPosition(U.matrixWorld),S.position.applyMatrix4(k),f.identity(),e.copy(U.matrixWorld),e.premultiply(k),f.extractRotation(e),S.halfWidth.set(.5*U.width,0,0),S.halfHeight.set(0,.5*U.height,0),S.halfWidth.applyMatrix4(f),S.halfHeight.applyMatrix4(f),c.rectArea[F]=S,F++):U.isPointLight?(P=a.get(U),P.position.setFromMatrixPosition(U.matrixWorld),P.position.applyMatrix4(k),P.color.copy(U.color).multiplyScalar(U.intensity),
P.distance=U.distance,P.decay=U.decay,U.castShadow&&(T=U.shadow,O=b.get(U),O.shadowBias=T.bias,O.shadowNormalBias=T.normalBias,O.shadowRadius=T.radius,O.shadowMapSize=T.mapSize,O.shadowCameraNear=T.camera.near,O.shadowCameraFar=T.camera.far,c.pointShadow[x]=O,c.pointShadowMap[x]=S,c.pointShadowMatrix[x]=U.shadow.matrix,A++),c.point[x]=P,x++):U.isHemisphereLight&&(S=a.get(U),S.direction.setFromMatrixPosition(U.matrixWorld),S.direction.transformDirection(k),S.direction.normalize(),S.skyColor.copy(U.color).multiplyScalar(P),
S.groundColor.copy(U.groundColor).multiplyScalar(P),c.hemi[N]=S,N++)}0<F&&(c.rectAreaLTC1=UniformsLib$$module$node_modules$three$build$three_module.LTC_1,c.rectAreaLTC2=UniformsLib$$module$node_modules$three$build$three_module.LTC_2);c.ambient[0]=g;c.ambient[1]=n;c.ambient[2]=w;h=c.hash;if(h.directionalLength!==v||h.pointLength!==x||h.spotLength!==z||h.rectAreaLength!==F||h.hemiLength!==N||h.numDirectionalShadows!==p||h.numPointShadows!==A||h.numSpotShadows!==G)c.directional.length=v,c.spot.length=
z,c.rectArea.length=F,c.point.length=x,c.hemi.length=N,c.directionalShadow.length=p,c.directionalShadowMap.length=p,c.pointShadow.length=A,c.pointShadowMap.length=A,c.spotShadow.length=G,c.spotShadowMap.length=G,c.directionalShadowMatrix.length=p,c.pointShadowMatrix.length=A,c.spotShadowMatrix.length=G,h.directionalLength=v,h.pointLength=x,h.spotLength=z,h.rectAreaLength=F,h.hemiLength=N,h.numDirectionalShadows=p,h.numPointShadows=A,h.numSpotShadows=G,c.version=nextVersion$$module$node_modules$three$build$three_module++},
state:c}}function WebGLRenderState$$module$node_modules$three$build$three_module(){const a=new WebGLLights$$module$node_modules$three$build$three_module,b=[],c=[];return{init:function(){b.length=0;c.length=0},state:{lightsArray:b,shadowsArray:c,lights:a},setupLights:function(d){a.setup(b,c,d)},pushLight:function(d){b.push(d)},pushShadow:function(d){c.push(d)}}}
function WebGLRenderStates$$module$node_modules$three$build$three_module(){let a=new WeakMap;return{get:function(b,c){let d;!1===a.has(b)?(d=new WebGLRenderState$$module$node_modules$three$build$three_module,a.set(b,new WeakMap),a.get(b).set(c,d)):!1===a.get(b).has(c)?(d=new WebGLRenderState$$module$node_modules$three$build$three_module,a.get(b).set(c,d)):d=a.get(b).get(c);return d},dispose:function(){a=new WeakMap}}}
function MeshDepthMaterial$$module$node_modules$three$build$three_module(a){Material$$module$node_modules$three$build$three_module.call(this);this.type="MeshDepthMaterial";this.depthPacking=BasicDepthPacking$$module$node_modules$three$build$three_module;this.morphTargets=this.skinning=!1;this.displacementMap=this.alphaMap=this.map=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=!1;this.wireframeLinewidth=1;this.fog=!1;this.setValues(a)}
MeshDepthMaterial$$module$node_modules$three$build$three_module.prototype=Object.create(Material$$module$node_modules$three$build$three_module.prototype);MeshDepthMaterial$$module$node_modules$three$build$three_module.prototype.constructor=MeshDepthMaterial$$module$node_modules$three$build$three_module;MeshDepthMaterial$$module$node_modules$three$build$three_module.prototype.isMeshDepthMaterial=!0;
MeshDepthMaterial$$module$node_modules$three$build$three_module.prototype.copy=function(a){Material$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.depthPacking=a.depthPacking;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.map=a.map;this.alphaMap=a.alphaMap;this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;return this};
function MeshDistanceMaterial$$module$node_modules$three$build$three_module(a){Material$$module$node_modules$three$build$three_module.call(this);this.type="MeshDistanceMaterial";this.referencePosition=new Vector3$$module$node_modules$three$build$three_module;this.nearDistance=1;this.farDistance=1E3;this.morphTargets=this.skinning=!1;this.displacementMap=this.alphaMap=this.map=null;this.displacementScale=1;this.displacementBias=0;this.fog=!1;this.setValues(a)}
MeshDistanceMaterial$$module$node_modules$three$build$three_module.prototype=Object.create(Material$$module$node_modules$three$build$three_module.prototype);MeshDistanceMaterial$$module$node_modules$three$build$three_module.prototype.constructor=MeshDistanceMaterial$$module$node_modules$three$build$three_module;MeshDistanceMaterial$$module$node_modules$three$build$three_module.prototype.isMeshDistanceMaterial=!0;
MeshDistanceMaterial$$module$node_modules$three$build$three_module.prototype.copy=function(a){Material$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.referencePosition.copy(a.referencePosition);this.nearDistance=a.nearDistance;this.farDistance=a.farDistance;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.map=a.map;this.alphaMap=a.alphaMap;this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;
return this};
var vsm_frag$$module$node_modules$three$build$three_module="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}",vsm_vert$$module$node_modules$three$build$three_module=
"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";
function WebGLShadowMap$$module$node_modules$three$build$three_module(a,b,c){function d(P,S,T){T=P<<0|S<<1|T<<2;let W=v[T];void 0===W&&(W=new MeshDepthMaterial$$module$node_modules$three$build$three_module({depthPacking:RGBADepthPacking$$module$node_modules$three$build$three_module,morphTargets:P,skinning:S}),v[T]=W);return W}function e(P,S,T){T=P<<0|S<<1|T<<2;let W=x[T];void 0===W&&(W=new MeshDistanceMaterial$$module$node_modules$three$build$three_module({morphTargets:P,skinning:S}),x[T]=W);return W}
function f(P,S,T,W,X,U,Z){var aa=d,r=P.customDepthMaterial;!0===W.isPointLight&&(aa=e,r=P.customDistanceMaterial);void 0===r?(r=!1,!0===T.morphTargets&&(r=S.morphAttributes&&S.morphAttributes.position&&0<S.morphAttributes.position.length),S=!1,!0===P.isSkinnedMesh&&(!0===T.skinning?S=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",P)),P=aa(r,S,!0===P.isInstancedMesh)):P=r;a.localClippingEnabled&&!0===T.clipShadows&&0!==T.clippingPlanes.length&&(r=P.uuid,
aa=T.uuid,S=z[r],void 0===S&&(S={},z[r]=S),r=S[aa],void 0===r&&(r=P.clone(),S[aa]=r),P=r);P.visible=T.visible;P.wireframe=T.wireframe;P.side=Z===VSMShadowMap$$module$node_modules$three$build$three_module?null!==T.shadowSide?T.shadowSide:T.side:null!==T.shadowSide?T.shadowSide:F[T.side];P.clipShadows=T.clipShadows;P.clippingPlanes=T.clippingPlanes;P.clipIntersection=T.clipIntersection;P.wireframeLinewidth=T.wireframeLinewidth;P.linewidth=T.linewidth;!0===W.isPointLight&&!0===P.isMeshDistanceMaterial&&
(P.referencePosition.setFromMatrixPosition(W.matrixWorld),P.nearDistance=X,P.farDistance=U);return P}function h(P,S,T,W,X){if(!1!==P.visible){if(P.layers.test(S.layers)&&(P.isMesh||P.isLine||P.isPoints)&&(P.castShadow||P.receiveShadow&&X===VSMShadowMap$$module$node_modules$three$build$three_module)&&(!P.frustumCulled||g.intersectsObject(P))){P.modelViewMatrix.multiplyMatrices(T.matrixWorldInverse,P.matrixWorld);const aa=b.update(P);var U=P.material;if(Array.isArray(U)){const r=aa.groups;for(let y=
0,J=r.length;y<J;y++){const C=r[y];var Z=U[C.materialIndex];Z&&Z.visible&&(Z=f(P,aa,Z,W,T.near,T.far,X),a.renderBufferDirect(T,null,aa,Z,P,C))}}else U.visible&&(U=f(P,aa,U,W,T.near,T.far,X),a.renderBufferDirect(T,null,aa,U,P,null))}P=P.children;for(let aa=0,r=P.length;aa<r;aa++)h(P[aa],S,T,W,X)}}let g=new Frustum$$module$node_modules$three$build$three_module;const k=new Vector2$$module$node_modules$three$build$three_module,n=new Vector2$$module$node_modules$three$build$three_module,w=new Vector4$$module$node_modules$three$build$three_module,
v=[],x=[],z={},F={0:BackSide$$module$node_modules$three$build$three_module,1:FrontSide$$module$node_modules$three$build$three_module,2:DoubleSide$$module$node_modules$three$build$three_module},N=new ShaderMaterial$$module$node_modules$three$build$three_module({defines:{SAMPLE_RATE:.25,HALF_SAMPLE_RATE:.125},uniforms:{shadow_pass:{value:null},resolution:{value:new Vector2$$module$node_modules$three$build$three_module},radius:{value:4}},vertexShader:vsm_vert$$module$node_modules$three$build$three_module,
fragmentShader:vsm_frag$$module$node_modules$three$build$three_module}),p=N.clone();p.defines.HORIZONAL_PASS=1;const A=new BufferGeometry$$module$node_modules$three$build$three_module;A.setAttribute("position",new BufferAttribute$$module$node_modules$three$build$three_module(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const G=new Mesh$$module$node_modules$three$build$three_module(A,N),O=this;this.enabled=!1;this.autoUpdate=!0;this.needsUpdate=!1;this.type=PCFShadowMap$$module$node_modules$three$build$three_module;
this.render=function(P,S,T){if(!1!==O.enabled&&(!1!==O.autoUpdate||!1!==O.needsUpdate)&&0!==P.length){var W=a.getRenderTarget(),X=a.getActiveCubeFace(),U=a.getActiveMipmapLevel(),Z=a.state;Z.setBlending(NoBlending$$module$node_modules$three$build$three_module);Z.buffers.color.setClear(1,1,1,1);Z.buffers.depth.setTest(!0);Z.setScissorTest(!1);for(let J=0,C=P.length;J<C;J++){var aa=P[J];const E=aa.shadow;if(!1!==E.autoUpdate||!1!==E.needsUpdate)if(void 0===E)console.warn("THREE.WebGLShadowMap:",aa,
"has no shadow.");else{k.copy(E.mapSize);var r=E.getFrameExtents();k.multiply(r);n.copy(E.mapSize);if(k.x>c||k.y>c)k.x>c&&(n.x=Math.floor(c/r.x),k.x=n.x*r.x,E.mapSize.x=n.x),k.y>c&&(n.y=Math.floor(c/r.y),k.y=n.y*r.y,E.mapSize.y=n.y);null!==E.map||E.isPointLightShadow||this.type!==VSMShadowMap$$module$node_modules$three$build$three_module||(r={minFilter:LinearFilter$$module$node_modules$three$build$three_module,magFilter:LinearFilter$$module$node_modules$three$build$three_module,format:RGBAFormat$$module$node_modules$three$build$three_module},
E.map=new WebGLRenderTarget$$module$node_modules$three$build$three_module(k.x,k.y,r),E.map.texture.name=aa.name+".shadowMap",E.mapPass=new WebGLRenderTarget$$module$node_modules$three$build$three_module(k.x,k.y,r),E.camera.updateProjectionMatrix());null===E.map&&(E.map=new WebGLRenderTarget$$module$node_modules$three$build$three_module(k.x,k.y,{minFilter:NearestFilter$$module$node_modules$three$build$three_module,magFilter:NearestFilter$$module$node_modules$three$build$three_module,format:RGBAFormat$$module$node_modules$three$build$three_module}),
E.map.texture.name=aa.name+".shadowMap",E.camera.updateProjectionMatrix());a.setRenderTarget(E.map);a.clear();r=E.getViewportCount();for(var y=0;y<r;y++){const I=E.getViewport(y);w.set(n.x*I.x,n.y*I.y,n.x*I.z,n.y*I.w);Z.viewport(w);E.updateMatrices(aa,y);g=E.getFrustum();h(S,T,E.camera,aa,this.type)}E.isPointLightShadow||this.type!==VSMShadowMap$$module$node_modules$three$build$three_module||(aa=E,r=T,y=b.update(G),N.uniforms.shadow_pass.value=aa.map.texture,N.uniforms.resolution.value=aa.mapSize,
N.uniforms.radius.value=aa.radius,a.setRenderTarget(aa.mapPass),a.clear(),a.renderBufferDirect(r,null,y,N,G,null),p.uniforms.shadow_pass.value=aa.mapPass.texture,p.uniforms.resolution.value=aa.mapSize,p.uniforms.radius.value=aa.radius,a.setRenderTarget(aa.map),a.clear(),a.renderBufferDirect(r,null,y,p,G,null));E.needsUpdate=!1}}O.needsUpdate=!1;a.setRenderTarget(W,X,U)}}}
function WebGLState$$module$node_modules$three$build$three_module(a,b,c){function d(t,B,H){const M=new Uint8Array(4),K=a.createTexture();a.bindTexture(t,K);a.texParameteri(t,10241,9728);a.texParameteri(t,10240,9728);for(t=0;t<H;t++)a.texImage2D(B+t,0,6408,1,1,0,6408,5121,M);return K}function e(t){!0!==F[t]&&(a.enable(t),F[t]=!0)}function f(t){!1!==F[t]&&(a.disable(t),F[t]=!1)}function h(t,B,H,M,K,R,Q,Y){if(t===NoBlending$$module$node_modules$three$build$three_module)p&&(f(3042),p=!1);else if(p||(e(3042),
p=!0),t!==CustomBlending$$module$node_modules$three$build$three_module){if(t!==A||Y!==X){if(G!==AddEquation$$module$node_modules$three$build$three_module||S!==AddEquation$$module$node_modules$three$build$three_module)a.blendEquation(32774),S=G=AddEquation$$module$node_modules$three$build$three_module;if(Y)switch(t){case NormalBlending$$module$node_modules$three$build$three_module:a.blendFuncSeparate(1,771,1,771);break;case AdditiveBlending$$module$node_modules$three$build$three_module:a.blendFunc(1,
1);break;case SubtractiveBlending$$module$node_modules$three$build$three_module:a.blendFuncSeparate(0,0,769,771);break;case MultiplyBlending$$module$node_modules$three$build$three_module:a.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case NormalBlending$$module$node_modules$three$build$three_module:a.blendFuncSeparate(770,771,1,771);break;case AdditiveBlending$$module$node_modules$three$build$three_module:a.blendFunc(770,1);break;
case SubtractiveBlending$$module$node_modules$three$build$three_module:a.blendFunc(0,769);break;case MultiplyBlending$$module$node_modules$three$build$three_module:a.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}W=T=P=O=null;A=t;X=Y}}else{K=K||B;R=R||H;Q=Q||M;if(B!==G||K!==S)a.blendEquationSeparate(l[B],l[K]),G=B,S=K;if(H!==O||M!==P||R!==T||Q!==W)a.blendFuncSeparate(q[H],q[M],q[R],q[Q]),O=H,P=M,T=R,W=Q;A=t;X=null}}function g(t){U!==t&&(t?a.frontFace(2304):
a.frontFace(2305),U=t)}function k(t){t!==CullFaceNone$$module$node_modules$three$build$three_module?(e(2884),t!==Z&&(t===CullFaceBack$$module$node_modules$three$build$three_module?a.cullFace(1029):t===CullFaceFront$$module$node_modules$three$build$three_module?a.cullFace(1028):a.cullFace(1032))):f(2884);Z=t}function n(t,B,H){if(t){if(e(32823),r!==B||y!==H)a.polygonOffset(B,H),r=B,y=H}else f(32823)}function w(t){void 0===t&&(t=33984+J-1);I!==t&&(a.activeTexture(t),I=t)}c=c.isWebGL2;const v=new function(){let t=
!1;const B=new Vector4$$module$node_modules$three$build$three_module;let H=null;const M=new Vector4$$module$node_modules$three$build$three_module(0,0,0,0);return{setMask:function(K){H===K||t||(a.colorMask(K,K,K,K),H=K)},setLocked:function(K){t=K},setClear:function(K,R,Q,Y,da){!0===da&&(K*=Y,R*=Y,Q*=Y);B.set(K,R,Q,Y);!1===M.equals(B)&&(a.clearColor(K,R,Q,Y),M.copy(B))},reset:function(){t=!1;H=null;M.set(-1,0,0,0)}}},x=new function(){let t=!1,B=null,H=null,M=null;return{setTest:function(K){K?e(2929):
f(2929)},setMask:function(K){B===K||t||(a.depthMask(K),B=K)},setFunc:function(K){if(H!==K){if(K)switch(K){case NeverDepth$$module$node_modules$three$build$three_module:a.depthFunc(512);break;case AlwaysDepth$$module$node_modules$three$build$three_module:a.depthFunc(519);break;case LessDepth$$module$node_modules$three$build$three_module:a.depthFunc(513);break;case LessEqualDepth$$module$node_modules$three$build$three_module:a.depthFunc(515);break;case EqualDepth$$module$node_modules$three$build$three_module:a.depthFunc(514);
break;case GreaterEqualDepth$$module$node_modules$three$build$three_module:a.depthFunc(518);break;case GreaterDepth$$module$node_modules$three$build$three_module:a.depthFunc(516);break;case NotEqualDepth$$module$node_modules$three$build$three_module:a.depthFunc(517);break;default:a.depthFunc(515)}else a.depthFunc(515);H=K}},setLocked:function(K){t=K},setClear:function(K){M!==K&&(a.clearDepth(K),M=K)},reset:function(){t=!1;M=H=B=null}}},z=new function(){let t=!1,B=null,H=null,M=null,K=null,R=null,
Q=null,Y=null,da=null;return{setTest:function(ca){t||(ca?e(2960):f(2960))},setMask:function(ca){B===ca||t||(a.stencilMask(ca),B=ca)},setFunc:function(ca,ia,na){if(H!==ca||M!==ia||K!==na)a.stencilFunc(ca,ia,na),H=ca,M=ia,K=na},setOp:function(ca,ia,na){if(R!==ca||Q!==ia||Y!==na)a.stencilOp(ca,ia,na),R=ca,Q=ia,Y=na},setLocked:function(ca){t=ca},setClear:function(ca){da!==ca&&(a.clearStencil(ca),da=ca)},reset:function(){t=!1;da=Y=Q=R=K=M=H=B=null}}};let F={},N=null,p=null,A=null,G=null,O=null,P=null,
S=null,T=null,W=null,X=!1,U=null,Z=null,aa=null,r=null,y=null;const J=a.getParameter(35661);let C=!1;var E=0;E=a.getParameter(7938);-1!==E.indexOf("WebGL")?(E=parseFloat(/^WebGL ([0-9])/.exec(E)[1]),C=1<=E):-1!==E.indexOf("OpenGL ES")&&(E=parseFloat(/^OpenGL ES ([0-9])/.exec(E)[1]),C=2<=E);let I=null,L={};const m=new Vector4$$module$node_modules$three$build$three_module,u=new Vector4$$module$node_modules$three$build$three_module,D={};D[3553]=d(3553,3553,1);D[34067]=d(34067,34069,6);v.setClear(0,0,
0,1);x.setClear(1);z.setClear(0);e(2929);x.setFunc(LessEqualDepth$$module$node_modules$three$build$three_module);g(!1);k(CullFaceBack$$module$node_modules$three$build$three_module);e(2884);h(NoBlending$$module$node_modules$three$build$three_module);const l={[AddEquation$$module$node_modules$three$build$three_module]:32774,[SubtractEquation$$module$node_modules$three$build$three_module]:32778,[ReverseSubtractEquation$$module$node_modules$three$build$three_module]:32779};c?(l[MinEquation$$module$node_modules$three$build$three_module]=
32775,l[MaxEquation$$module$node_modules$three$build$three_module]=32776):(b=b.get("EXT_blend_minmax"),null!==b&&(l[MinEquation$$module$node_modules$three$build$three_module]=b.MIN_EXT,l[MaxEquation$$module$node_modules$three$build$three_module]=b.MAX_EXT));const q={[ZeroFactor$$module$node_modules$three$build$three_module]:0,[OneFactor$$module$node_modules$three$build$three_module]:1,[SrcColorFactor$$module$node_modules$three$build$three_module]:768,[SrcAlphaFactor$$module$node_modules$three$build$three_module]:770,
[SrcAlphaSaturateFactor$$module$node_modules$three$build$three_module]:776,[DstColorFactor$$module$node_modules$three$build$three_module]:774,[DstAlphaFactor$$module$node_modules$three$build$three_module]:772,[OneMinusSrcColorFactor$$module$node_modules$three$build$three_module]:769,[OneMinusSrcAlphaFactor$$module$node_modules$three$build$three_module]:771,[OneMinusDstColorFactor$$module$node_modules$three$build$three_module]:775,[OneMinusDstAlphaFactor$$module$node_modules$three$build$three_module]:773};
return{buffers:{color:v,depth:x,stencil:z},enable:e,disable:f,useProgram:function(t){return N!==t?(a.useProgram(t),N=t,!0):!1},setBlending:h,setMaterial:function(t,B){t.side===DoubleSide$$module$node_modules$three$build$three_module?f(2884):e(2884);let H=t.side===BackSide$$module$node_modules$three$build$three_module;B&&(H=!H);g(H);t.blending===NormalBlending$$module$node_modules$three$build$three_module&&!1===t.transparent?h(NoBlending$$module$node_modules$three$build$three_module):h(t.blending,
t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha);x.setFunc(t.depthFunc);x.setTest(t.depthTest);x.setMask(t.depthWrite);v.setMask(t.colorWrite);B=t.stencilWrite;z.setTest(B);B&&(z.setMask(t.stencilWriteMask),z.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),z.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass));n(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits)},setFlipSided:g,setCullFace:k,setLineWidth:function(t){t!==
aa&&(C&&a.lineWidth(t),aa=t)},setPolygonOffset:n,setScissorTest:function(t){t?e(3089):f(3089)},activeTexture:w,bindTexture:function(t,B){null===I&&w();let H=L[I];void 0===H&&(H={type:void 0,texture:void 0},L[I]=H);if(H.type!==t||H.texture!==B)a.bindTexture(t,B||D[t]),H.type=t,H.texture=B},unbindTexture:function(){const t=L[I];void 0!==t&&void 0!==t.type&&(a.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{a.compressedTexImage2D.apply(a,arguments)}catch(t){console.error("THREE.WebGLState:",
t)}},texImage2D:function(){try{a.texImage2D.apply(a,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{a.texImage3D.apply(a,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(t){!1===m.equals(t)&&(a.scissor(t.x,t.y,t.z,t.w),m.copy(t))},viewport:function(t){!1===u.equals(t)&&(a.viewport(t.x,t.y,t.z,t.w),u.copy(t))},reset:function(){F={};I=null;L={};Z=U=A=N=null;v.reset();x.reset();z.reset()}}}
function WebGLTextures$$module$node_modules$three$build$three_module(a,b,c,d,e,f,h){function g(l,q){return E?new OffscreenCanvas(l,q):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function k(l,q,t,B){var H=1;if(l.width>B||l.height>B)H=B/Math.max(l.width,l.height);if(1>H||!0===q){if("undefined"!==typeof HTMLImageElement&&l instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&l instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&l instanceof ImageBitmap)return B=
q?MathUtils$$module$node_modules$three$build$three_module.floorPowerOfTwo:Math.floor,q=B(H*l.width),H=B(H*l.height),void 0===C&&(C=g(q,H)),t=t?g(q,H):C,t.width=q,t.height=H,t.getContext("2d").drawImage(l,0,0,q,H),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+l.width+"x"+l.height+") to ("+q+"x"+H+")."),t;"data"in l&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+l.width+"x"+l.height+").")}return l}function n(l){return MathUtils$$module$node_modules$three$build$three_module.isPowerOfTwo(l.width)&&
MathUtils$$module$node_modules$three$build$three_module.isPowerOfTwo(l.height)}function w(l,q){return l.generateMipmaps&&q&&l.minFilter!==NearestFilter$$module$node_modules$three$build$three_module&&l.minFilter!==LinearFilter$$module$node_modules$three$build$three_module}function v(l,q,t,B){a.generateMipmap(l);d.get(q).__maxMipLevel=Math.log(Math.max(t,B))*Math.LOG2E}function x(l,q,t){if(!1===U)return q;if(null!==l){if(void 0!==a[l])return a[l];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+
l+"'")}l=q;6403===q&&(5126===t&&(l=33326),5131===t&&(l=33325),5121===t&&(l=33321));6407===q&&(5126===t&&(l=34837),5131===t&&(l=34843),5121===t&&(l=32849));6408===q&&(5126===t&&(l=34836),5131===t&&(l=34842),5121===t&&(l=32856));33325!==l&&33326!==l&&34842!==l&&34836!==l||b.get("EXT_color_buffer_float");return l}function z(l){return l===NearestFilter$$module$node_modules$three$build$three_module||l===NearestMipmapNearestFilter$$module$node_modules$three$build$three_module||l===NearestMipmapLinearFilter$$module$node_modules$three$build$three_module?
9728:9729}function F(l){l=l.target;l.removeEventListener("dispose",F);{const q=d.get(l);void 0!==q.__webglInit&&(a.deleteTexture(q.__webglTexture),d.remove(l))}l.isVideoTexture&&J.delete(l);h.memory.textures--}function N(l){l=l.target;l.removeEventListener("dispose",N);{const t=d.get(l);var q=d.get(l.texture);if(l){void 0!==q.__webglTexture&&a.deleteTexture(q.__webglTexture);l.depthTexture&&l.depthTexture.dispose();if(l.isWebGLCubeRenderTarget)for(q=0;6>q;q++)a.deleteFramebuffer(t.__webglFramebuffer[q]),
t.__webglDepthbuffer&&a.deleteRenderbuffer(t.__webglDepthbuffer[q]);else a.deleteFramebuffer(t.__webglFramebuffer),t.__webglDepthbuffer&&a.deleteRenderbuffer(t.__webglDepthbuffer),t.__webglMultisampledFramebuffer&&a.deleteFramebuffer(t.__webglMultisampledFramebuffer),t.__webglColorRenderbuffer&&a.deleteRenderbuffer(t.__webglColorRenderbuffer),t.__webglDepthRenderbuffer&&a.deleteRenderbuffer(t.__webglDepthRenderbuffer);d.remove(l.texture);d.remove(l)}}h.memory.textures--}function p(l,q){const t=d.get(l);
if(l.isVideoTexture){var B=h.render.frame;J.get(l)!==B&&(J.set(l,B),l.update())}if(0<l.version&&t.__version!==l.version)if(B=l.image,void 0===B)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(!1===B.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{S(t,l,q);return}c.activeTexture(33984+q);c.bindTexture(3553,t.__webglTexture)}function A(l,q){if(6===l.image.length){var t=d.get(l);if(0<l.version&&t.__version!==
l.version){P(t,l);c.activeTexture(33984+q);c.bindTexture(34067,t.__webglTexture);a.pixelStorei(37440,l.flipY);var B=l&&(l.isCompressedTexture||l.image[0].isCompressedTexture),H=l.image[0]&&l.image[0].isDataTexture;q=[];for(var M=0;6>M;M++)q[M]=B||H?H?l.image[M].image:l.image[M]:k(l.image[M],!1,!0,aa);M=q[0];const R=n(M)||U,Q=f.convert(l.format),Y=f.convert(l.type),da=x(l.internalFormat,Q,Y);O(34067,l,R);let ca;if(B){for(H=0;6>H;H++)for(ca=q[H].mipmaps,B=0;B<ca.length;B++){var K=ca[B];l.format!==RGBAFormat$$module$node_modules$three$build$three_module&&
l.format!==RGBFormat$$module$node_modules$three$build$three_module?null!==Q?c.compressedTexImage2D(34069+H,B,da,K.width,K.height,0,K.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):c.texImage2D(34069+H,B,da,K.width,K.height,0,Q,Y,K.data)}t.__maxMipLevel=ca.length-1}else{ca=l.mipmaps;for(B=0;6>B;B++)if(H)for(c.texImage2D(34069+B,0,da,q[B].width,q[B].height,0,Q,Y,q[B].data),K=0;K<ca.length;K++){const ia=ca[K].image[B].image;c.texImage2D(34069+
B,K+1,da,ia.width,ia.height,0,Q,Y,ia.data)}else for(c.texImage2D(34069+B,0,da,Q,Y,q[B]),K=0;K<ca.length;K++)c.texImage2D(34069+B,K+1,da,Q,Y,ca[K].image[B]);t.__maxMipLevel=ca.length}w(l,R)&&v(34067,l,M.width,M.height);t.__version=l.version;if(l.onUpdate)l.onUpdate(l)}else c.activeTexture(33984+q),c.bindTexture(34067,t.__webglTexture)}}function G(l,q){c.activeTexture(33984+q);c.bindTexture(34067,d.get(l).__webglTexture)}function O(l,q,t){t?(a.texParameteri(l,10242,L[q.wrapS]),a.texParameteri(l,10243,
L[q.wrapT]),32879!==l&&35866!==l||a.texParameteri(l,32882,L[q.wrapR]),a.texParameteri(l,10240,m[q.magFilter]),a.texParameteri(l,10241,m[q.minFilter])):(a.texParameteri(l,10242,33071),a.texParameteri(l,10243,33071),32879!==l&&35866!==l||a.texParameteri(l,32882,33071),q.wrapS===ClampToEdgeWrapping$$module$node_modules$three$build$three_module&&q.wrapT===ClampToEdgeWrapping$$module$node_modules$three$build$three_module||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),
a.texParameteri(l,10240,z(q.magFilter)),a.texParameteri(l,10241,z(q.minFilter)),q.minFilter!==NearestFilter$$module$node_modules$three$build$three_module&&q.minFilter!==LinearFilter$$module$node_modules$three$build$three_module&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));!(t=b.get("EXT_texture_filter_anisotropic"))||q.type===FloatType$$module$node_modules$three$build$three_module&&null===b.get("OES_texture_float_linear")||
q.type===HalfFloatType$$module$node_modules$three$build$three_module&&null===(U||b.get("OES_texture_half_float_linear"))||!(1<q.anisotropy||d.get(q).__currentAnisotropy)||(a.texParameterf(l,t.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(q.anisotropy,e.getMaxAnisotropy())),d.get(q).__currentAnisotropy=q.anisotropy)}function P(l,q){void 0===l.__webglInit&&(l.__webglInit=!0,q.addEventListener("dispose",F),l.__webglTexture=a.createTexture(),h.memory.textures++)}function S(l,q,t){let B=3553;q.isDataTexture2DArray&&
(B=35866);q.isDataTexture3D&&(B=32879);P(l,q);c.activeTexture(33984+t);c.bindTexture(B,l.__webglTexture);a.pixelStorei(37440,q.flipY);a.pixelStorei(37441,q.premultiplyAlpha);a.pixelStorei(3317,q.unpackAlignment);t=U?!1:q.wrapS!==ClampToEdgeWrapping$$module$node_modules$three$build$three_module||q.wrapT!==ClampToEdgeWrapping$$module$node_modules$three$build$three_module||q.minFilter!==NearestFilter$$module$node_modules$three$build$three_module&&q.minFilter!==LinearFilter$$module$node_modules$three$build$three_module;
t=t&&!1===n(q.image);t=k(q.image,t,!1,r);const H=n(t)||U,M=f.convert(q.format);let K=f.convert(q.type),R=x(q.internalFormat,M,K);O(B,q,H);let Q;const Y=q.mipmaps;if(q.isDepthTexture)R=6402,U?R=q.type===FloatType$$module$node_modules$three$build$three_module?36012:q.type===UnsignedIntType$$module$node_modules$three$build$three_module?33190:q.type===UnsignedInt248Type$$module$node_modules$three$build$three_module?35056:33189:q.type===FloatType$$module$node_modules$three$build$three_module&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),
q.format===DepthFormat$$module$node_modules$three$build$three_module&&6402===R&&q.type!==UnsignedShortType$$module$node_modules$three$build$three_module&&q.type!==UnsignedIntType$$module$node_modules$three$build$three_module&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),q.type=UnsignedShortType$$module$node_modules$three$build$three_module,K=f.convert(q.type)),q.format===DepthStencilFormat$$module$node_modules$three$build$three_module&&
6402===R&&(R=34041,q.type!==UnsignedInt248Type$$module$node_modules$three$build$three_module&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),q.type=UnsignedInt248Type$$module$node_modules$three$build$three_module,K=f.convert(q.type))),c.texImage2D(3553,0,R,t.width,t.height,0,M,K,null);else if(q.isDataTexture)if(0<Y.length&&H){for(let da=0,ca=Y.length;da<ca;da++)Q=Y[da],c.texImage2D(3553,da,R,Q.width,Q.height,0,M,K,Q.data);q.generateMipmaps=!1;l.__maxMipLevel=
Y.length-1}else c.texImage2D(3553,0,R,t.width,t.height,0,M,K,t.data),l.__maxMipLevel=0;else if(q.isCompressedTexture){for(let da=0,ca=Y.length;da<ca;da++)Q=Y[da],q.format!==RGBAFormat$$module$node_modules$three$build$three_module&&q.format!==RGBFormat$$module$node_modules$three$build$three_module?null!==M?c.compressedTexImage2D(3553,da,R,Q.width,Q.height,0,Q.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):c.texImage2D(3553,da,R,
Q.width,Q.height,0,M,K,Q.data);l.__maxMipLevel=Y.length-1}else if(q.isDataTexture2DArray)c.texImage3D(35866,0,R,t.width,t.height,t.depth,0,M,K,t.data),l.__maxMipLevel=0;else if(q.isDataTexture3D)c.texImage3D(32879,0,R,t.width,t.height,t.depth,0,M,K,t.data),l.__maxMipLevel=0;else if(0<Y.length&&H){for(let da=0,ca=Y.length;da<ca;da++)Q=Y[da],c.texImage2D(3553,da,R,M,K,Q);q.generateMipmaps=!1;l.__maxMipLevel=Y.length-1}else c.texImage2D(3553,0,R,M,K,t),l.__maxMipLevel=0;w(q,H)&&v(B,q,t.width,t.height);
l.__version=q.version;if(q.onUpdate)q.onUpdate(q)}function T(l,q,t,B){const H=f.convert(q.texture.format),M=f.convert(q.texture.type),K=x(q.texture.internalFormat,H,M);c.texImage2D(B,0,K,q.width,q.height,0,H,M,null);a.bindFramebuffer(36160,l);a.framebufferTexture2D(36160,t,B,d.get(q.texture).__webglTexture,0);a.bindFramebuffer(36160,null)}function W(l,q,t){a.bindRenderbuffer(36161,l);if(q.depthBuffer&&!q.stencilBuffer){var B=33189;t?((t=q.depthTexture)&&t.isDepthTexture&&(t.type===FloatType$$module$node_modules$three$build$three_module?
B=36012:t.type===UnsignedIntType$$module$node_modules$three$build$three_module&&(B=33190)),t=X(q),a.renderbufferStorageMultisample(36161,t,B,q.width,q.height)):a.renderbufferStorage(36161,B,q.width,q.height);a.framebufferRenderbuffer(36160,36096,36161,l)}else q.depthBuffer&&q.stencilBuffer?(t?(t=X(q),a.renderbufferStorageMultisample(36161,t,35056,q.width,q.height)):a.renderbufferStorage(36161,34041,q.width,q.height),a.framebufferRenderbuffer(36160,33306,36161,l)):(l=f.convert(q.texture.format),B=
f.convert(q.texture.type),l=x(q.texture.internalFormat,l,B),t?(t=X(q),a.renderbufferStorageMultisample(36161,t,l,q.width,q.height)):a.renderbufferStorage(36161,l,q.width,q.height));a.bindRenderbuffer(36161,null)}function X(l){return U&&l.isWebGLMultisampleRenderTarget?Math.min(y,l.samples):0}const U=e.isWebGL2,Z=e.maxTextures,aa=e.maxCubemapSize,r=e.maxTextureSize,y=e.maxSamples,J=new WeakMap;let C,E=!1;try{E="undefined"!==typeof OffscreenCanvas&&null!==(new OffscreenCanvas(1,1)).getContext("2d")}catch(l){}let I=
0;const L={[RepeatWrapping$$module$node_modules$three$build$three_module]:10497,[ClampToEdgeWrapping$$module$node_modules$three$build$three_module]:33071,[MirroredRepeatWrapping$$module$node_modules$three$build$three_module]:33648},m={[NearestFilter$$module$node_modules$three$build$three_module]:9728,[NearestMipmapNearestFilter$$module$node_modules$three$build$three_module]:9984,[NearestMipmapLinearFilter$$module$node_modules$three$build$three_module]:9986,[LinearFilter$$module$node_modules$three$build$three_module]:9729,
[LinearMipmapNearestFilter$$module$node_modules$three$build$three_module]:9985,[LinearMipmapLinearFilter$$module$node_modules$three$build$three_module]:9987};let u=!1,D=!1;this.allocateTextureUnit=function(){const l=I;l>=Z&&console.warn("THREE.WebGLTextures: Trying to use "+l+" texture units while this GPU supports only "+Z);I+=1;return l};this.resetTextureUnits=function(){I=0};this.setTexture2D=p;this.setTexture2DArray=function(l,q){const t=d.get(l);0<l.version&&t.__version!==l.version?S(t,l,q):
(c.activeTexture(33984+q),c.bindTexture(35866,t.__webglTexture))};this.setTexture3D=function(l,q){const t=d.get(l);0<l.version&&t.__version!==l.version?S(t,l,q):(c.activeTexture(33984+q),c.bindTexture(32879,t.__webglTexture))};this.setTextureCube=A;this.setTextureCubeDynamic=G;this.setupRenderTarget=function(l){var q=d.get(l),t=d.get(l.texture);l.addEventListener("dispose",N);t.__webglTexture=a.createTexture();h.memory.textures++;const B=!0===l.isWebGLCubeRenderTarget;var H=!0===l.isWebGLMultisampleRenderTarget,
M=n(l)||U;!U||l.texture.format!==RGBFormat$$module$node_modules$three$build$three_module||l.texture.type!==FloatType$$module$node_modules$three$build$three_module&&l.texture.type!==HalfFloatType$$module$node_modules$three$build$three_module||(l.texture.format=RGBAFormat$$module$node_modules$three$build$three_module,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead."));if(B)for(q.__webglFramebuffer=[],H=0;6>H;H++)q.__webglFramebuffer[H]=
a.createFramebuffer();else if(q.__webglFramebuffer=a.createFramebuffer(),H)if(U){q.__webglMultisampledFramebuffer=a.createFramebuffer();q.__webglColorRenderbuffer=a.createRenderbuffer();a.bindRenderbuffer(36161,q.__webglColorRenderbuffer);H=f.convert(l.texture.format);var K=f.convert(l.texture.type);H=x(l.texture.internalFormat,H,K);K=X(l);a.renderbufferStorageMultisample(36161,K,H,l.width,l.height);a.bindFramebuffer(36160,q.__webglMultisampledFramebuffer);a.framebufferRenderbuffer(36160,36064,36161,
q.__webglColorRenderbuffer);a.bindRenderbuffer(36161,null);l.depthBuffer&&(q.__webglDepthRenderbuffer=a.createRenderbuffer(),W(q.__webglDepthRenderbuffer,l,!0));a.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(B){c.bindTexture(34067,t.__webglTexture);O(34067,l.texture,M);for(t=0;6>t;t++)T(q.__webglFramebuffer[t],l,36064,34069+t);w(l.texture,M)&&v(34067,l.texture,l.width,l.height);c.bindTexture(34067,null)}else c.bindTexture(3553,
t.__webglTexture),O(3553,l.texture,M),T(q.__webglFramebuffer,l,36064,3553),w(l.texture,M)&&v(3553,l.texture,l.width,l.height),c.bindTexture(3553,null);if(l.depthBuffer){q=d.get(l);M=!0===l.isWebGLCubeRenderTarget;if(l.depthTexture){if(M)throw Error("target.depthTexture not supported in Cube render targets");if(l&&l.isWebGLCubeRenderTarget)throw Error("Depth Texture with cube render targets is not supported");a.bindFramebuffer(36160,q.__webglFramebuffer);if(!l.depthTexture||!l.depthTexture.isDepthTexture)throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
d.get(l.depthTexture).__webglTexture&&l.depthTexture.image.width===l.width&&l.depthTexture.image.height===l.height||(l.depthTexture.image.width=l.width,l.depthTexture.image.height=l.height,l.depthTexture.needsUpdate=!0);p(l.depthTexture,0);q=d.get(l.depthTexture).__webglTexture;if(l.depthTexture.format===DepthFormat$$module$node_modules$three$build$three_module)a.framebufferTexture2D(36160,36096,3553,q,0);else if(l.depthTexture.format===DepthStencilFormat$$module$node_modules$three$build$three_module)a.framebufferTexture2D(36160,
33306,3553,q,0);else throw Error("Unknown depthTexture format");}else if(M)for(q.__webglDepthbuffer=[],M=0;6>M;M++)a.bindFramebuffer(36160,q.__webglFramebuffer[M]),q.__webglDepthbuffer[M]=a.createRenderbuffer(),W(q.__webglDepthbuffer[M],l,!1);else a.bindFramebuffer(36160,q.__webglFramebuffer),q.__webglDepthbuffer=a.createRenderbuffer(),W(q.__webglDepthbuffer,l,!1);a.bindFramebuffer(36160,null)}};this.updateRenderTargetMipmap=function(l){const q=l.texture;var t=n(l)||U;if(w(q,t)){t=l.isWebGLCubeRenderTarget?
34067:3553;const B=d.get(q).__webglTexture;c.bindTexture(t,B);v(t,q,l.width,l.height);c.bindTexture(t,null)}};this.updateMultisampleRenderTarget=function(l){if(l.isWebGLMultisampleRenderTarget)if(U){const q=d.get(l);a.bindFramebuffer(36008,q.__webglMultisampledFramebuffer);a.bindFramebuffer(36009,q.__webglFramebuffer);const t=l.width,B=l.height;let H=16384;l.depthBuffer&&(H|=256);l.stencilBuffer&&(H|=1024);a.blitFramebuffer(0,0,t,B,0,0,t,B,H,9728);a.bindFramebuffer(36160,q.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")};
this.safeSetTexture2D=function(l,q){l&&l.isWebGLRenderTarget&&(!1===u&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),u=!0),l=l.texture);p(l,q)};this.safeSetTextureCube=function(l,q){l&&l.isWebGLCubeRenderTarget&&(!1===D&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),D=!0),l=l.texture);l&&l.isCubeTexture||Array.isArray(l.image)&&
6===l.image.length?A(l,q):G(l,q)}}
function WebGLUtils$$module$node_modules$three$build$three_module(a,b,c){const d=c.isWebGL2;return{convert:function(e){let f;if(e===UnsignedByteType$$module$node_modules$three$build$three_module)return 5121;if(e===UnsignedShort4444Type$$module$node_modules$three$build$three_module)return 32819;if(e===UnsignedShort5551Type$$module$node_modules$three$build$three_module)return 32820;if(e===UnsignedShort565Type$$module$node_modules$three$build$three_module)return 33635;if(e===ByteType$$module$node_modules$three$build$three_module)return 5120;
if(e===ShortType$$module$node_modules$three$build$three_module)return 5122;if(e===UnsignedShortType$$module$node_modules$three$build$three_module)return 5123;if(e===IntType$$module$node_modules$three$build$three_module)return 5124;if(e===UnsignedIntType$$module$node_modules$three$build$three_module)return 5125;if(e===FloatType$$module$node_modules$three$build$three_module)return 5126;if(e===HalfFloatType$$module$node_modules$three$build$three_module){if(d)return 5131;f=b.get("OES_texture_half_float");
return null!==f?f.HALF_FLOAT_OES:null}if(e===AlphaFormat$$module$node_modules$three$build$three_module)return 6406;if(e===RGBFormat$$module$node_modules$three$build$three_module)return 6407;if(e===RGBAFormat$$module$node_modules$three$build$three_module)return 6408;if(e===LuminanceFormat$$module$node_modules$three$build$three_module)return 6409;if(e===LuminanceAlphaFormat$$module$node_modules$three$build$three_module)return 6410;if(e===DepthFormat$$module$node_modules$three$build$three_module)return 6402;
if(e===DepthStencilFormat$$module$node_modules$three$build$three_module)return 34041;if(e===RedFormat$$module$node_modules$three$build$three_module)return 6403;if(e===RedIntegerFormat$$module$node_modules$three$build$three_module)return 36244;if(e===RGFormat$$module$node_modules$three$build$three_module)return 33319;if(e===RGIntegerFormat$$module$node_modules$three$build$three_module)return 33320;if(e===RGBIntegerFormat$$module$node_modules$three$build$three_module)return 36248;if(e===RGBAIntegerFormat$$module$node_modules$three$build$three_module)return 36249;
if(e===RGB_S3TC_DXT1_Format$$module$node_modules$three$build$three_module||e===RGBA_S3TC_DXT1_Format$$module$node_modules$three$build$three_module||e===RGBA_S3TC_DXT3_Format$$module$node_modules$three$build$three_module||e===RGBA_S3TC_DXT5_Format$$module$node_modules$three$build$three_module)if(f=b.get("WEBGL_compressed_texture_s3tc"),null!==f){if(e===RGB_S3TC_DXT1_Format$$module$node_modules$three$build$three_module)return f.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===RGBA_S3TC_DXT1_Format$$module$node_modules$three$build$three_module)return f.COMPRESSED_RGBA_S3TC_DXT1_EXT;
if(e===RGBA_S3TC_DXT3_Format$$module$node_modules$three$build$three_module)return f.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===RGBA_S3TC_DXT5_Format$$module$node_modules$three$build$three_module)return f.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(e===RGB_PVRTC_4BPPV1_Format$$module$node_modules$three$build$three_module||e===RGB_PVRTC_2BPPV1_Format$$module$node_modules$three$build$three_module||e===RGBA_PVRTC_4BPPV1_Format$$module$node_modules$three$build$three_module||e===RGBA_PVRTC_2BPPV1_Format$$module$node_modules$three$build$three_module)if(f=
b.get("WEBGL_compressed_texture_pvrtc"),null!==f){if(e===RGB_PVRTC_4BPPV1_Format$$module$node_modules$three$build$three_module)return f.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===RGB_PVRTC_2BPPV1_Format$$module$node_modules$three$build$three_module)return f.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===RGBA_PVRTC_4BPPV1_Format$$module$node_modules$three$build$three_module)return f.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===RGBA_PVRTC_2BPPV1_Format$$module$node_modules$three$build$three_module)return f.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;
if(e===RGB_ETC1_Format$$module$node_modules$three$build$three_module)return f=b.get("WEBGL_compressed_texture_etc1"),null!==f?f.COMPRESSED_RGB_ETC1_WEBGL:null;if(e===RGB_ETC2_Format$$module$node_modules$three$build$three_module||e===RGBA_ETC2_EAC_Format$$module$node_modules$three$build$three_module)if(f=b.get("WEBGL_compressed_texture_etc"),null!==f){if(e===RGB_ETC2_Format$$module$node_modules$three$build$three_module)return f.COMPRESSED_RGB8_ETC2;if(e===RGBA_ETC2_EAC_Format$$module$node_modules$three$build$three_module)return f.COMPRESSED_RGBA8_ETC2_EAC}if(e===
RGBA_ASTC_4x4_Format$$module$node_modules$three$build$three_module||e===RGBA_ASTC_5x4_Format$$module$node_modules$three$build$three_module||e===RGBA_ASTC_5x5_Format$$module$node_modules$three$build$three_module||e===RGBA_ASTC_6x5_Format$$module$node_modules$three$build$three_module||e===RGBA_ASTC_6x6_Format$$module$node_modules$three$build$three_module||e===RGBA_ASTC_8x5_Format$$module$node_modules$three$build$three_module||e===RGBA_ASTC_8x6_Format$$module$node_modules$three$build$three_module||e===
RGBA_ASTC_8x8_Format$$module$node_modules$three$build$three_module||e===RGBA_ASTC_10x5_Format$$module$node_modules$three$build$three_module||e===RGBA_ASTC_10x6_Format$$module$node_modules$three$build$three_module||e===RGBA_ASTC_10x8_Format$$module$node_modules$three$build$three_module||e===RGBA_ASTC_10x10_Format$$module$node_modules$three$build$three_module||e===RGBA_ASTC_12x10_Format$$module$node_modules$three$build$three_module||e===RGBA_ASTC_12x12_Format$$module$node_modules$three$build$three_module||
e===SRGB8_ALPHA8_ASTC_4x4_Format$$module$node_modules$three$build$three_module||e===SRGB8_ALPHA8_ASTC_5x4_Format$$module$node_modules$three$build$three_module||e===SRGB8_ALPHA8_ASTC_5x5_Format$$module$node_modules$three$build$three_module||e===SRGB8_ALPHA8_ASTC_6x5_Format$$module$node_modules$three$build$three_module||e===SRGB8_ALPHA8_ASTC_6x6_Format$$module$node_modules$three$build$three_module||e===SRGB8_ALPHA8_ASTC_8x5_Format$$module$node_modules$three$build$three_module||e===SRGB8_ALPHA8_ASTC_8x6_Format$$module$node_modules$three$build$three_module||
e===SRGB8_ALPHA8_ASTC_8x8_Format$$module$node_modules$three$build$three_module||e===SRGB8_ALPHA8_ASTC_10x5_Format$$module$node_modules$three$build$three_module||e===SRGB8_ALPHA8_ASTC_10x6_Format$$module$node_modules$three$build$three_module||e===SRGB8_ALPHA8_ASTC_10x8_Format$$module$node_modules$three$build$three_module||e===SRGB8_ALPHA8_ASTC_10x10_Format$$module$node_modules$three$build$three_module||e===SRGB8_ALPHA8_ASTC_12x10_Format$$module$node_modules$three$build$three_module||e===SRGB8_ALPHA8_ASTC_12x12_Format$$module$node_modules$three$build$three_module)return f=
b.get("WEBGL_compressed_texture_astc"),null!==f?e:null;if(e===RGBA_BPTC_Format$$module$node_modules$three$build$three_module)return f=b.get("EXT_texture_compression_bptc"),null!==f?e:null;if(e===UnsignedInt248Type$$module$node_modules$three$build$three_module){if(d)return 34042;f=b.get("WEBGL_depth_texture");return null!==f?f.UNSIGNED_INT_24_8_WEBGL:null}}}}
function ArrayCamera$$module$node_modules$three$build$three_module(a){PerspectiveCamera$$module$node_modules$three$build$three_module.call(this);this.cameras=a||[]}ArrayCamera$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(PerspectiveCamera$$module$node_modules$three$build$three_module.prototype),{constructor:ArrayCamera$$module$node_modules$three$build$three_module,isArrayCamera:!0});
function Group$$module$node_modules$three$build$three_module(){Object3D$$module$node_modules$three$build$three_module.call(this);this.type="Group"}Group$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Object3D$$module$node_modules$three$build$three_module.prototype),{constructor:Group$$module$node_modules$three$build$three_module,isGroup:!0});function WebXRController$$module$node_modules$three$build$three_module(){this._hand=this._grip=this._targetRay=null}
Object.assign(WebXRController$$module$node_modules$three$build$three_module.prototype,{constructor:WebXRController$$module$node_modules$three$build$three_module,getHandSpace:function(){if(null===this._hand&&(this._hand=new Group$$module$node_modules$three$build$three_module,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints=[],this._hand.inputState={pinching:!1},window.XRHand))for(let a=0;a<=window.XRHand.LITTLE_PHALANX_TIP;a++){const b=new Group$$module$node_modules$three$build$three_module;
b.matrixAutoUpdate=!1;b.visible=!1;this._hand.joints.push(b);this._hand.add(b)}return this._hand},getTargetRaySpace:function(){null===this._targetRay&&(this._targetRay=new Group$$module$node_modules$three$build$three_module,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1);return this._targetRay},getGripSpace:function(){null===this._grip&&(this._grip=new Group$$module$node_modules$three$build$three_module,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1);return this._grip},dispatchEvent:function(a){null!==
this._targetRay&&this._targetRay.dispatchEvent(a);null!==this._grip&&this._grip.dispatchEvent(a);null!==this._hand&&this._hand.dispatchEvent(a);return this},disconnect:function(a){this.dispatchEvent({type:"disconnected",data:a});null!==this._targetRay&&(this._targetRay.visible=!1);null!==this._grip&&(this._grip.visible=!1);null!==this._hand&&(this._hand.visible=!1);return this},update:function(a,b,c){let d=null,e=null,f=null;const h=this._targetRay,g=this._grip,k=this._hand;if(a)if(k&&a.hand){f=!0;
for(let w=0;w<=window.XRHand.LITTLE_PHALANX_TIP;w++)if(a.hand[w]){var n=b.getJointPose(a.hand[w],c);const v=k.joints[w];null!==n&&(v.matrix.fromArray(n.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.jointRadius=n.radius);v.visible=null!==n;n=k.joints[window.XRHand.INDEX_PHALANX_TIP].position.distanceTo(k.joints[window.XRHand.THUMB_PHALANX_TIP].position);k.inputState.pinching&&.025<n?(k.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:a.handedness,target:this})):
!k.inputState.pinching&&.015>=n&&(k.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:a.handedness,target:this}))}}else null!==h&&(d=b.getPose(a.targetRaySpace,c),null!==d&&(h.matrix.fromArray(d.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale))),null!==g&&a.gripSpace&&(e=b.getPose(a.gripSpace,c),null!==e&&(g.matrix.fromArray(e.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale)));null!==h&&(h.visible=null!==d);null!==g&&(g.visible=null!==e);
null!==k&&(k.visible=null!==f);return this}});
function WebXRManager$$module$node_modules$three$build$three_module(a,b){function c(U){const Z=F.get(U.inputSource);Z&&Z.dispatchEvent({type:U.type})}function d(){F.forEach(function(U,Z){U.disconnect(Z)});F.clear();a.setFramebuffer(null);a.setRenderTarget(a.getRenderTarget());X.stop();g.isPresenting=!1;g.dispatchEvent({type:"sessionend"})}function e(U){w=U;X.setContext(k);X.start();g.isPresenting=!0;g.dispatchEvent({type:"sessionstart"})}function f(U){var Z=k.inputSources;for(var aa=0;aa<z.length;aa++)F.set(Z[aa],
z[aa]);for(Z=0;Z<U.removed.length;Z++){aa=U.removed[Z];var r=F.get(aa);r&&(r.dispatchEvent({type:"disconnected",data:aa}),F.delete(aa))}for(Z=0;Z<U.added.length;Z++)aa=U.added[Z],(r=F.get(aa))&&r.dispatchEvent({type:"connected",data:aa})}function h(U,Z){null===Z?U.matrixWorld.copy(U.matrix):U.matrixWorld.multiplyMatrices(Z.matrixWorld,U.matrix);U.matrixWorldInverse.getInverse(U.matrixWorld)}const g=this;let k=null,n=1,w=null,v="local-floor",x=null;const z=[],F=new Map,N=new PerspectiveCamera$$module$node_modules$three$build$three_module;
N.layers.enable(1);N.viewport=new Vector4$$module$node_modules$three$build$three_module;const p=new PerspectiveCamera$$module$node_modules$three$build$three_module;p.layers.enable(2);p.viewport=new Vector4$$module$node_modules$three$build$three_module;const A=[N,p],G=new ArrayCamera$$module$node_modules$three$build$three_module;G.layers.enable(1);G.layers.enable(2);let O=null,P=null;this.isPresenting=this.enabled=!1;this.getController=function(U){let Z=z[U];void 0===Z&&(Z=new WebXRController$$module$node_modules$three$build$three_module,
z[U]=Z);return Z.getTargetRaySpace()};this.getControllerGrip=function(U){let Z=z[U];void 0===Z&&(Z=new WebXRController$$module$node_modules$three$build$three_module,z[U]=Z);return Z.getGripSpace()};this.getHand=function(U){let Z=z[U];void 0===Z&&(Z=new WebXRController$$module$node_modules$three$build$three_module,z[U]=Z);return Z.getHandSpace()};this.setFramebufferScaleFactor=function(U){n=U;!0===g.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")};
this.setReferenceSpaceType=function(U){v=U;!0===g.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")};this.getReferenceSpace=function(){return w};this.getSession=function(){return k};this.setSession=function(U){k=U;null!==k&&(k.addEventListener("select",c),k.addEventListener("selectstart",c),k.addEventListener("selectend",c),k.addEventListener("squeeze",c),k.addEventListener("squeezestart",c),k.addEventListener("squeezeend",c),k.addEventListener("end",
d),U=b.getContextAttributes(),!0!==U.xrCompatible&&b.makeXRCompatible(),U=new XRWebGLLayer(k,b,{antialias:U.antialias,alpha:U.alpha,depth:U.depth,stencil:U.stencil,framebufferScaleFactor:n}),k.updateRenderState({baseLayer:U}),k.requestReferenceSpace(v).then(e),k.addEventListener("inputsourceschange",f))};const S=new Vector3$$module$node_modules$three$build$three_module,T=new Vector3$$module$node_modules$three$build$three_module;this.getCamera=function(U){G.near=p.near=N.near=U.near;G.far=p.far=N.far=
U.far;if(O!==G.near||P!==G.far)k.updateRenderState({depthNear:G.near,depthFar:G.far}),O=G.near,P=G.far;var Z=U.parent,aa=G.cameras;h(G,Z);for(var r=0;r<aa.length;r++)h(aa[r],Z);U.matrixWorld.copy(G.matrixWorld);U=U.children;for(let L=0,m=U.length;L<m;L++)U[L].updateMatrixWorld(!0);if(2===aa.length){S.setFromMatrixPosition(N.matrixWorld);T.setFromMatrixPosition(p.matrixWorld);aa=S.distanceTo(T);var y=N.projectionMatrix.elements,J=p.projectionMatrix.elements,C=y[14]/(y[10]-1);U=y[14]/(y[10]+1);Z=(y[9]+
1)/y[5];r=(y[9]-1)/y[5];var E=(y[8]-1)/y[0],I=(J[8]+1)/J[0];J=C*E;y=C*I;I=aa/(-E+I);E=I*-E;N.matrixWorld.decompose(G.position,G.quaternion,G.scale);G.translateX(E);G.translateZ(I);G.matrixWorld.compose(G.position,G.quaternion,G.scale);G.matrixWorldInverse.getInverse(G.matrixWorld);C+=I;I=U+I;G.projectionMatrix.makePerspective(J-E,y+(aa-E),Z*U/I*C,r*U/I*C,C,I)}else G.projectionMatrix.copy(N.projectionMatrix);return G};let W=null;const X=new WebGLAnimation$$module$node_modules$three$build$three_module;
X.setAnimationLoop(function(U,Z){x=Z.getViewerPose(w);if(null!==x){var aa=x.views,r=k.renderState.baseLayer;a.setFramebuffer(r.framebuffer);let y=!1;aa.length!==G.cameras.length&&(G.cameras.length=0,y=!0);for(let J=0;J<aa.length;J++){const C=aa[J],E=r.getViewport(C),I=A[J];I.matrix.fromArray(C.transform.matrix);I.projectionMatrix.fromArray(C.projectionMatrix);I.viewport.set(E.x,E.y,E.width,E.height);0===J&&G.matrix.copy(I.matrix);!0===y&&G.cameras.push(I)}}aa=k.inputSources;for(r=0;r<z.length;r++)z[r].update(aa[r],
Z,w);W&&W(U,Z)});this.setAnimationLoop=function(U){W=U};this.dispose=function(){}}Object.assign(WebXRManager$$module$node_modules$three$build$three_module.prototype,EventDispatcher$$module$node_modules$three$build$three_module.prototype);
function WebGLMaterials$$module$node_modules$three$build$three_module(a){function b(d,e){d.opacity.value=e.opacity;e.color&&d.diffuse.value.copy(e.color);e.emissive&&d.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity);e.map&&(d.map.value=e.map);e.alphaMap&&(d.alphaMap.value=e.alphaMap);e.specularMap&&(d.specularMap.value=e.specularMap);var f=a.get(e).envMap;f&&(d.envMap.value=f,d.flipEnvMap.value=f.isCubeTexture?-1:1,d.reflectivity.value=e.reflectivity,d.refractionRatio.value=e.refractionRatio,
f=a.get(f).__maxMipLevel,void 0!==f&&(d.maxMipLevel.value=f));e.lightMap&&(d.lightMap.value=e.lightMap,d.lightMapIntensity.value=e.lightMapIntensity);e.aoMap&&(d.aoMap.value=e.aoMap,d.aoMapIntensity.value=e.aoMapIntensity);let h;e.map?h=e.map:e.specularMap?h=e.specularMap:e.displacementMap?h=e.displacementMap:e.normalMap?h=e.normalMap:e.bumpMap?h=e.bumpMap:e.roughnessMap?h=e.roughnessMap:e.metalnessMap?h=e.metalnessMap:e.alphaMap?h=e.alphaMap:e.emissiveMap?h=e.emissiveMap:e.clearcoatMap?h=e.clearcoatMap:
e.clearcoatNormalMap?h=e.clearcoatNormalMap:e.clearcoatRoughnessMap&&(h=e.clearcoatRoughnessMap);void 0!==h&&(h.isWebGLRenderTarget&&(h=h.texture),!0===h.matrixAutoUpdate&&h.updateMatrix(),d.uvTransform.value.copy(h.matrix));let g;e.aoMap?g=e.aoMap:e.lightMap&&(g=e.lightMap);void 0!==g&&(g.isWebGLRenderTarget&&(g=g.texture),!0===g.matrixAutoUpdate&&g.updateMatrix(),d.uv2Transform.value.copy(g.matrix))}function c(d,e){d.roughness.value=e.roughness;d.metalness.value=e.metalness;e.roughnessMap&&(d.roughnessMap.value=
e.roughnessMap);e.metalnessMap&&(d.metalnessMap.value=e.metalnessMap);e.emissiveMap&&(d.emissiveMap.value=e.emissiveMap);e.bumpMap&&(d.bumpMap.value=e.bumpMap,d.bumpScale.value=e.bumpScale,e.side===BackSide$$module$node_modules$three$build$three_module&&(d.bumpScale.value*=-1));e.normalMap&&(d.normalMap.value=e.normalMap,d.normalScale.value.copy(e.normalScale),e.side===BackSide$$module$node_modules$three$build$three_module&&d.normalScale.value.negate());e.displacementMap&&(d.displacementMap.value=
e.displacementMap,d.displacementScale.value=e.displacementScale,d.displacementBias.value=e.displacementBias);a.get(e).envMap&&(d.envMapIntensity.value=e.envMapIntensity)}return{refreshFogUniforms:function(d,e){d.fogColor.value.copy(e.color);e.isFog?(d.fogNear.value=e.near,d.fogFar.value=e.far):e.isFogExp2&&(d.fogDensity.value=e.density)},refreshMaterialUniforms:function(d,e,f,h){if(e.isMeshBasicMaterial)b(d,e);else if(e.isMeshLambertMaterial)b(d,e),e.emissiveMap&&(d.emissiveMap.value=e.emissiveMap);
else if(e.isMeshToonMaterial)b(d,e),e.gradientMap&&(d.gradientMap.value=e.gradientMap),e.emissiveMap&&(d.emissiveMap.value=e.emissiveMap),e.bumpMap&&(d.bumpMap.value=e.bumpMap,d.bumpScale.value=e.bumpScale,e.side===BackSide$$module$node_modules$three$build$three_module&&(d.bumpScale.value*=-1)),e.normalMap&&(d.normalMap.value=e.normalMap,d.normalScale.value.copy(e.normalScale),e.side===BackSide$$module$node_modules$three$build$three_module&&d.normalScale.value.negate()),e.displacementMap&&(d.displacementMap.value=
e.displacementMap,d.displacementScale.value=e.displacementScale,d.displacementBias.value=e.displacementBias);else if(e.isMeshPhongMaterial)b(d,e),d.specular.value.copy(e.specular),d.shininess.value=Math.max(e.shininess,1E-4),e.emissiveMap&&(d.emissiveMap.value=e.emissiveMap),e.bumpMap&&(d.bumpMap.value=e.bumpMap,d.bumpScale.value=e.bumpScale,e.side===BackSide$$module$node_modules$three$build$three_module&&(d.bumpScale.value*=-1)),e.normalMap&&(d.normalMap.value=e.normalMap,d.normalScale.value.copy(e.normalScale),
e.side===BackSide$$module$node_modules$three$build$three_module&&d.normalScale.value.negate()),e.displacementMap&&(d.displacementMap.value=e.displacementMap,d.displacementScale.value=e.displacementScale,d.displacementBias.value=e.displacementBias);else if(e.isMeshStandardMaterial)b(d,e),e.isMeshPhysicalMaterial?(c(d,e),d.reflectivity.value=e.reflectivity,d.clearcoat.value=e.clearcoat,d.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&d.sheen.value.copy(e.sheen),e.clearcoatMap&&(d.clearcoatMap.value=
e.clearcoatMap),e.clearcoatRoughnessMap&&(d.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(d.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),d.clearcoatNormalMap.value=e.clearcoatNormalMap,e.side===BackSide$$module$node_modules$three$build$three_module&&d.clearcoatNormalScale.value.negate()),d.transmission.value=e.transmission,e.transmissionMap&&(d.transmissionMap.value=e.transmissionMap)):c(d,e);else if(e.isMeshMatcapMaterial)b(d,e),e.matcap&&(d.matcap.value=
e.matcap),e.bumpMap&&(d.bumpMap.value=e.bumpMap,d.bumpScale.value=e.bumpScale,e.side===BackSide$$module$node_modules$three$build$three_module&&(d.bumpScale.value*=-1)),e.normalMap&&(d.normalMap.value=e.normalMap,d.normalScale.value.copy(e.normalScale),e.side===BackSide$$module$node_modules$three$build$three_module&&d.normalScale.value.negate()),e.displacementMap&&(d.displacementMap.value=e.displacementMap,d.displacementScale.value=e.displacementScale,d.displacementBias.value=e.displacementBias);else if(e.isMeshDepthMaterial)b(d,
e),e.displacementMap&&(d.displacementMap.value=e.displacementMap,d.displacementScale.value=e.displacementScale,d.displacementBias.value=e.displacementBias);else if(e.isMeshDistanceMaterial)b(d,e),e.displacementMap&&(d.displacementMap.value=e.displacementMap,d.displacementScale.value=e.displacementScale,d.displacementBias.value=e.displacementBias),d.referencePosition.value.copy(e.referencePosition),d.nearDistance.value=e.nearDistance,d.farDistance.value=e.farDistance;else if(e.isMeshNormalMaterial)b(d,
e),e.bumpMap&&(d.bumpMap.value=e.bumpMap,d.bumpScale.value=e.bumpScale,e.side===BackSide$$module$node_modules$three$build$three_module&&(d.bumpScale.value*=-1)),e.normalMap&&(d.normalMap.value=e.normalMap,d.normalScale.value.copy(e.normalScale),e.side===BackSide$$module$node_modules$three$build$three_module&&d.normalScale.value.negate()),e.displacementMap&&(d.displacementMap.value=e.displacementMap,d.displacementScale.value=e.displacementScale,d.displacementBias.value=e.displacementBias);else if(e.isLineBasicMaterial)d.diffuse.value.copy(e.color),
d.opacity.value=e.opacity,e.isLineDashedMaterial&&(d.dashSize.value=e.dashSize,d.totalSize.value=e.dashSize+e.gapSize,d.scale.value=e.scale);else if(e.isPointsMaterial){{d.diffuse.value.copy(e.color);d.opacity.value=e.opacity;d.size.value=e.size*f;d.scale.value=.5*h;e.map&&(d.map.value=e.map);e.alphaMap&&(d.alphaMap.value=e.alphaMap);let g;e.map?g=e.map:e.alphaMap&&(g=e.alphaMap);void 0!==g&&(!0===g.matrixAutoUpdate&&g.updateMatrix(),d.uvTransform.value.copy(g.matrix))}}else if(e.isSpriteMaterial){{d.diffuse.value.copy(e.color);
d.opacity.value=e.opacity;d.rotation.value=e.rotation;e.map&&(d.map.value=e.map);e.alphaMap&&(d.alphaMap.value=e.alphaMap);let g;e.map?g=e.map:e.alphaMap&&(g=e.alphaMap);void 0!==g&&(!0===g.matrixAutoUpdate&&g.updateMatrix(),d.uvTransform.value.copy(g.matrix))}}else e.isShadowMaterial?(d.color.value.copy(e.color),d.opacity.value=e.opacity):e.isShaderMaterial&&(e.uniformsNeedUpdate=!1)}}}
function WebGLRenderer$$module$node_modules$three$build$three_module(a){function b(V,ea){for(let ba=0;ba<V.length;ba++){const ha=z.getContext(V[ba],ea);if(null!==ha)return ha}return null}function c(){la=new WebGLExtensions$$module$node_modules$three$build$three_module(fa);qa=new WebGLCapabilities$$module$node_modules$three$build$three_module(fa,la,a);!1===qa.isWebGL2&&(la.get("WEBGL_depth_texture"),la.get("OES_texture_float"),la.get("OES_texture_half_float"),la.get("OES_texture_half_float_linear"),
la.get("OES_standard_derivatives"),la.get("OES_element_index_uint"),la.get("OES_vertex_array_object"),la.get("ANGLE_instanced_arrays"));la.get("OES_texture_float_linear");ya=new WebGLUtils$$module$node_modules$three$build$three_module(fa,la,qa);sa=new WebGLState$$module$node_modules$three$build$three_module(fa,la,qa);sa.scissor(u.copy(K).multiplyScalar(t).floor());sa.viewport(m.copy(M).multiplyScalar(t).floor());za=new WebGLInfo$$module$node_modules$three$build$three_module(fa);ua=new WebGLProperties$$module$node_modules$three$build$three_module;
wa=new WebGLTextures$$module$node_modules$three$build$three_module(fa,la,sa,ua,qa,ya,za);Ba=new WebGLCubeMaps$$module$node_modules$three$build$three_module(U);Ga=new WebGLAttributes$$module$node_modules$three$build$three_module(fa,qa);va=new WebGLBindingStates$$module$node_modules$three$build$three_module(fa,la,Ga,qa);Ma=new WebGLGeometries$$module$node_modules$three$build$three_module(fa,Ga,za,va);Ha=new WebGLObjects$$module$node_modules$three$build$three_module(fa,Ma,Ga,za);Pa=new WebGLMorphtargets$$module$node_modules$three$build$three_module(fa);
xa=new WebGLClipping$$module$node_modules$three$build$three_module(ua);Ca=new WebGLPrograms$$module$node_modules$three$build$three_module(U,Ba,la,qa,va,xa);Na=new WebGLMaterials$$module$node_modules$three$build$three_module(ua);Ka=new WebGLRenderLists$$module$node_modules$three$build$three_module(ua);Ea=new WebGLRenderStates$$module$node_modules$three$build$three_module;Aa=new WebGLBackground$$module$node_modules$three$build$three_module(U,Ba,sa,Ha,O);Qa=new WebGLBufferRenderer$$module$node_modules$three$build$three_module(fa,
la,za,qa);Ra=new WebGLIndexedBufferRenderer$$module$node_modules$three$build$three_module(fa,la,za,qa);za.programs=Ca.programs;U.capabilities=qa;U.extensions=la;U.properties=ua;U.renderLists=Ka;U.state=sa;U.info=za}function d(V){V.preventDefault();console.log("THREE.WebGLRenderer: Context Lost.");Z=!0}function e(){console.log("THREE.WebGLRenderer: Context Restored.");Z=!1;c()}function f(V){V=V.target;V.removeEventListener("dispose",f);h(V);ua.remove(V)}function h(V){V=ua.get(V).program;void 0!==V&&
Ca.releaseProgram(V)}function g(V,ea){V.render(function(ba){U.renderBufferImmediate(ba,ea)})}function k(V,ea,ba,ha){if(!1!==V.visible){if(V.layers.test(ea.layers))if(V.isGroup)ba=V.renderOrder;else if(V.isLOD)!0===V.autoUpdate&&V.update(ea);else if(V.isLight)X.pushLight(V),V.castShadow&&X.pushShadow(V);else if(V.isSprite){if(!V.frustumCulled||Q.intersectsSprite(V)){ha&&ia.setFromMatrixPosition(V.matrixWorld).applyMatrix4(ca);var ja=Ha.update(V),ka=V.material;ka.visible&&W.push(V,ja,ka,ba,ia.z,null)}}else if(V.isImmediateRenderObject)ha&&
ia.setFromMatrixPosition(V.matrixWorld).applyMatrix4(ca),W.push(V,null,V.material,ba,ia.z,null);else if(V.isMesh||V.isLine||V.isPoints)if(V.isSkinnedMesh&&V.skeleton.frame!==za.render.frame&&(V.skeleton.update(),V.skeleton.frame=za.render.frame),!V.frustumCulled||Q.intersectsObject(V))if(ha&&ia.setFromMatrixPosition(V.matrixWorld).applyMatrix4(ca),ja=Ha.update(V),ka=V.material,Array.isArray(ka)){const ma=ja.groups;for(let oa=0,pa=ma.length;oa<pa;oa++){const ta=ma[oa],ra=ka[ta.materialIndex];ra&&ra.visible&&
W.push(V,ja,ra,ba,ia.z,ta)}}else ka.visible&&W.push(V,ja,ka,ba,ia.z,null);V=V.children;for(let ma=0,oa=V.length;ma<oa;ma++)k(V[ma],ea,ba,ha)}}function n(V,ea,ba){const ha=!0===ea.isScene?ea.overrideMaterial:null;for(let ka=0,ma=V.length;ka<ma;ka++){var ja=V[ka];const oa=ja.object,pa=ja.geometry,ta=null===ha?ja.material:ha;ja=ja.group;if(ba.isArrayCamera){L=ba;const ra=ba.cameras;for(let Fa=0,La=ra.length;Fa<La;Fa++){const Ia=ra[Fa];oa.layers.test(Ia.layers)&&(sa.viewport(m.copy(Ia.viewport)),X.setupLights(Ia),
w(oa,ea,Ia,pa,ta,ja))}}else L=null,w(oa,ea,ba,pa,ta,ja)}}function w(V,ea,ba,ha,ja,ka){V.onBeforeRender(U,ea,ba,ha,ja,ka);X=Ea.get(ea,L||ba);V.modelViewMatrix.multiplyMatrices(ba.matrixWorldInverse,V.matrixWorld);V.normalMatrix.getNormalMatrix(V.modelViewMatrix);if(V.isImmediateRenderObject){const ma=x(ba,ea,ja,V);sa.setMaterial(ja);va.reset();g(V,ma)}else U.renderBufferDirect(ba,ea,ha,ja,V,ka);V.onAfterRender(U,ea,ba,ha,ja,ka);X=Ea.get(ea,L||ba)}function v(V,ea,ba){!0!==ea.isScene&&(ea=na);const ha=
ua.get(V),ja=X.state.lights,ka=ja.state.version;ba=Ca.getParameters(V,ja.state,X.state.shadowsArray,ea,ba);const ma=Ca.getProgramCacheKey(ba);let oa=ha.program,pa=!0;if(void 0===oa)V.addEventListener("dispose",f);else if(oa.cacheKey!==ma)h(V);else{if(ha.lightsStateVersion===ka&&void 0!==ba.shaderID){ea=V.isMeshStandardMaterial?ea.environment:null;ha.envMap=Ba.get(V.envMap||ea);return}pa=!1}pa&&(ba.uniforms=Ca.getUniforms(V),V.onBeforeCompile(ba,U),oa=Ca.acquireProgram(ba,ma),ha.program=oa,ha.uniforms=
ba.uniforms,ha.outputEncoding=ba.outputEncoding);ba=ha.uniforms;if(!V.isShaderMaterial&&!V.isRawShaderMaterial||!0===V.clipping)ha.numClippingPlanes=xa.numPlanes,ha.numIntersection=xa.numIntersection,ba.clippingPlanes=xa.uniform;ha.environment=V.isMeshStandardMaterial?ea.environment:null;ha.fog=ea.fog;ha.envMap=Ba.get(V.envMap||ha.environment);ha.needsLights=V.isMeshLambertMaterial||V.isMeshToonMaterial||V.isMeshPhongMaterial||V.isMeshStandardMaterial||V.isShadowMaterial||V.isShaderMaterial&&!0===
V.lights;ha.lightsStateVersion=ka;ha.needsLights&&(ba.ambientLightColor.value=ja.state.ambient,ba.lightProbe.value=ja.state.probe,ba.directionalLights.value=ja.state.directional,ba.directionalLightShadows.value=ja.state.directionalShadow,ba.spotLights.value=ja.state.spot,ba.spotLightShadows.value=ja.state.spotShadow,ba.rectAreaLights.value=ja.state.rectArea,ba.ltc_1.value=ja.state.rectAreaLTC1,ba.ltc_2.value=ja.state.rectAreaLTC2,ba.pointLights.value=ja.state.point,ba.pointLightShadows.value=ja.state.pointShadow,
ba.hemisphereLights.value=ja.state.hemi,ba.directionalShadowMap.value=ja.state.directionalShadowMap,ba.directionalShadowMatrix.value=ja.state.directionalShadowMatrix,ba.spotShadowMap.value=ja.state.spotShadowMap,ba.spotShadowMatrix.value=ja.state.spotShadowMatrix,ba.pointShadowMap.value=ja.state.pointShadowMap,ba.pointShadowMatrix.value=ja.state.pointShadowMatrix);V=ha.program.getUniforms();V=WebGLUniforms$$module$node_modules$three$build$three_module.seqWithValue(V.seq,ba);ha.uniformsList=V}function x(V,
ea,ba,ha){!0!==ea.isScene&&(ea=na);wa.resetTextureUnits();const ja=ea.fog;var ka=ba.isMeshStandardMaterial?ea.environment:null,ma=null===J?U.outputEncoding:J.texture.encoding,oa=Ba.get(ba.envMap||ka);const pa=ua.get(ba);var ta=X.state.lights;!0!==Y||!0!==da&&V===I||xa.setState(ba,V,V===I&&ba.id===E);ba.version===pa.__version?ba.fog&&pa.fog!==ja?v(ba,ea,ha):pa.environment!==ka?v(ba,ea,ha):pa.needsLights&&pa.lightsStateVersion!==ta.state.version?v(ba,ea,ha):void 0===pa.numClippingPlanes||pa.numClippingPlanes===
xa.numPlanes&&pa.numIntersection===xa.numIntersection?pa.outputEncoding!==ma?v(ba,ea,ha):pa.envMap!==oa&&v(ba,ea,ha):v(ba,ea,ha):(v(ba,ea,ha),pa.__version=ba.version);var ra=!1;ta=oa=!1;ea=pa.program;ka=ea.getUniforms();ma=pa.uniforms;sa.useProgram(ea.program)&&(ta=oa=ra=!0);ba.id!==E&&(E=ba.id,oa=!0);if(ra||I!==V){ka.setValue(fa,"projectionMatrix",V.projectionMatrix);qa.logarithmicDepthBuffer&&ka.setValue(fa,"logDepthBufFC",2/(Math.log(V.far+1)/Math.LN2));I!==V&&(I=V,ta=oa=!0);if(ba.isShaderMaterial||
ba.isMeshPhongMaterial||ba.isMeshToonMaterial||ba.isMeshStandardMaterial||ba.envMap)ra=ka.map.cameraPosition,void 0!==ra&&ra.setValue(fa,ia.setFromMatrixPosition(V.matrixWorld));(ba.isMeshPhongMaterial||ba.isMeshToonMaterial||ba.isMeshLambertMaterial||ba.isMeshBasicMaterial||ba.isMeshStandardMaterial||ba.isShaderMaterial)&&ka.setValue(fa,"isOrthographic",!0===V.isOrthographicCamera);(ba.isMeshPhongMaterial||ba.isMeshToonMaterial||ba.isMeshLambertMaterial||ba.isMeshBasicMaterial||ba.isMeshStandardMaterial||
ba.isShaderMaterial||ba.isShadowMaterial||ba.skinning)&&ka.setValue(fa,"viewMatrix",V.matrixWorldInverse)}if(ba.skinning&&(ka.setOptional(fa,ha,"bindMatrix"),ka.setOptional(fa,ha,"bindMatrixInverse"),V=ha.skeleton))if(ra=V.bones,qa.floatVertexTextures){if(void 0===V.boneTexture){ra=Math.sqrt(4*ra.length);ra=MathUtils$$module$node_modules$three$build$three_module.ceilPowerOfTwo(ra);ra=Math.max(ra,4);const Fa=new Float32Array(ra*ra*4);Fa.set(V.boneMatrices);const La=new DataTexture$$module$node_modules$three$build$three_module(Fa,
ra,ra,RGBAFormat$$module$node_modules$three$build$three_module,FloatType$$module$node_modules$three$build$three_module);V.boneMatrices=Fa;V.boneTexture=La;V.boneTextureSize=ra}ka.setValue(fa,"boneTexture",V.boneTexture,wa);ka.setValue(fa,"boneTextureSize",V.boneTextureSize)}else ka.setOptional(fa,V,"boneMatrices");if(oa||pa.receiveShadow!==ha.receiveShadow)pa.receiveShadow=ha.receiveShadow,ka.setValue(fa,"receiveShadow",ha.receiveShadow);oa&&(ka.setValue(fa,"toneMappingExposure",U.toneMappingExposure),
pa.needsLights&&(V=ta,ma.ambientLightColor.needsUpdate=V,ma.lightProbe.needsUpdate=V,ma.directionalLights.needsUpdate=V,ma.directionalLightShadows.needsUpdate=V,ma.pointLights.needsUpdate=V,ma.pointLightShadows.needsUpdate=V,ma.spotLights.needsUpdate=V,ma.spotLightShadows.needsUpdate=V,ma.rectAreaLights.needsUpdate=V,ma.hemisphereLights.needsUpdate=V),ja&&ba.fog&&Na.refreshFogUniforms(ma,ja),Na.refreshMaterialUniforms(ma,ba,t,q),WebGLUniforms$$module$node_modules$three$build$three_module.upload(fa,
pa.uniformsList,ma,wa));ba.isShaderMaterial&&!0===ba.uniformsNeedUpdate&&(WebGLUniforms$$module$node_modules$three$build$three_module.upload(fa,pa.uniformsList,ma,wa),ba.uniformsNeedUpdate=!1);ba.isSpriteMaterial&&ka.setValue(fa,"center",ha.center);ka.setValue(fa,"modelViewMatrix",ha.modelViewMatrix);ka.setValue(fa,"normalMatrix",ha.normalMatrix);ka.setValue(fa,"modelMatrix",ha.matrixWorld);return ea}a=a||{};const z=void 0!==a.canvas?a.canvas:document.createElementNS("http://www.w3.org/1999/xhtml",
"canvas");var F=void 0!==a.context?a.context:null,N=void 0!==a.alpha?a.alpha:!1;const p=void 0!==a.depth?a.depth:!0,A=void 0!==a.stencil?a.stencil:!0,G=void 0!==a.antialias?a.antialias:!1,O=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,P=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,S=void 0!==a.powerPreference?a.powerPreference:"default",T=void 0!==a.failIfMajorPerformanceCaveat?a.failIfMajorPerformanceCaveat:!1;let W=null,X=null;this.domElement=z;this.debug={checkShaderErrors:!0};
this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.clippingPlanes=[];this.localClippingEnabled=!1;this.gammaFactor=2;this.outputEncoding=LinearEncoding$$module$node_modules$three$build$three_module;this.physicallyCorrectLights=!1;this.toneMapping=NoToneMapping$$module$node_modules$three$build$three_module;this.toneMappingExposure=1;this.maxMorphTargets=8;this.maxMorphNormals=4;const U=this;let Z=!1,aa=null,r=0,y=0,J=null,C=null,E=-1,I=null,L=null;
const m=new Vector4$$module$node_modules$three$build$three_module,u=new Vector4$$module$node_modules$three$build$three_module;let D=null,l=z.width,q=z.height,t=1,B=null,H=null;const M=new Vector4$$module$node_modules$three$build$three_module(0,0,l,q),K=new Vector4$$module$node_modules$three$build$three_module(0,0,l,q);let R=!1;const Q=new Frustum$$module$node_modules$three$build$three_module;let Y=!1,da=!1;const ca=new Matrix4$$module$node_modules$three$build$three_module,ia=new Vector3$$module$node_modules$three$build$three_module,
na={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let fa=F;try{F={alpha:N,depth:p,stencil:A,antialias:G,premultipliedAlpha:O,preserveDrawingBuffer:P,powerPreference:S,failIfMajorPerformanceCaveat:T};z.addEventListener("webglcontextlost",d,!1);z.addEventListener("webglcontextrestored",e,!1);if(null===fa&&(N=["webgl2","webgl","experimental-webgl"],!0===U.isWebGL1Renderer&&N.shift(),fa=b(N,F),null===fa)){if(b(N))throw Error("Error creating WebGL context with your selected attributes.");
throw Error("Error creating WebGL context.");}void 0===fa.getShaderPrecisionFormat&&(fa.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(V){throw console.error("THREE.WebGLRenderer: "+V.message),V;}let la,qa,sa,za,ua,wa,Ba,Ga,Ma,Ha,Ca,Na,Ka,Ea,xa,Aa,Pa,Qa,Ra,ya,va;c();const Da=new WebXRManager$$module$node_modules$three$build$three_module(U,fa);this.xr=Da;const Sa=new WebGLShadowMap$$module$node_modules$three$build$three_module(U,Ha,qa.maxTextureSize);this.shadowMap=
Sa;this.getContext=function(){return fa};this.getContextAttributes=function(){return fa.getContextAttributes()};this.forceContextLoss=function(){const V=la.get("WEBGL_lose_context");V&&V.loseContext()};this.forceContextRestore=function(){const V=la.get("WEBGL_lose_context");V&&V.restoreContext()};this.getPixelRatio=function(){return t};this.setPixelRatio=function(V){void 0!==V&&(t=V,this.setSize(l,q,!1))};this.getSize=function(V){void 0===V&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),
V=new Vector2$$module$node_modules$three$build$three_module);return V.set(l,q)};this.setSize=function(V,ea,ba){Da.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(l=V,q=ea,z.width=Math.floor(V*t),z.height=Math.floor(ea*t),!1!==ba&&(z.style.width=V+"px",z.style.height=ea+"px"),this.setViewport(0,0,V,ea))};this.getDrawingBufferSize=function(V){void 0===V&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),
V=new Vector2$$module$node_modules$three$build$three_module);return V.set(l*t,q*t).floor()};this.setDrawingBufferSize=function(V,ea,ba){l=V;q=ea;t=ba;z.width=Math.floor(V*ba);z.height=Math.floor(ea*ba);this.setViewport(0,0,V,ea)};this.getCurrentViewport=function(V){void 0===V&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),V=new Vector4$$module$node_modules$three$build$three_module);return V.copy(m)};this.getViewport=function(V){return V.copy(M)};this.setViewport=
function(V,ea,ba,ha){V.isVector4?M.set(V.x,V.y,V.z,V.w):M.set(V,ea,ba,ha);sa.viewport(m.copy(M).multiplyScalar(t).floor())};this.getScissor=function(V){return V.copy(K)};this.setScissor=function(V,ea,ba,ha){V.isVector4?K.set(V.x,V.y,V.z,V.w):K.set(V,ea,ba,ha);sa.scissor(u.copy(K).multiplyScalar(t).floor())};this.getScissorTest=function(){return R};this.setScissorTest=function(V){sa.setScissorTest(R=V)};this.setOpaqueSort=function(V){B=V};this.setTransparentSort=function(V){H=V};this.getClearColor=
function(){return Aa.getClearColor()};this.setClearColor=function(){Aa.setClearColor.apply(Aa,arguments)};this.getClearAlpha=function(){return Aa.getClearAlpha()};this.setClearAlpha=function(){Aa.setClearAlpha.apply(Aa,arguments)};this.clear=function(V,ea,ba){let ha=0;if(void 0===V||V)ha|=16384;if(void 0===ea||ea)ha|=256;if(void 0===ba||ba)ha|=1024;fa.clear(ha)};this.clearColor=function(){this.clear(!0,!1,!1)};this.clearDepth=function(){this.clear(!1,!0,!1)};this.clearStencil=function(){this.clear(!1,
!1,!0)};this.dispose=function(){z.removeEventListener("webglcontextlost",d,!1);z.removeEventListener("webglcontextrestored",e,!1);Ka.dispose();Ea.dispose();ua.dispose();Ba.dispose();Ha.dispose();va.dispose();Da.dispose();Ja.stop()};this.renderBufferImmediate=function(V,ea){va.initAttributes();const ba=ua.get(V);V.hasPositions&&!ba.position&&(ba.position=fa.createBuffer());V.hasNormals&&!ba.normal&&(ba.normal=fa.createBuffer());V.hasUvs&&!ba.uv&&(ba.uv=fa.createBuffer());V.hasColors&&!ba.color&&(ba.color=
fa.createBuffer());ea=ea.getAttributes();V.hasPositions&&(fa.bindBuffer(34962,ba.position),fa.bufferData(34962,V.positionArray,35048),va.enableAttribute(ea.position),fa.vertexAttribPointer(ea.position,3,5126,!1,0,0));V.hasNormals&&(fa.bindBuffer(34962,ba.normal),fa.bufferData(34962,V.normalArray,35048),va.enableAttribute(ea.normal),fa.vertexAttribPointer(ea.normal,3,5126,!1,0,0));V.hasUvs&&(fa.bindBuffer(34962,ba.uv),fa.bufferData(34962,V.uvArray,35048),va.enableAttribute(ea.uv),fa.vertexAttribPointer(ea.uv,
2,5126,!1,0,0));V.hasColors&&(fa.bindBuffer(34962,ba.color),fa.bufferData(34962,V.colorArray,35048),va.enableAttribute(ea.color),fa.vertexAttribPointer(ea.color,3,5126,!1,0,0));va.disableUnusedAttributes();fa.drawArrays(4,0,V.count);V.count=0};this.renderBufferDirect=function(V,ea,ba,ha,ja,ka){null===ea&&(ea=na);var ma=ja.isMesh&&0>ja.matrixWorld.determinant();V=x(V,ea,ha,ja);sa.setMaterial(ha,ma);ma=ba.index;ea=ba.attributes.position;if(null===ma){if(void 0===ea||0===ea.count)return}else if(0===
ma.count)return;let oa=1;!0===ha.wireframe&&(ma=Ma.getWireframeAttribute(ba),oa=2);(ha.morphTargets||ha.morphNormals)&&Pa.update(ja,ba,ha,V);va.setup(ja,ha,V,ba,ma);V=Qa;if(null!==ma){var pa=Ga.get(ma);V=Ra;V.setIndex(pa)}const ta=ba.drawRange.start*oa,ra=null!==ka?ka.start*oa:0;pa=Math.max(ta,ra);ka=Math.max(0,Math.min(null!==ma?ma.count:ea.count,ta+ba.drawRange.count*oa,ra+(null!==ka?ka.count*oa:Infinity))-1-pa+1);0!==ka&&(ja.isMesh?!0===ha.wireframe?(sa.setLineWidth(ha.wireframeLinewidth*(null===
J?t:1)),V.setMode(1)):V.setMode(4):ja.isLine?(ha=ha.linewidth,void 0===ha&&(ha=1),sa.setLineWidth(ha*(null===J?t:1)),ja.isLineSegments?V.setMode(1):ja.isLineLoop?V.setMode(2):V.setMode(3)):ja.isPoints?V.setMode(0):ja.isSprite&&V.setMode(4),ja.isInstancedMesh?V.renderInstances(pa,ka,ja.count):ba.isInstancedBufferGeometry?V.renderInstances(pa,ka,Math.min(ba.instanceCount,ba._maxInstanceCount)):V.render(pa,ka))};this.compile=function(V,ea){X=Ea.get(V,ea);X.init();V.traverse(function(ha){ha.isLight&&
(X.pushLight(ha),ha.castShadow&&X.pushShadow(ha))});X.setupLights(ea);const ba=new WeakMap;V.traverse(function(ha){const ja=ha.material;if(ja)if(Array.isArray(ja))for(let ka=0;ka<ja.length;ka++){const ma=ja[ka];!1===ba.has(ma)&&(v(ma,V,ha),ba.set(ma))}else!1===ba.has(ja)&&(v(ja,V,ha),ba.set(ja))})};let Oa=null;const Ja=new WebGLAnimation$$module$node_modules$three$build$three_module;Ja.setAnimationLoop(function(V){Da.isPresenting||Oa&&Oa(V)});"undefined"!==typeof window&&Ja.setContext(window);this.setAnimationLoop=
function(V){Oa=V;Da.setAnimationLoop(V);null===V?Ja.stop():Ja.start()};this.render=function(V,ea,ba,ha){let ja,ka;void 0!==ba&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),ja=ba);void 0!==ha&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),ka=ha);if(void 0!==ea&&!0!==ea.isCamera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
else if(!0!==Z){va.resetDefaultState();E=-1;I=null;!0===V.autoUpdate&&V.updateMatrixWorld();null===ea.parent&&ea.updateMatrixWorld();!0===Da.enabled&&!0===Da.isPresenting&&(ea=Da.getCamera(ea));if(!0===V.isScene)V.onBeforeRender(U,V,ea,ja||J);X=Ea.get(V,ea);X.init();ca.multiplyMatrices(ea.projectionMatrix,ea.matrixWorldInverse);Q.setFromProjectionMatrix(ca);da=this.localClippingEnabled;Y=xa.init(this.clippingPlanes,da,ea);W=Ka.get(V,ea);W.init();k(V,ea,0,U.sortObjects);W.finish();!0===U.sortObjects&&
W.sort(B,H);!0===Y&&xa.beginShadows();Sa.render(X.state.shadowsArray,V,ea);X.setupLights(ea);!0===Y&&xa.endShadows();!0===this.info.autoReset&&this.info.reset();void 0!==ja&&this.setRenderTarget(ja);Aa.render(W,V,ea,ka);ba=W.opaque;ha=W.transparent;0<ba.length&&n(ba,V,ea);0<ha.length&&n(ha,V,ea);if(!0===V.isScene)V.onAfterRender(U,V,ea);null!==J&&(wa.updateRenderTargetMipmap(J),wa.updateMultisampleRenderTarget(J));sa.buffers.depth.setTest(!0);sa.buffers.depth.setMask(!0);sa.buffers.color.setMask(!0);
sa.setPolygonOffset(!1);X=W=null}};this.setFramebuffer=function(V){aa!==V&&null===J&&fa.bindFramebuffer(36160,V);aa=V};this.getActiveCubeFace=function(){return r};this.getActiveMipmapLevel=function(){return y};this.getRenderList=function(){return W};this.setRenderList=function(V){W=V};this.getRenderState=function(){return X};this.setRenderState=function(V){X=V};this.getRenderTarget=function(){return J};this.setRenderTarget=function(V,ea=0,ba=0){J=V;r=ea;y=ba;V&&void 0===ua.get(V).__webglFramebuffer&&
wa.setupRenderTarget(V);var ha=aa;let ja=!1;V?(ha=ua.get(V).__webglFramebuffer,V.isWebGLCubeRenderTarget?(ha=ha[ea],ja=!0):ha=V.isWebGLMultisampleRenderTarget?ua.get(V).__webglMultisampledFramebuffer:ha,m.copy(V.viewport),u.copy(V.scissor),D=V.scissorTest):(m.copy(M).multiplyScalar(t).floor(),u.copy(K).multiplyScalar(t).floor(),D=R);C!==ha&&(fa.bindFramebuffer(36160,ha),C=ha);sa.viewport(m);sa.scissor(u);sa.setScissorTest(D);ja&&(V=ua.get(V.texture),fa.framebufferTexture2D(36160,36064,34069+ea,V.__webglTexture,
ba))};this.readRenderTargetPixels=function(V,ea,ba,ha,ja,ka,ma){if(V&&V.isWebGLRenderTarget){var oa=ua.get(V).__webglFramebuffer;V.isWebGLCubeRenderTarget&&void 0!==ma&&(oa=oa[ma]);if(oa){ma=!1;oa!==C&&(fa.bindFramebuffer(36160,oa),ma=!0);try{const pa=V.texture,ta=pa.format,ra=pa.type;ta!==RGBAFormat$$module$node_modules$three$build$three_module&&ya.convert(ta)!==fa.getParameter(35739)?console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format."):
ra===UnsignedByteType$$module$node_modules$three$build$three_module||ya.convert(ra)===fa.getParameter(35738)||ra===FloatType$$module$node_modules$three$build$three_module&&(qa.isWebGL2||la.get("OES_texture_float")||la.get("WEBGL_color_buffer_float"))||ra===HalfFloatType$$module$node_modules$three$build$three_module&&(qa.isWebGL2?la.get("EXT_color_buffer_float"):la.get("EXT_color_buffer_half_float"))?36053===fa.checkFramebufferStatus(36160)?0<=ea&&ea<=V.width-ha&&0<=ba&&ba<=V.height-ja&&fa.readPixels(ea,
ba,ha,ja,ya.convert(ta),ya.convert(ra),ka):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete."):console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.")}finally{ma&&fa.bindFramebuffer(36160,C)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")};this.copyFramebufferToTexture=function(V,ea,ba){void 0===
ba&&(ba=0);var ha=Math.pow(2,-ba);const ja=Math.floor(ea.image.width*ha);ha=Math.floor(ea.image.height*ha);const ka=ya.convert(ea.format);wa.setTexture2D(ea,0);fa.copyTexImage2D(3553,ba,ka,V.x,V.y,ja,ha,0);sa.unbindTexture()};this.copyTextureToTexture=function(V,ea,ba,ha){void 0===ha&&(ha=0);const ja=ea.image.width,ka=ea.image.height,ma=ya.convert(ba.format),oa=ya.convert(ba.type);wa.setTexture2D(ba,0);fa.pixelStorei(37440,ba.flipY);fa.pixelStorei(37441,ba.premultiplyAlpha);fa.pixelStorei(3317,ba.unpackAlignment);
ea.isDataTexture?fa.texSubImage2D(3553,ha,V.x,V.y,ja,ka,ma,oa,ea.image.data):ea.isCompressedTexture?fa.compressedTexSubImage2D(3553,ha,V.x,V.y,ea.mipmaps[0].width,ea.mipmaps[0].height,ma,ea.mipmaps[0].data):fa.texSubImage2D(3553,ha,V.x,V.y,ma,oa,ea.image);0===ha&&ba.generateMipmaps&&fa.generateMipmap(3553);sa.unbindTexture()};this.initTexture=function(V){wa.setTexture2D(V,0);sa.unbindTexture()};"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}
function WebGL1Renderer$$module$node_modules$three$build$three_module(a){WebGLRenderer$$module$node_modules$three$build$three_module.call(this,a)}WebGL1Renderer$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(WebGLRenderer$$module$node_modules$three$build$three_module.prototype),{constructor:WebGL1Renderer$$module$node_modules$three$build$three_module,isWebGL1Renderer:!0});
class FogExp2$$module$node_modules$three$build$three_module{constructor(a,b){Object.defineProperty(this,"isFogExp2",{value:!0});this.name="";this.color=new Color$$module$node_modules$three$build$three_module(a);this.density=void 0!==b?b:2.5E-4}clone(){return new FogExp2$$module$node_modules$three$build$three_module(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}
class Fog$$module$node_modules$three$build$three_module{constructor(a,b,c){Object.defineProperty(this,"isFog",{value:!0});this.name="";this.color=new Color$$module$node_modules$three$build$three_module(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3}clone(){return new Fog$$module$node_modules$three$build$three_module(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}
class Scene$$module$node_modules$three$build$three_module extends Object3D$$module$node_modules$three$build$three_module{constructor(){super();Object.defineProperty(this,"isScene",{value:!0});this.type="Scene";this.overrideMaterial=this.fog=this.environment=this.background=null;this.autoUpdate=!0;"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(a,b){super.copy(a,b);null!==a.background&&(this.background=a.background.clone());null!==
a.environment&&(this.environment=a.environment.clone());null!==a.fog&&(this.fog=a.fog.clone());null!==a.overrideMaterial&&(this.overrideMaterial=a.overrideMaterial.clone());this.autoUpdate=a.autoUpdate;this.matrixAutoUpdate=a.matrixAutoUpdate;return this}toJSON(a){const b=super.toJSON(a);null!==this.background&&(b.object.background=this.background.toJSON(a));null!==this.environment&&(b.object.environment=this.environment.toJSON(a));null!==this.fog&&(b.object.fog=this.fog.toJSON());return b}}
function InterleavedBuffer$$module$node_modules$three$build$three_module(a,b){this.array=a;this.stride=b;this.count=void 0!==a?a.length/b:0;this.usage=StaticDrawUsage$$module$node_modules$three$build$three_module;this.updateRange={offset:0,count:-1};this.version=0;this.uuid=MathUtils$$module$node_modules$three$build$three_module.generateUUID()}Object.defineProperty(InterleavedBuffer$$module$node_modules$three$build$three_module.prototype,"needsUpdate",{set:function(a){!0===a&&this.version++}});
Object.assign(InterleavedBuffer$$module$node_modules$three$build$three_module.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(a){this.usage=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.count=a.count;this.stride=a.stride;this.usage=a.usage;return this},copyAt:function(a,b,c){a*=this.stride;c*=b.stride;for(let d=0,e=this.stride;d<e;d++)this.array[a+d]=b.array[c+d];return this},set:function(a,b){void 0===b&&(b=0);this.array.set(a,
b);return this},clone:function(a){void 0===a.arrayBuffers&&(a.arrayBuffers={});void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=MathUtils$$module$node_modules$three$build$three_module.generateUUID());void 0===a.arrayBuffers[this.array.buffer._uuid]&&(a.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);a=new this.array.constructor(a.arrayBuffers[this.array.buffer._uuid]);a=new InterleavedBuffer$$module$node_modules$three$build$three_module(a,this.stride);a.setUsage(this.usage);
return a},onUpload:function(a){this.onUploadCallback=a;return this},toJSON:function(a){void 0===a.arrayBuffers&&(a.arrayBuffers={});void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=MathUtils$$module$node_modules$three$build$three_module.generateUUID());void 0===a.arrayBuffers[this.array.buffer._uuid]&&(a.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer)));return{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,
stride:this.stride}}});const _vector$6$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module;function InterleavedBufferAttribute$$module$node_modules$three$build$three_module(a,b,c,d){this.name="";this.data=a;this.itemSize=b;this.offset=c;this.normalized=!0===d}
Object.defineProperties(InterleavedBufferAttribute$$module$node_modules$three$build$three_module.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(a){this.data.needsUpdate=a}}});
Object.assign(InterleavedBufferAttribute$$module$node_modules$three$build$three_module.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(a){for(let b=0,c=this.data.count;b<c;b++)_vector$6$$module$node_modules$three$build$three_module.x=this.getX(b),_vector$6$$module$node_modules$three$build$three_module.y=this.getY(b),_vector$6$$module$node_modules$three$build$three_module.z=this.getZ(b),_vector$6$$module$node_modules$three$build$three_module.applyMatrix4(a),this.setXYZ(b,_vector$6$$module$node_modules$three$build$three_module.x,
_vector$6$$module$node_modules$three$build$three_module.y,_vector$6$$module$node_modules$three$build$three_module.z);return this},setX:function(a,b){this.data.array[a*this.data.stride+this.offset]=b;return this},setY:function(a,b){this.data.array[a*this.data.stride+this.offset+1]=b;return this},setZ:function(a,b){this.data.array[a*this.data.stride+this.offset+2]=b;return this},setW:function(a,b){this.data.array[a*this.data.stride+this.offset+3]=b;return this},getX:function(a){return this.data.array[a*
this.data.stride+this.offset]},getY:function(a){return this.data.array[a*this.data.stride+this.offset+1]},getZ:function(a){return this.data.array[a*this.data.stride+this.offset+2]},getW:function(a){return this.data.array[a*this.data.stride+this.offset+3]},setXY:function(a,b,c){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;return this},setXYZ:function(a,b,c,d){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;this.data.array[a+2]=d;return this},
setXYZW:function(a,b,c,d,e){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;this.data.array[a+2]=d;this.data.array[a+3]=e;return this},clone:function(a){if(void 0===a){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");a=[];for(let b=0;b<this.count;b++){const c=b*this.data.stride+this.offset;for(let d=0;d<this.itemSize;d++)a.push(this.data.array[c+d])}return new BufferAttribute$$module$node_modules$three$build$three_module(new this.array.constructor(a),
this.itemSize,this.normalized)}void 0===a.interleavedBuffers&&(a.interleavedBuffers={});void 0===a.interleavedBuffers[this.data.uuid]&&(a.interleavedBuffers[this.data.uuid]=this.data.clone(a));return new InterleavedBufferAttribute$$module$node_modules$three$build$three_module(a.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(a){if(void 0===a){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");
a=[];for(let b=0;b<this.count;b++){const c=b*this.data.stride+this.offset;for(let d=0;d<this.itemSize;d++)a.push(this.data.array[c+d])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:a,normalized:this.normalized}}void 0===a.interleavedBuffers&&(a.interleavedBuffers={});void 0===a.interleavedBuffers[this.data.uuid]&&(a.interleavedBuffers[this.data.uuid]=this.data.toJSON(a));return{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}});
function SpriteMaterial$$module$node_modules$three$build$three_module(a){Material$$module$node_modules$three$build$three_module.call(this);this.type="SpriteMaterial";this.color=new Color$$module$node_modules$three$build$three_module(16777215);this.alphaMap=this.map=null;this.rotation=0;this.transparent=this.sizeAttenuation=!0;this.setValues(a)}SpriteMaterial$$module$node_modules$three$build$three_module.prototype=Object.create(Material$$module$node_modules$three$build$three_module.prototype);
SpriteMaterial$$module$node_modules$three$build$three_module.prototype.constructor=SpriteMaterial$$module$node_modules$three$build$three_module;SpriteMaterial$$module$node_modules$three$build$three_module.prototype.isSpriteMaterial=!0;
SpriteMaterial$$module$node_modules$three$build$three_module.prototype.copy=function(a){Material$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.alphaMap=a.alphaMap;this.rotation=a.rotation;this.sizeAttenuation=a.sizeAttenuation;return this};let _geometry$$module$node_modules$three$build$three_module;
const _intersectPoint$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_worldScale$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_mvPosition$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_alignedPosition$$module$node_modules$three$build$three_module=new Vector2$$module$node_modules$three$build$three_module,_rotatedPosition$$module$node_modules$three$build$three_module=
new Vector2$$module$node_modules$three$build$three_module,_viewWorldMatrix$$module$node_modules$three$build$three_module=new Matrix4$$module$node_modules$three$build$three_module,_vA$1$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_vB$1$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_vC$1$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,
_uvA$1$$module$node_modules$three$build$three_module=new Vector2$$module$node_modules$three$build$three_module,_uvB$1$$module$node_modules$three$build$three_module=new Vector2$$module$node_modules$three$build$three_module,_uvC$1$$module$node_modules$three$build$three_module=new Vector2$$module$node_modules$three$build$three_module;
function Sprite$$module$node_modules$three$build$three_module(a){Object3D$$module$node_modules$three$build$three_module.call(this);this.type="Sprite";if(void 0===_geometry$$module$node_modules$three$build$three_module){_geometry$$module$node_modules$three$build$three_module=new BufferGeometry$$module$node_modules$three$build$three_module;var b=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]);b=new InterleavedBuffer$$module$node_modules$three$build$three_module(b,5);_geometry$$module$node_modules$three$build$three_module.setIndex([0,
1,2,0,2,3]);_geometry$$module$node_modules$three$build$three_module.setAttribute("position",new InterleavedBufferAttribute$$module$node_modules$three$build$three_module(b,3,0,!1));_geometry$$module$node_modules$three$build$three_module.setAttribute("uv",new InterleavedBufferAttribute$$module$node_modules$three$build$three_module(b,2,3,!1))}this.geometry=_geometry$$module$node_modules$three$build$three_module;this.material=void 0!==a?a:new SpriteMaterial$$module$node_modules$three$build$three_module;
this.center=new Vector2$$module$node_modules$three$build$three_module(.5,.5)}
Sprite$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Object3D$$module$node_modules$three$build$three_module.prototype),{constructor:Sprite$$module$node_modules$three$build$three_module,isSprite:!0,raycast:function(a,b){null===a.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.');_worldScale$$module$node_modules$three$build$three_module.setFromMatrixScale(this.matrixWorld);_viewWorldMatrix$$module$node_modules$three$build$three_module.copy(a.camera.matrixWorld);
this.modelViewMatrix.multiplyMatrices(a.camera.matrixWorldInverse,this.matrixWorld);_mvPosition$$module$node_modules$three$build$three_module.setFromMatrixPosition(this.modelViewMatrix);a.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&_worldScale$$module$node_modules$three$build$three_module.multiplyScalar(-_mvPosition$$module$node_modules$three$build$three_module.z);var c=this.material.rotation;let d;if(0!==c){d=Math.cos(c);var e=Math.sin(c)}c=this.center;transformVertex$$module$node_modules$three$build$three_module(_vA$1$$module$node_modules$three$build$three_module.set(-.5,
-.5,0),_mvPosition$$module$node_modules$three$build$three_module,c,_worldScale$$module$node_modules$three$build$three_module,e,d);transformVertex$$module$node_modules$three$build$three_module(_vB$1$$module$node_modules$three$build$three_module.set(.5,-.5,0),_mvPosition$$module$node_modules$three$build$three_module,c,_worldScale$$module$node_modules$three$build$three_module,e,d);transformVertex$$module$node_modules$three$build$three_module(_vC$1$$module$node_modules$three$build$three_module.set(.5,
.5,0),_mvPosition$$module$node_modules$three$build$three_module,c,_worldScale$$module$node_modules$three$build$three_module,e,d);_uvA$1$$module$node_modules$three$build$three_module.set(0,0);_uvB$1$$module$node_modules$three$build$three_module.set(1,0);_uvC$1$$module$node_modules$three$build$three_module.set(1,1);let f=a.ray.intersectTriangle(_vA$1$$module$node_modules$three$build$three_module,_vB$1$$module$node_modules$three$build$three_module,_vC$1$$module$node_modules$three$build$three_module,
!1,_intersectPoint$$module$node_modules$three$build$three_module);if(null===f&&(transformVertex$$module$node_modules$three$build$three_module(_vB$1$$module$node_modules$three$build$three_module.set(-.5,.5,0),_mvPosition$$module$node_modules$three$build$three_module,c,_worldScale$$module$node_modules$three$build$three_module,e,d),_uvB$1$$module$node_modules$three$build$three_module.set(0,1),f=a.ray.intersectTriangle(_vA$1$$module$node_modules$three$build$three_module,_vC$1$$module$node_modules$three$build$three_module,
_vB$1$$module$node_modules$three$build$three_module,!1,_intersectPoint$$module$node_modules$three$build$three_module),null===f))return;e=a.ray.origin.distanceTo(_intersectPoint$$module$node_modules$three$build$three_module);e<a.near||e>a.far||b.push({distance:e,point:_intersectPoint$$module$node_modules$three$build$three_module.clone(),uv:Triangle$$module$node_modules$three$build$three_module.getUV(_intersectPoint$$module$node_modules$three$build$three_module,_vA$1$$module$node_modules$three$build$three_module,
_vB$1$$module$node_modules$three$build$three_module,_vC$1$$module$node_modules$three$build$three_module,_uvA$1$$module$node_modules$three$build$three_module,_uvB$1$$module$node_modules$three$build$three_module,_uvC$1$$module$node_modules$three$build$three_module,new Vector2$$module$node_modules$three$build$three_module),face:null,object:this})},copy:function(a){Object3D$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);void 0!==a.center&&this.center.copy(a.center);this.material=
a.material;return this}});
function transformVertex$$module$node_modules$three$build$three_module(a,b,c,d,e,f){_alignedPosition$$module$node_modules$three$build$three_module.subVectors(a,c).addScalar(.5).multiply(d);void 0!==e?(_rotatedPosition$$module$node_modules$three$build$three_module.x=f*_alignedPosition$$module$node_modules$three$build$three_module.x-e*_alignedPosition$$module$node_modules$three$build$three_module.y,_rotatedPosition$$module$node_modules$three$build$three_module.y=e*_alignedPosition$$module$node_modules$three$build$three_module.x+f*
_alignedPosition$$module$node_modules$three$build$three_module.y):_rotatedPosition$$module$node_modules$three$build$three_module.copy(_alignedPosition$$module$node_modules$three$build$three_module);a.copy(b);a.x+=_rotatedPosition$$module$node_modules$three$build$three_module.x;a.y+=_rotatedPosition$$module$node_modules$three$build$three_module.y;a.applyMatrix4(_viewWorldMatrix$$module$node_modules$three$build$three_module)}
const _v1$4$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_v2$2$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module;function LOD$$module$node_modules$three$build$three_module(){Object3D$$module$node_modules$three$build$three_module.call(this);this._currentLevel=0;this.type="LOD";Object.defineProperties(this,{levels:{enumerable:!0,value:[]}});this.autoUpdate=!0}
LOD$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Object3D$$module$node_modules$three$build$three_module.prototype),{constructor:LOD$$module$node_modules$three$build$three_module,isLOD:!0,copy:function(a){Object3D$$module$node_modules$three$build$three_module.prototype.copy.call(this,a,!1);const b=a.levels;for(let c=0,d=b.length;c<d;c++){const e=b[c];this.addLevel(e.object.clone(),e.distance)}this.autoUpdate=a.autoUpdate;return this},addLevel:function(a,b){void 0===
b&&(b=0);b=Math.abs(b);const c=this.levels;let d;for(d=0;d<c.length&&!(b<c[d].distance);d++);c.splice(d,0,{distance:b,object:a});this.add(a);return this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(a){const b=this.levels;if(0<b.length){let c,d;c=1;for(d=b.length;c<d&&!(a<b[c].distance);c++);return b[c-1].object}return null},raycast:function(a,b){if(0<this.levels.length){_v1$4$$module$node_modules$three$build$three_module.setFromMatrixPosition(this.matrixWorld);
const c=a.ray.origin.distanceTo(_v1$4$$module$node_modules$three$build$three_module);this.getObjectForDistance(c).raycast(a,b)}},update:function(a){const b=this.levels;if(1<b.length){_v1$4$$module$node_modules$three$build$three_module.setFromMatrixPosition(a.matrixWorld);_v2$2$$module$node_modules$three$build$three_module.setFromMatrixPosition(this.matrixWorld);a=_v1$4$$module$node_modules$three$build$three_module.distanceTo(_v2$2$$module$node_modules$three$build$three_module)/a.zoom;b[0].object.visible=
!0;let c,d;c=1;for(d=b.length;c<d;c++)if(a>=b[c].distance)b[c-1].object.visible=!1,b[c].object.visible=!0;else break;for(this._currentLevel=c-1;c<d;c++)b[c].object.visible=!1}},toJSON:function(a){a=Object3D$$module$node_modules$three$build$three_module.prototype.toJSON.call(this,a);!1===this.autoUpdate&&(a.object.autoUpdate=!1);a.object.levels=[];const b=this.levels;for(let c=0,d=b.length;c<d;c++){const e=b[c];a.object.levels.push({object:e.object.uuid,distance:e.distance})}return a}});
function SkinnedMesh$$module$node_modules$three$build$three_module(a,b){a&&a.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");Mesh$$module$node_modules$three$build$three_module.call(this,a,b);this.type="SkinnedMesh";this.bindMode="attached";this.bindMatrix=new Matrix4$$module$node_modules$three$build$three_module;this.bindMatrixInverse=new Matrix4$$module$node_modules$three$build$three_module}
SkinnedMesh$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Mesh$$module$node_modules$three$build$three_module.prototype),{constructor:SkinnedMesh$$module$node_modules$three$build$three_module,isSkinnedMesh:!0,copy:function(a){Mesh$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.bindMode=a.bindMode;this.bindMatrix.copy(a.bindMatrix);this.bindMatrixInverse.copy(a.bindMatrixInverse);this.skeleton=a.skeleton;return this},bind:function(a,
b){this.skeleton=a;void 0===b&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),b=this.matrixWorld);this.bindMatrix.copy(b);this.bindMatrixInverse.getInverse(b)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const a=new Vector4$$module$node_modules$three$build$three_module,b=this.geometry.attributes.skinWeight;for(let c=0,d=b.count;c<d;c++){a.x=b.getX(c);a.y=b.getY(c);a.z=b.getZ(c);a.w=b.getW(c);const e=1/a.manhattanLength();Infinity!==e?a.multiplyScalar(e):a.set(1,
0,0,0);b.setXYZW(c,a.x,a.y,a.z,a.w)}},updateMatrixWorld:function(a){Mesh$$module$node_modules$three$build$three_module.prototype.updateMatrixWorld.call(this,a);"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(){const a=new Vector3$$module$node_modules$three$build$three_module,b=new Vector4$$module$node_modules$three$build$three_module,
c=new Vector4$$module$node_modules$three$build$three_module,d=new Vector3$$module$node_modules$three$build$three_module,e=new Matrix4$$module$node_modules$three$build$three_module;return function(f,h){const g=this.skeleton;var k=this.geometry;b.fromBufferAttribute(k.attributes.skinIndex,f);c.fromBufferAttribute(k.attributes.skinWeight,f);a.fromBufferAttribute(k.attributes.position,f).applyMatrix4(this.bindMatrix);h.set(0,0,0);for(f=0;4>f;f++)if(k=c.getComponent(f),0!==k){const n=b.getComponent(f);
e.multiplyMatrices(g.bones[n].matrixWorld,g.boneInverses[n]);h.addScaledVector(d.copy(a).applyMatrix4(e),k)}return h.applyMatrix4(this.bindMatrixInverse)}}()});const _offsetMatrix$$module$node_modules$three$build$three_module=new Matrix4$$module$node_modules$three$build$three_module,_identityMatrix$$module$node_modules$three$build$three_module=new Matrix4$$module$node_modules$three$build$three_module;
function Skeleton$$module$node_modules$three$build$three_module(a,b){a=a||[];this.bones=a.slice(0);this.boneMatrices=new Float32Array(16*this.bones.length);this.frame=-1;if(void 0===b)this.calculateInverses();else if(this.bones.length===b.length)this.boneInverses=b.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length.");this.boneInverses=[];for(let c=0,d=this.bones.length;c<d;c++)this.boneInverses.push(new Matrix4$$module$node_modules$three$build$three_module)}}
Object.assign(Skeleton$$module$node_modules$three$build$three_module.prototype,{calculateInverses:function(){this.boneInverses=[];for(let a=0,b=this.bones.length;a<b;a++){const c=new Matrix4$$module$node_modules$three$build$three_module;this.bones[a]&&c.getInverse(this.bones[a].matrixWorld);this.boneInverses.push(c)}},pose:function(){for(let b=0,c=this.bones.length;b<c;b++){var a=this.bones[b];a&&a.matrixWorld.getInverse(this.boneInverses[b])}for(let b=0,c=this.bones.length;b<c;b++)if(a=this.bones[b])a.parent&&
a.parent.isBone?(a.matrix.getInverse(a.parent.matrixWorld),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale)},update:function(){const a=this.bones,b=this.boneInverses,c=this.boneMatrices,d=this.boneTexture;for(let e=0,f=a.length;e<f;e++)_offsetMatrix$$module$node_modules$three$build$three_module.multiplyMatrices(a[e]?a[e].matrixWorld:_identityMatrix$$module$node_modules$three$build$three_module,b[e]),_offsetMatrix$$module$node_modules$three$build$three_module.toArray(c,
16*e);void 0!==d&&(d.needsUpdate=!0)},clone:function(){return new Skeleton$$module$node_modules$three$build$three_module(this.bones,this.boneInverses)},getBoneByName:function(a){for(let b=0,c=this.bones.length;b<c;b++){const d=this.bones[b];if(d.name===a)return d}},dispose:function(){this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=void 0)}});
function Bone$$module$node_modules$three$build$three_module(){Object3D$$module$node_modules$three$build$three_module.call(this);this.type="Bone"}Bone$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Object3D$$module$node_modules$three$build$three_module.prototype),{constructor:Bone$$module$node_modules$three$build$three_module,isBone:!0});
const _instanceLocalMatrix$$module$node_modules$three$build$three_module=new Matrix4$$module$node_modules$three$build$three_module,_instanceWorldMatrix$$module$node_modules$three$build$three_module=new Matrix4$$module$node_modules$three$build$three_module,_instanceIntersects$$module$node_modules$three$build$three_module=[],_mesh$$module$node_modules$three$build$three_module=new Mesh$$module$node_modules$three$build$three_module;
function InstancedMesh$$module$node_modules$three$build$three_module(a,b,c){Mesh$$module$node_modules$three$build$three_module.call(this,a,b);this.instanceMatrix=new BufferAttribute$$module$node_modules$three$build$three_module(new Float32Array(16*c),16);this.instanceColor=null;this.count=c;this.frustumCulled=!1}
InstancedMesh$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Mesh$$module$node_modules$three$build$three_module.prototype),{constructor:InstancedMesh$$module$node_modules$three$build$three_module,isInstancedMesh:!0,copy:function(a){Mesh$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.instanceMatrix.copy(a.instanceMatrix);this.count=a.count;return this},setColorAt:function(a,b){null===this.instanceColor&&(this.instanceColor=new BufferAttribute$$module$node_modules$three$build$three_module(new Float32Array(3*
this.count),3));b.toArray(this.instanceColor.array,3*a)},getMatrixAt:function(a,b){b.fromArray(this.instanceMatrix.array,16*a)},raycast:function(a,b){const c=this.matrixWorld,d=this.count;_mesh$$module$node_modules$three$build$three_module.geometry=this.geometry;_mesh$$module$node_modules$three$build$three_module.material=this.material;if(void 0!==_mesh$$module$node_modules$three$build$three_module.material)for(let e=0;e<d;e++){this.getMatrixAt(e,_instanceLocalMatrix$$module$node_modules$three$build$three_module);
_instanceWorldMatrix$$module$node_modules$three$build$three_module.multiplyMatrices(c,_instanceLocalMatrix$$module$node_modules$three$build$three_module);_mesh$$module$node_modules$three$build$three_module.matrixWorld=_instanceWorldMatrix$$module$node_modules$three$build$three_module;_mesh$$module$node_modules$three$build$three_module.raycast(a,_instanceIntersects$$module$node_modules$three$build$three_module);for(let f=0,h=_instanceIntersects$$module$node_modules$three$build$three_module.length;f<
h;f++){const g=_instanceIntersects$$module$node_modules$three$build$three_module[f];g.instanceId=e;g.object=this;b.push(g)}_instanceIntersects$$module$node_modules$three$build$three_module.length=0}},setMatrixAt:function(a,b){b.toArray(this.instanceMatrix.array,16*a)},updateMorphTargets:function(){}});
function LineBasicMaterial$$module$node_modules$three$build$three_module(a){Material$$module$node_modules$three$build$three_module.call(this);this.type="LineBasicMaterial";this.color=new Color$$module$node_modules$three$build$three_module(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.morphTargets=!1;this.setValues(a)}LineBasicMaterial$$module$node_modules$three$build$three_module.prototype=Object.create(Material$$module$node_modules$three$build$three_module.prototype);
LineBasicMaterial$$module$node_modules$three$build$three_module.prototype.constructor=LineBasicMaterial$$module$node_modules$three$build$three_module;LineBasicMaterial$$module$node_modules$three$build$three_module.prototype.isLineBasicMaterial=!0;
LineBasicMaterial$$module$node_modules$three$build$three_module.prototype.copy=function(a){Material$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.color.copy(a.color);this.linewidth=a.linewidth;this.linecap=a.linecap;this.linejoin=a.linejoin;this.morphTargets=a.morphTargets;return this};
const _start$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_end$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_inverseMatrix$1$$module$node_modules$three$build$three_module=new Matrix4$$module$node_modules$three$build$three_module,_ray$1$$module$node_modules$three$build$three_module=new Ray$$module$node_modules$three$build$three_module,_sphere$2$$module$node_modules$three$build$three_module=
new Sphere$$module$node_modules$three$build$three_module;
function Line$$module$node_modules$three$build$three_module(a,b,c){1===c&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.");Object3D$$module$node_modules$three$build$three_module.call(this);this.type="Line";this.geometry=void 0!==a?a:new BufferGeometry$$module$node_modules$three$build$three_module;this.material=void 0!==b?b:new LineBasicMaterial$$module$node_modules$three$build$three_module;this.updateMorphTargets()}
Line$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Object3D$$module$node_modules$three$build$three_module.prototype),{constructor:Line$$module$node_modules$three$build$three_module,isLine:!0,copy:function(a){Object3D$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.material=a.material;this.geometry=a.geometry;return this},computeLineDistances:function(){var a=this.geometry;if(a.isBufferGeometry)if(null===a.index){var b=a.attributes.position;
const c=[0];for(let d=1,e=b.count;d<e;d++)_start$$module$node_modules$three$build$three_module.fromBufferAttribute(b,d-1),_end$$module$node_modules$three$build$three_module.fromBufferAttribute(b,d),c[d]=c[d-1],c[d]+=_start$$module$node_modules$three$build$three_module.distanceTo(_end$$module$node_modules$three$build$three_module);a.setAttribute("lineDistance",new Float32BufferAttribute$$module$node_modules$three$build$three_module(c,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
else if(a.isGeometry){b=a.vertices;a=a.lineDistances;a[0]=0;for(let c=1,d=b.length;c<d;c++)a[c]=a[c-1],a[c]+=b[c-1].distanceTo(b[c])}return this},raycast:function(a,b){var c=this.geometry,d=this.matrixWorld,e=a.params.Line.threshold;null===c.boundingSphere&&c.computeBoundingSphere();_sphere$2$$module$node_modules$three$build$three_module.copy(c.boundingSphere);_sphere$2$$module$node_modules$three$build$three_module.applyMatrix4(d);_sphere$2$$module$node_modules$three$build$three_module.radius+=e;
if(!1!==a.ray.intersectsSphere(_sphere$2$$module$node_modules$three$build$three_module)){_inverseMatrix$1$$module$node_modules$three$build$three_module.getInverse(d);_ray$1$$module$node_modules$three$build$three_module.copy(a.ray).applyMatrix4(_inverseMatrix$1$$module$node_modules$three$build$three_module);d=e/((this.scale.x+this.scale.y+this.scale.z)/3);d*=d;var f=new Vector3$$module$node_modules$three$build$three_module,h=new Vector3$$module$node_modules$three$build$three_module;e=new Vector3$$module$node_modules$three$build$three_module;
var g=new Vector3$$module$node_modules$three$build$three_module,k=this&&this.isLineSegments?2:1;if(c.isBufferGeometry){var n=c.index;c=c.attributes.position.array;if(null!==n){n=n.array;for(let v=0,x=n.length-1;v<x;v+=k){var w=n[v+1];f.fromArray(c,3*n[v]);h.fromArray(c,3*w);_ray$1$$module$node_modules$three$build$three_module.distanceSqToSegment(f,h,g,e)>d||(g.applyMatrix4(this.matrixWorld),w=a.ray.origin.distanceTo(g),w<a.near||w>a.far||b.push({distance:w,point:e.clone().applyMatrix4(this.matrixWorld),
index:v,face:null,faceIndex:null,object:this}))}}else for(let v=0,x=c.length/3-1;v<x;v+=k)f.fromArray(c,3*v),h.fromArray(c,3*v+3),_ray$1$$module$node_modules$three$build$three_module.distanceSqToSegment(f,h,g,e)>d||(g.applyMatrix4(this.matrixWorld),n=a.ray.origin.distanceTo(g),n<a.near||n>a.far||b.push({distance:n,point:e.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this}))}else if(c.isGeometry)for(f=c.vertices,h=f.length,c=0;c<h-1;c+=k)_ray$1$$module$node_modules$three$build$three_module.distanceSqToSegment(f[c],
f[c+1],g,e)>d||(g.applyMatrix4(this.matrixWorld),n=a.ray.origin.distanceTo(g),n<a.near||n>a.far||b.push({distance:n,point:e.clone().applyMatrix4(this.matrixWorld),index:c,face:null,faceIndex:null,object:this}))}},updateMorphTargets:function(){var a=this.geometry;if(a.isBufferGeometry){a=a.morphAttributes;var b=Object.keys(a);if(0<b.length&&(a=a[b[0]],void 0!==a)){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let c=0,d=a.length;c<d;c++)b=a[c].name||String(c),this.morphTargetInfluences.push(0),
this.morphTargetDictionary[b]=c}}else a=a.morphTargets,void 0!==a&&0<a.length&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}});const _start$1$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_end$1$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module;
function LineSegments$$module$node_modules$three$build$three_module(a,b){Line$$module$node_modules$three$build$three_module.call(this,a,b);this.type="LineSegments"}
LineSegments$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Line$$module$node_modules$three$build$three_module.prototype),{constructor:LineSegments$$module$node_modules$three$build$three_module,isLineSegments:!0,computeLineDistances:function(){var a=this.geometry;if(a.isBufferGeometry)if(null===a.index){var b=a.attributes.position;const c=[];for(let d=0,e=b.count;d<e;d+=2)_start$1$$module$node_modules$three$build$three_module.fromBufferAttribute(b,d),_end$1$$module$node_modules$three$build$three_module.fromBufferAttribute(b,
d+1),c[d]=0===d?0:c[d-1],c[d+1]=c[d]+_start$1$$module$node_modules$three$build$three_module.distanceTo(_end$1$$module$node_modules$three$build$three_module);a.setAttribute("lineDistance",new Float32BufferAttribute$$module$node_modules$three$build$three_module(c,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(a.isGeometry){b=a.vertices;a=a.lineDistances;for(let c=0,d=b.length;c<d;c+=2)_start$1$$module$node_modules$three$build$three_module.copy(b[c]),
_end$1$$module$node_modules$three$build$three_module.copy(b[c+1]),a[c]=0===c?0:a[c-1],a[c+1]=a[c]+_start$1$$module$node_modules$three$build$three_module.distanceTo(_end$1$$module$node_modules$three$build$three_module)}return this}});function LineLoop$$module$node_modules$three$build$three_module(a,b){Line$$module$node_modules$three$build$three_module.call(this,a,b);this.type="LineLoop"}
LineLoop$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Line$$module$node_modules$three$build$three_module.prototype),{constructor:LineLoop$$module$node_modules$three$build$three_module,isLineLoop:!0});
function PointsMaterial$$module$node_modules$three$build$three_module(a){Material$$module$node_modules$three$build$three_module.call(this);this.type="PointsMaterial";this.color=new Color$$module$node_modules$three$build$three_module(16777215);this.alphaMap=this.map=null;this.size=1;this.sizeAttenuation=!0;this.morphTargets=!1;this.setValues(a)}PointsMaterial$$module$node_modules$three$build$three_module.prototype=Object.create(Material$$module$node_modules$three$build$three_module.prototype);
PointsMaterial$$module$node_modules$three$build$three_module.prototype.constructor=PointsMaterial$$module$node_modules$three$build$three_module;PointsMaterial$$module$node_modules$three$build$three_module.prototype.isPointsMaterial=!0;
PointsMaterial$$module$node_modules$three$build$three_module.prototype.copy=function(a){Material$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.alphaMap=a.alphaMap;this.size=a.size;this.sizeAttenuation=a.sizeAttenuation;this.morphTargets=a.morphTargets;return this};
const _inverseMatrix$2$$module$node_modules$three$build$three_module=new Matrix4$$module$node_modules$three$build$three_module,_ray$2$$module$node_modules$three$build$three_module=new Ray$$module$node_modules$three$build$three_module,_sphere$3$$module$node_modules$three$build$three_module=new Sphere$$module$node_modules$three$build$three_module,_position$1$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module;
function Points$$module$node_modules$three$build$three_module(a,b){Object3D$$module$node_modules$three$build$three_module.call(this);this.type="Points";this.geometry=void 0!==a?a:new BufferGeometry$$module$node_modules$three$build$three_module;this.material=void 0!==b?b:new PointsMaterial$$module$node_modules$three$build$three_module;this.updateMorphTargets()}
Points$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Object3D$$module$node_modules$three$build$three_module.prototype),{constructor:Points$$module$node_modules$three$build$three_module,isPoints:!0,copy:function(a){Object3D$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.material=a.material;this.geometry=a.geometry;return this},raycast:function(a,b){var c=this.geometry;const d=this.matrixWorld;var e=a.params.Points.threshold;null===
c.boundingSphere&&c.computeBoundingSphere();_sphere$3$$module$node_modules$three$build$three_module.copy(c.boundingSphere);_sphere$3$$module$node_modules$three$build$three_module.applyMatrix4(d);_sphere$3$$module$node_modules$three$build$three_module.radius+=e;if(!1!==a.ray.intersectsSphere(_sphere$3$$module$node_modules$three$build$three_module))if(_inverseMatrix$2$$module$node_modules$three$build$three_module.getInverse(d),_ray$2$$module$node_modules$three$build$three_module.copy(a.ray).applyMatrix4(_inverseMatrix$2$$module$node_modules$three$build$three_module),
e/=(this.scale.x+this.scale.y+this.scale.z)/3,e*=e,c.isBufferGeometry){var f=c.index;c=c.attributes.position.array;if(null!==f){f=f.array;for(let h=0,g=f.length;h<g;h++){const k=f[h];_position$1$$module$node_modules$three$build$three_module.fromArray(c,3*k);testPoint$$module$node_modules$three$build$three_module(_position$1$$module$node_modules$three$build$three_module,k,e,d,a,b,this)}}else for(let h=0,g=c.length/3;h<g;h++)_position$1$$module$node_modules$three$build$three_module.fromArray(c,3*h),
testPoint$$module$node_modules$three$build$three_module(_position$1$$module$node_modules$three$build$three_module,h,e,d,a,b,this)}else{c=c.vertices;for(let h=0,g=c.length;h<g;h++)testPoint$$module$node_modules$three$build$three_module(c[h],h,e,d,a,b,this)}},updateMorphTargets:function(){var a=this.geometry;if(a.isBufferGeometry){a=a.morphAttributes;var b=Object.keys(a);if(0<b.length&&(a=a[b[0]],void 0!==a)){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let c=0,d=a.length;c<d;c++)b=
a[c].name||String(c),this.morphTargetInfluences.push(0),this.morphTargetDictionary[b]=c}}else a=a.morphTargets,void 0!==a&&0<a.length&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}});
function testPoint$$module$node_modules$three$build$three_module(a,b,c,d,e,f,h){const g=_ray$2$$module$node_modules$three$build$three_module.distanceSqToPoint(a);g<c&&(c=new Vector3$$module$node_modules$three$build$three_module,_ray$2$$module$node_modules$three$build$three_module.closestPointToPoint(a,c),c.applyMatrix4(d),a=e.ray.origin.distanceTo(c),a<e.near||a>e.far||f.push({distance:a,distanceToRay:Math.sqrt(g),point:c,index:b,face:null,object:h}))}
function VideoTexture$$module$node_modules$three$build$three_module(a,b,c,d,e,f,h,g,k){function n(){w.needsUpdate=!0;a.requestVideoFrameCallback(n)}Texture$$module$node_modules$three$build$three_module.call(this,a,b,c,d,e,f,h,g,k);this.format=void 0!==h?h:RGBFormat$$module$node_modules$three$build$three_module;this.minFilter=void 0!==f?f:LinearFilter$$module$node_modules$three$build$three_module;this.magFilter=void 0!==e?e:LinearFilter$$module$node_modules$three$build$three_module;this.generateMipmaps=
!1;const w=this;"requestVideoFrameCallback"in a&&a.requestVideoFrameCallback(n)}VideoTexture$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Texture$$module$node_modules$three$build$three_module.prototype),{constructor:VideoTexture$$module$node_modules$three$build$three_module,isVideoTexture:!0,update:function(){const a=this.image;!1==="requestVideoFrameCallback"in a&&a.readyState>=a.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}});
function CompressedTexture$$module$node_modules$three$build$three_module(a,b,c,d,e,f,h,g,k,n,w,v){Texture$$module$node_modules$three$build$three_module.call(this,null,f,h,g,k,n,d,e,w,v);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=this.flipY=!1}CompressedTexture$$module$node_modules$three$build$three_module.prototype=Object.create(Texture$$module$node_modules$three$build$three_module.prototype);
CompressedTexture$$module$node_modules$three$build$three_module.prototype.constructor=CompressedTexture$$module$node_modules$three$build$three_module;CompressedTexture$$module$node_modules$three$build$three_module.prototype.isCompressedTexture=!0;function CanvasTexture$$module$node_modules$three$build$three_module(a,b,c,d,e,f,h,g,k){Texture$$module$node_modules$three$build$three_module.call(this,a,b,c,d,e,f,h,g,k);this.needsUpdate=!0}
CanvasTexture$$module$node_modules$three$build$three_module.prototype=Object.create(Texture$$module$node_modules$three$build$three_module.prototype);CanvasTexture$$module$node_modules$three$build$three_module.prototype.constructor=CanvasTexture$$module$node_modules$three$build$three_module;CanvasTexture$$module$node_modules$three$build$three_module.prototype.isCanvasTexture=!0;
function DepthTexture$$module$node_modules$three$build$three_module(a,b,c,d,e,f,h,g,k,n){n=void 0!==n?n:DepthFormat$$module$node_modules$three$build$three_module;if(n!==DepthFormat$$module$node_modules$three$build$three_module&&n!==DepthStencilFormat$$module$node_modules$three$build$three_module)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===c&&n===DepthFormat$$module$node_modules$three$build$three_module&&(c=UnsignedShortType$$module$node_modules$three$build$three_module);
void 0===c&&n===DepthStencilFormat$$module$node_modules$three$build$three_module&&(c=UnsignedInt248Type$$module$node_modules$three$build$three_module);Texture$$module$node_modules$three$build$three_module.call(this,null,d,e,f,h,g,n,c,k);this.image={width:a,height:b};this.magFilter=void 0!==h?h:NearestFilter$$module$node_modules$three$build$three_module;this.minFilter=void 0!==g?g:NearestFilter$$module$node_modules$three$build$three_module;this.generateMipmaps=this.flipY=!1}
DepthTexture$$module$node_modules$three$build$three_module.prototype=Object.create(Texture$$module$node_modules$three$build$three_module.prototype);DepthTexture$$module$node_modules$three$build$three_module.prototype.constructor=DepthTexture$$module$node_modules$three$build$three_module;DepthTexture$$module$node_modules$three$build$three_module.prototype.isDepthTexture=!0;
class WireframeGeometry$$module$node_modules$three$build$three_module extends BufferGeometry$$module$node_modules$three$build$three_module{constructor(a){super();this.type="WireframeGeometry";const b=[];var c=[0,0],d={},e=["a","b","c"];if(a&&a.isGeometry){var f=a.faces;for(let v=0,x=f.length;v<x;v++){var h=f[v];for(var g=0;3>g;g++){var k=h[e[g]],n=h[e[(g+1)%3]];c[0]=Math.min(k,n);c[1]=Math.max(k,n);k=c[0]+","+c[1];void 0===d[k]&&(d[k]={index1:c[0],index2:c[1]})}}for(var w in d)c=d[w],f=a.vertices[c.index1],
b.push(f.x,f.y,f.z),f=a.vertices[c.index2],b.push(f.x,f.y,f.z)}else if(a&&a.isBufferGeometry)if(w=new Vector3$$module$node_modules$three$build$three_module,null!==a.index){e=a.attributes.position;h=a.index;a=a.groups;0===a.length&&(a=[{start:0,count:h.count,materialIndex:0}]);for(let v=0,x=a.length;v<x;++v){k=a[v];g=k.start;k=k.count;for(let z=g,F=g+k;z<F;z+=3)for(g=0;3>g;g++)k=h.getX(z+g),n=h.getX(z+(g+1)%3),c[0]=Math.min(k,n),c[1]=Math.max(k,n),k=c[0]+","+c[1],void 0===d[k]&&(d[k]={index1:c[0],
index2:c[1]})}for(f in d)c=d[f],w.fromBufferAttribute(e,c.index1),b.push(w.x,w.y,w.z),w.fromBufferAttribute(e,c.index2),b.push(w.x,w.y,w.z)}else{d=a.attributes.position;for(let v=0,x=d.count/3;v<x;v++)for(c=0;3>c;c++)w.fromBufferAttribute(d,3*v+c),b.push(w.x,w.y,w.z),w.fromBufferAttribute(d,3*v+(c+1)%3),b.push(w.x,w.y,w.z)}this.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(b,3))}}
function ParametricGeometry$$module$node_modules$three$build$three_module(a,b,c){Geometry$$module$node_modules$three$build$three_module.call(this);this.type="ParametricGeometry";this.parameters={func:a,slices:b,stacks:c};this.fromBufferGeometry(new ParametricBufferGeometry$$module$node_modules$three$build$three_module(a,b,c));this.mergeVertices()}ParametricGeometry$$module$node_modules$three$build$three_module.prototype=Object.create(Geometry$$module$node_modules$three$build$three_module.prototype);
ParametricGeometry$$module$node_modules$three$build$three_module.prototype.constructor=ParametricGeometry$$module$node_modules$three$build$three_module;
function ParametricBufferGeometry$$module$node_modules$three$build$three_module(a,b,c){BufferGeometry$$module$node_modules$three$build$three_module.call(this);this.type="ParametricBufferGeometry";this.parameters={func:a,slices:b,stacks:c};const d=[],e=[],f=[],h=[];var g=new Vector3$$module$node_modules$three$build$three_module,k=new Vector3$$module$node_modules$three$build$three_module,n=new Vector3$$module$node_modules$three$build$three_module,w=new Vector3$$module$node_modules$three$build$three_module;
const v=new Vector3$$module$node_modules$three$build$three_module;3>a.length&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const x=b+1;for(let z=0;z<=c;z++){const F=z/c;for(let N=0;N<=b;N++){const p=N/b;a(p,F,k);e.push(k.x,k.y,k.z);0<=p-1E-5?(a(p-1E-5,F,n),w.subVectors(k,n)):(a(p+1E-5,F,n),w.subVectors(n,k));0<=F-1E-5?(a(p,F-1E-5,n),v.subVectors(k,n)):(a(p,F+1E-5,n),v.subVectors(n,k));g.crossVectors(w,v).normalize();f.push(g.x,g.y,g.z);h.push(p,
F)}}for(a=0;a<c;a++)for(g=0;g<b;g++)k=a*x+g+1,n=(a+1)*x+g+1,w=(a+1)*x+g,d.push(a*x+g,k,w),d.push(k,n,w);this.setIndex(d);this.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(e,3));this.setAttribute("normal",new Float32BufferAttribute$$module$node_modules$three$build$three_module(f,3));this.setAttribute("uv",new Float32BufferAttribute$$module$node_modules$three$build$three_module(h,2))}
ParametricBufferGeometry$$module$node_modules$three$build$three_module.prototype=Object.create(BufferGeometry$$module$node_modules$three$build$three_module.prototype);ParametricBufferGeometry$$module$node_modules$three$build$three_module.prototype.constructor=ParametricBufferGeometry$$module$node_modules$three$build$three_module;
class PolyhedronGeometry$$module$node_modules$three$build$three_module extends Geometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d){super();this.type="PolyhedronGeometry";this.parameters={vertices:a,indices:b,radius:c,detail:d};this.fromBufferGeometry(new PolyhedronBufferGeometry$$module$node_modules$three$build$three_module(a,b,c,d));this.mergeVertices()}}
class PolyhedronBufferGeometry$$module$node_modules$three$build$three_module extends BufferGeometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d){function e(n){g.push(n.x,n.y,n.z)}function f(n,w){n*=3;w.x=a[n+0];w.y=a[n+1];w.z=a[n+2]}function h(n,w,v,x){0>x&&1===n.x&&(k[w]=n.x-1);0===v.x&&0===v.z&&(k[w]=x/2/Math.PI+.5)}super();this.type="PolyhedronBufferGeometry";this.parameters={vertices:a,indices:b,radius:c,detail:d};c=c||1;d=d||0;const g=[],k=[];(function(n){const w=new Vector3$$module$node_modules$three$build$three_module,
v=new Vector3$$module$node_modules$three$build$three_module,x=new Vector3$$module$node_modules$three$build$three_module;for(let p=0;p<b.length;p+=3){f(b[p+0],w);f(b[p+1],v);f(b[p+2],x);{var z=w,F=v,N=x;const A=Math.pow(2,n),G=[];for(let O=0;O<=A;O++){G[O]=[];const P=z.clone().lerp(N,O/A),S=F.clone().lerp(N,O/A),T=A-O;for(let W=0;W<=T;W++)G[O][W]=0===W&&O===A?P:P.clone().lerp(S,W/T)}for(z=0;z<A;z++)for(F=0;F<2*(A-z)-1;F++)N=Math.floor(F/2),0===F%2?(e(G[z][N+1]),e(G[z+1][N]),e(G[z][N])):(e(G[z][N+1]),
e(G[z+1][N+1]),e(G[z+1][N]))}}})(d);(function(n){const w=new Vector3$$module$node_modules$three$build$three_module;for(let v=0;v<g.length;v+=3)w.x=g[v+0],w.y=g[v+1],w.z=g[v+2],w.normalize().multiplyScalar(n),g[v+0]=w.x,g[v+1]=w.y,g[v+2]=w.z})(c);(function(){var n=new Vector3$$module$node_modules$three$build$three_module;for(var w=0;w<g.length;w+=3)n.x=g[w+0],n.y=g[w+1],n.z=g[w+2],k.push(Math.atan2(n.z,-n.x)/2/Math.PI+.5,1-(Math.atan2(-n.y,Math.sqrt(n.x*n.x+n.z*n.z))/Math.PI+.5));{n=new Vector3$$module$node_modules$three$build$three_module;
w=new Vector3$$module$node_modules$three$build$three_module;var v=new Vector3$$module$node_modules$three$build$three_module,x=new Vector3$$module$node_modules$three$build$three_module,z=new Vector2$$module$node_modules$three$build$three_module;const F=new Vector2$$module$node_modules$three$build$three_module,N=new Vector2$$module$node_modules$three$build$three_module;for(let p=0,A=0;p<g.length;p+=9,A+=6){n.set(g[p+0],g[p+1],g[p+2]);w.set(g[p+3],g[p+4],g[p+5]);v.set(g[p+6],g[p+7],g[p+8]);z.set(k[A+
0],k[A+1]);F.set(k[A+2],k[A+3]);N.set(k[A+4],k[A+5]);x.copy(n).add(w).add(v).divideScalar(3);const G=Math.atan2(x.z,-x.x);h(z,A+0,n,G);h(F,A+2,w,G);h(N,A+4,v,G)}}for(n=0;n<k.length;n+=6)w=k[n+0],v=k[n+2],x=k[n+4],z=Math.min(w,v,x),.9<Math.max(w,v,x)&&.1>z&&(.2>w&&(k[n+0]+=1),.2>v&&(k[n+2]+=1),.2>x&&(k[n+4]+=1))})();this.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(g,3));this.setAttribute("normal",new Float32BufferAttribute$$module$node_modules$three$build$three_module(g.slice(),
3));this.setAttribute("uv",new Float32BufferAttribute$$module$node_modules$three$build$three_module(k,2));0===d?this.computeVertexNormals():this.normalizeNormals()}}
class TetrahedronGeometry$$module$node_modules$three$build$three_module extends Geometry$$module$node_modules$three$build$three_module{constructor(a,b){super();this.type="TetrahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new TetrahedronBufferGeometry$$module$node_modules$three$build$three_module(a,b));this.mergeVertices()}}
class TetrahedronBufferGeometry$$module$node_modules$three$build$three_module extends PolyhedronBufferGeometry$$module$node_modules$three$build$three_module{constructor(a,b){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b);this.type="TetrahedronBufferGeometry";this.parameters={radius:a,detail:b}}}
class OctahedronGeometry$$module$node_modules$three$build$three_module extends Geometry$$module$node_modules$three$build$three_module{constructor(a,b){super();this.type="OctahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new OctahedronBufferGeometry$$module$node_modules$three$build$three_module(a,b));this.mergeVertices()}}
class OctahedronBufferGeometry$$module$node_modules$three$build$three_module extends PolyhedronBufferGeometry$$module$node_modules$three$build$three_module{constructor(a,b){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b);this.type="OctahedronBufferGeometry";this.parameters={radius:a,detail:b}}}
class IcosahedronGeometry$$module$node_modules$three$build$three_module extends Geometry$$module$node_modules$three$build$three_module{constructor(a,b){super();this.type="IcosahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new IcosahedronBufferGeometry$$module$node_modules$three$build$three_module(a,b));this.mergeVertices()}}
class IcosahedronBufferGeometry$$module$node_modules$three$build$three_module extends PolyhedronBufferGeometry$$module$node_modules$three$build$three_module{constructor(a,b){const c=(1+Math.sqrt(5))/2;super([-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b);this.type="IcosahedronBufferGeometry";this.parameters={radius:a,detail:b}}}
class DodecahedronGeometry$$module$node_modules$three$build$three_module extends Geometry$$module$node_modules$three$build$three_module{constructor(a,b){super();this.type="DodecahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new DodecahedronBufferGeometry$$module$node_modules$three$build$three_module(a,b));this.mergeVertices()}}
class DodecahedronBufferGeometry$$module$node_modules$three$build$three_module extends PolyhedronBufferGeometry$$module$node_modules$three$build$three_module{constructor(a,b){const c=(1+Math.sqrt(5))/2,d=1/c;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,d,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,0,-c,0,-d,c,0,-d,-c,0,d,c,0,d],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,
2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],a,b);this.type="DodecahedronBufferGeometry";this.parameters={radius:a,detail:b}}}
class TubeGeometry$$module$node_modules$three$build$three_module extends Geometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d,e,f){super();this.type="TubeGeometry";this.parameters={path:a,tubularSegments:b,radius:c,radialSegments:d,closed:e};void 0!==f&&console.warn("THREE.TubeGeometry: taper has been removed.");a=new TubeBufferGeometry$$module$node_modules$three$build$three_module(a,b,c,d,e);this.tangents=a.tangents;this.normals=a.normals;this.binormals=a.binormals;this.fromBufferGeometry(a);
this.mergeVertices()}}
class TubeBufferGeometry$$module$node_modules$three$build$three_module extends BufferGeometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d,e){function f(N){w=a.getPointAt(N/b,w);const p=h.normals[N];N=h.binormals[N];for(let G=0;G<=d;G++){var A=G/d*Math.PI*2;const O=Math.sin(A);A=-Math.cos(A);k.x=A*p.x+O*N.x;k.y=A*p.y+O*N.y;k.z=A*p.z+O*N.z;k.normalize();x.push(k.x,k.y,k.z);g.x=w.x+c*k.x;g.y=w.y+c*k.y;g.z=w.z+c*k.z;v.push(g.x,g.y,g.z)}}super();this.type="TubeBufferGeometry";this.parameters=
{path:a,tubularSegments:b,radius:c,radialSegments:d,closed:e};b=b||64;c=c||1;d=d||8;e=e||!1;const h=a.computeFrenetFrames(b,e);this.tangents=h.tangents;this.normals=h.normals;this.binormals=h.binormals;const g=new Vector3$$module$node_modules$three$build$three_module,k=new Vector3$$module$node_modules$three$build$three_module,n=new Vector2$$module$node_modules$three$build$three_module;let w=new Vector3$$module$node_modules$three$build$three_module;const v=[],x=[],z=[],F=[];(function(){for(var N=0;N<
b;N++)f(N);f(!1===e?b:0);for(N=0;N<=b;N++)for(var p=0;p<=d;p++)n.x=N/b,n.y=p/d,z.push(n.x,n.y);for(N=1;N<=b;N++)for(p=1;p<=d;p++){const A=(d+1)*N+(p-1),G=(d+1)*N+p,O=(d+1)*(N-1)+p;F.push((d+1)*(N-1)+(p-1),A,O);F.push(A,G,O)}})();this.setIndex(F);this.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(v,3));this.setAttribute("normal",new Float32BufferAttribute$$module$node_modules$three$build$three_module(x,3));this.setAttribute("uv",new Float32BufferAttribute$$module$node_modules$three$build$three_module(z,
2))}toJSON(){const a=BufferGeometry$$module$node_modules$three$build$three_module.prototype.toJSON.call(this);a.path=this.parameters.path.toJSON();return a}}
class TorusKnotGeometry$$module$node_modules$three$build$three_module extends Geometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d,e,f,h){super();this.type="TorusKnotGeometry";this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};void 0!==h&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.");this.fromBufferGeometry(new TorusKnotBufferGeometry$$module$node_modules$three$build$three_module(a,b,c,d,e,f));
this.mergeVertices()}}
class TorusKnotBufferGeometry$$module$node_modules$three$build$three_module extends BufferGeometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d,e,f){function h(P,S,T,W,X){const U=Math.sin(P);S=T/S*P;T=Math.cos(S);X.x=W*(2+T)*.5*Math.cos(P);X.y=W*(2+T)*U*.5;X.z=W*Math.sin(S)*.5}super();this.type="TorusKnotBufferGeometry";this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};a=a||1;b=b||.4;c=Math.floor(c)||64;d=Math.floor(d)||8;e=e||2;f=f||3;const g=[],k=
[],n=[],w=[];var v=new Vector3$$module$node_modules$three$build$three_module;const x=new Vector3$$module$node_modules$three$build$three_module,z=new Vector3$$module$node_modules$three$build$three_module,F=new Vector3$$module$node_modules$three$build$three_module,N=new Vector3$$module$node_modules$three$build$three_module,p=new Vector3$$module$node_modules$three$build$three_module,A=new Vector3$$module$node_modules$three$build$three_module;for(let P=0;P<=c;++P){var G=P/c*e*Math.PI*2;h(G,e,f,a,z);h(G+
.01,e,f,a,F);p.subVectors(F,z);A.addVectors(F,z);N.crossVectors(p,A);A.crossVectors(N,p);N.normalize();A.normalize();for(G=0;G<=d;++G){var O=G/d*Math.PI*2;const S=-b*Math.cos(O);O=b*Math.sin(O);v.x=z.x+(S*A.x+O*N.x);v.y=z.y+(S*A.y+O*N.y);v.z=z.z+(S*A.z+O*N.z);k.push(v.x,v.y,v.z);x.subVectors(v,z).normalize();n.push(x.x,x.y,x.z);w.push(P/c);w.push(G/d)}}for(a=1;a<=c;a++)for(b=1;b<=d;b++)e=(d+1)*a+(b-1),f=(d+1)*a+b,v=(d+1)*(a-1)+b,g.push((d+1)*(a-1)+(b-1),e,v),g.push(e,f,v);this.setIndex(g);this.setAttribute("position",
new Float32BufferAttribute$$module$node_modules$three$build$three_module(k,3));this.setAttribute("normal",new Float32BufferAttribute$$module$node_modules$three$build$three_module(n,3));this.setAttribute("uv",new Float32BufferAttribute$$module$node_modules$three$build$three_module(w,2))}}
class TorusGeometry$$module$node_modules$three$build$three_module extends Geometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d,e){super();this.type="TorusGeometry";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};this.fromBufferGeometry(new TorusBufferGeometry$$module$node_modules$three$build$three_module(a,b,c,d,e));this.mergeVertices()}}
class TorusBufferGeometry$$module$node_modules$three$build$three_module extends BufferGeometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d,e){super();this.type="TorusBufferGeometry";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};a=a||1;b=b||.4;c=Math.floor(c)||8;d=Math.floor(d)||6;e=e||2*Math.PI;const f=[],h=[],g=[],k=[];var n=new Vector3$$module$node_modules$three$build$three_module,w=new Vector3$$module$node_modules$three$build$three_module;const v=
new Vector3$$module$node_modules$three$build$three_module;for(let x=0;x<=c;x++)for(let z=0;z<=d;z++){const F=z/d*e,N=x/c*Math.PI*2;w.x=(a+b*Math.cos(N))*Math.cos(F);w.y=(a+b*Math.cos(N))*Math.sin(F);w.z=b*Math.sin(N);h.push(w.x,w.y,w.z);n.x=a*Math.cos(F);n.y=a*Math.sin(F);v.subVectors(w,n).normalize();g.push(v.x,v.y,v.z);k.push(z/d);k.push(x/c)}for(a=1;a<=c;a++)for(b=1;b<=d;b++)e=(d+1)*(a-1)+b-1,n=(d+1)*(a-1)+b,w=(d+1)*a+b,f.push((d+1)*a+b-1,e,w),f.push(e,n,w);this.setIndex(f);this.setAttribute("position",
new Float32BufferAttribute$$module$node_modules$three$build$three_module(h,3));this.setAttribute("normal",new Float32BufferAttribute$$module$node_modules$three$build$three_module(g,3));this.setAttribute("uv",new Float32BufferAttribute$$module$node_modules$three$build$three_module(k,2))}}
const Earcut$$module$node_modules$three$build$three_module={triangulate:function(a,b,c){c=c||2;var d=b&&b.length;const e=d?b[0]*c:a.length;let f=linkedList$$module$node_modules$three$build$three_module(a,0,e,c,!0);const h=[];if(!f||f.next===f.prev)return h;let g,k;let n;d&&(f=eliminateHoles$$module$node_modules$three$build$three_module(a,b,f,c));if(a.length>80*c){g=b=a[0];k=d=a[1];for(let v=c;v<e;v+=c){var w=a[v];n=a[v+1];w<g&&(g=w);n<k&&(k=n);w>b&&(b=w);n>d&&(d=n)}w=Math.max(b-g,d-k);w=0!==w?1/w:
0}earcutLinked$$module$node_modules$three$build$three_module(f,h,c,g,k,w);return h}};
function linkedList$$module$node_modules$three$build$three_module(a,b,c,d,e){let f;if(e===0<signedArea$$module$node_modules$three$build$three_module(a,b,c,d))for(e=b;e<c;e+=d)f=insertNode$$module$node_modules$three$build$three_module(e,a[e],a[e+1],f);else for(e=c-d;e>=b;e-=d)f=insertNode$$module$node_modules$three$build$three_module(e,a[e],a[e+1],f);f&&equals$$module$node_modules$three$build$three_module(f,f.next)&&(removeNode$$module$node_modules$three$build$three_module(f),f=f.next);return f}
function filterPoints$$module$node_modules$three$build$three_module(a,b){if(!a)return a;b||(b=a);let c;do if(c=!1,a.steiner||!equals$$module$node_modules$three$build$three_module(a,a.next)&&0!==area$$module$node_modules$three$build$three_module(a.prev,a,a.next))a=a.next;else{removeNode$$module$node_modules$three$build$three_module(a);a=b=a.prev;if(a===a.next)break;c=!0}while(c||a!==b);return b}
function earcutLinked$$module$node_modules$three$build$three_module(a,b,c,d,e,f,h){if(a){!h&&f&&indexCurve$$module$node_modules$three$build$three_module(a,d,e,f);for(var g=a,k,n;a.prev!==a.next;)if(k=a.prev,n=a.next,f?isEarHashed$$module$node_modules$three$build$three_module(a,d,e,f):isEar$$module$node_modules$three$build$three_module(a))b.push(k.i/c),b.push(a.i/c),b.push(n.i/c),removeNode$$module$node_modules$three$build$three_module(a),g=a=n.next;else if(a=n,a===g){h?1===h?(a=cureLocalIntersections$$module$node_modules$three$build$three_module(filterPoints$$module$node_modules$three$build$three_module(a),
b,c),earcutLinked$$module$node_modules$three$build$three_module(a,b,c,d,e,f,2)):2===h&&splitEarcut$$module$node_modules$three$build$three_module(a,b,c,d,e,f):earcutLinked$$module$node_modules$three$build$three_module(filterPoints$$module$node_modules$three$build$three_module(a),b,c,d,e,f,1);break}}}
function isEar$$module$node_modules$three$build$three_module(a){const b=a.prev,c=a.next;if(0<=area$$module$node_modules$three$build$three_module(b,a,c))return!1;let d=a.next.next;for(;d!==a.prev;){if(pointInTriangle$$module$node_modules$three$build$three_module(b.x,b.y,a.x,a.y,c.x,c.y,d.x,d.y)&&0<=area$$module$node_modules$three$build$three_module(d.prev,d,d.next))return!1;d=d.next}return!0}
function isEarHashed$$module$node_modules$three$build$three_module(a,b,c,d){const e=a.prev,f=a.next;if(0<=area$$module$node_modules$three$build$three_module(e,a,f))return!1;const h=e.x>a.x?e.x>f.x?e.x:f.x:a.x>f.x?a.x:f.x,g=e.y>a.y?e.y>f.y?e.y:f.y:a.y>f.y?a.y:f.y,k=zOrder$$module$node_modules$three$build$three_module(e.x<a.x?e.x<f.x?e.x:f.x:a.x<f.x?a.x:f.x,e.y<a.y?e.y<f.y?e.y:f.y:a.y<f.y?a.y:f.y,b,c,d);b=zOrder$$module$node_modules$three$build$three_module(h,g,b,c,d);c=a.prevZ;for(d=a.nextZ;c&&c.z>=
k&&d&&d.z<=b;){if(c!==a.prev&&c!==a.next&&pointInTriangle$$module$node_modules$three$build$three_module(e.x,e.y,a.x,a.y,f.x,f.y,c.x,c.y)&&0<=area$$module$node_modules$three$build$three_module(c.prev,c,c.next))return!1;c=c.prevZ;if(d!==a.prev&&d!==a.next&&pointInTriangle$$module$node_modules$three$build$three_module(e.x,e.y,a.x,a.y,f.x,f.y,d.x,d.y)&&0<=area$$module$node_modules$three$build$three_module(d.prev,d,d.next))return!1;d=d.nextZ}for(;c&&c.z>=k;){if(c!==a.prev&&c!==a.next&&pointInTriangle$$module$node_modules$three$build$three_module(e.x,
e.y,a.x,a.y,f.x,f.y,c.x,c.y)&&0<=area$$module$node_modules$three$build$three_module(c.prev,c,c.next))return!1;c=c.prevZ}for(;d&&d.z<=b;){if(d!==a.prev&&d!==a.next&&pointInTriangle$$module$node_modules$three$build$three_module(e.x,e.y,a.x,a.y,f.x,f.y,d.x,d.y)&&0<=area$$module$node_modules$three$build$three_module(d.prev,d,d.next))return!1;d=d.nextZ}return!0}
function cureLocalIntersections$$module$node_modules$three$build$three_module(a,b,c){let d=a;do{const e=d.prev,f=d.next.next;!equals$$module$node_modules$three$build$three_module(e,f)&&intersects$$module$node_modules$three$build$three_module(e,d,d.next,f)&&locallyInside$$module$node_modules$three$build$three_module(e,f)&&locallyInside$$module$node_modules$three$build$three_module(f,e)&&(b.push(e.i/c),b.push(d.i/c),b.push(f.i/c),removeNode$$module$node_modules$three$build$three_module(d),removeNode$$module$node_modules$three$build$three_module(d.next),
d=a=f);d=d.next}while(d!==a);return filterPoints$$module$node_modules$three$build$three_module(d)}
function splitEarcut$$module$node_modules$three$build$three_module(a,b,c,d,e,f){let h=a;do{let g=h.next.next;for(;g!==h.prev;){if(h.i!==g.i&&isValidDiagonal$$module$node_modules$three$build$three_module(h,g)){a=splitPolygon$$module$node_modules$three$build$three_module(h,g);h=filterPoints$$module$node_modules$three$build$three_module(h,h.next);a=filterPoints$$module$node_modules$three$build$three_module(a,a.next);earcutLinked$$module$node_modules$three$build$three_module(h,b,c,d,e,f);earcutLinked$$module$node_modules$three$build$three_module(a,
b,c,d,e,f);return}g=g.next}h=h.next}while(h!==a)}
function eliminateHoles$$module$node_modules$three$build$three_module(a,b,c,d){const e=[];let f,h;let g;f=0;for(h=b.length;f<h;f++){var k=b[f]*d;g=f<h-1?b[f+1]*d:a.length;k=linkedList$$module$node_modules$three$build$three_module(a,k,g,d,!1);k===k.next&&(k.steiner=!0);e.push(getLeftmost$$module$node_modules$three$build$three_module(k))}e.sort(compareX$$module$node_modules$three$build$three_module);for(f=0;f<e.length;f++)eliminateHole$$module$node_modules$three$build$three_module(e[f],c),c=filterPoints$$module$node_modules$three$build$three_module(c,
c.next);return c}function compareX$$module$node_modules$three$build$three_module(a,b){return a.x-b.x}function eliminateHole$$module$node_modules$three$build$three_module(a,b){if(b=findHoleBridge$$module$node_modules$three$build$three_module(a,b))a=splitPolygon$$module$node_modules$three$build$three_module(b,a),filterPoints$$module$node_modules$three$build$three_module(b,b.next),filterPoints$$module$node_modules$three$build$three_module(a,a.next)}
function findHoleBridge$$module$node_modules$three$build$three_module(a,b){let c=b;const d=a.x,e=a.y;let f=-Infinity,h;do{if(e<=c.y&&e>=c.next.y&&c.next.y!==c.y){var g=c.x+(e-c.y)*(c.next.x-c.x)/(c.next.y-c.y);if(g<=d&&g>f){f=g;if(g===d){if(e===c.y)return c;if(e===c.next.y)return c.next}h=c.x<c.next.x?c:c.next}}c=c.next}while(c!==b);if(!h)return null;if(d===f)return h;b=h;g=h.x;const k=h.y;let n=Infinity,w;c=h;do d>=c.x&&c.x>=g&&d!==c.x&&pointInTriangle$$module$node_modules$three$build$three_module(e<
k?d:f,e,g,k,e<k?f:d,e,c.x,c.y)&&(w=Math.abs(e-c.y)/(d-c.x),locallyInside$$module$node_modules$three$build$three_module(c,a)&&(w<n||w===n&&(c.x>h.x||c.x===h.x&&sectorContainsSector$$module$node_modules$three$build$three_module(h,c)))&&(h=c,n=w)),c=c.next;while(c!==b);return h}
function sectorContainsSector$$module$node_modules$three$build$three_module(a,b){return 0>area$$module$node_modules$three$build$three_module(a.prev,a,b.prev)&&0>area$$module$node_modules$three$build$three_module(b.next,a,a.next)}
function indexCurve$$module$node_modules$three$build$three_module(a,b,c,d){let e=a;do null===e.z&&(e.z=zOrder$$module$node_modules$three$build$three_module(e.x,e.y,b,c,d)),e.prevZ=e.prev,e=e.nextZ=e.next;while(e!==a);e.prevZ.nextZ=null;e.prevZ=null;sortLinked$$module$node_modules$three$build$three_module(e)}
function sortLinked$$module$node_modules$three$build$three_module(a){var b;let c,d,e,f,h,g,k=1;do{c=a;e=a=null;for(f=0;c;){f++;d=c;for(b=h=0;b<k&&(h++,d=d.nextZ,d);b++);for(g=k;0<h||0<g&&d;)0!==h&&(0===g||!d||c.z<=d.z)?(b=c,c=c.nextZ,h--):(b=d,d=d.nextZ,g--),e?e.nextZ=b:a=b,b.prevZ=e,e=b;c=d}e.nextZ=null;k*=2}while(1<f);return a}
function zOrder$$module$node_modules$three$build$three_module(a,b,c,d,e){a=32767*(a-c)*e;b=32767*(b-d)*e;a=(a|a<<8)&16711935;a=(a|a<<4)&252645135;a=(a|a<<2)&858993459;b=(b|b<<8)&16711935;b=(b|b<<4)&252645135;b=(b|b<<2)&858993459;return(a|a<<1)&1431655765|((b|b<<1)&1431655765)<<1}function getLeftmost$$module$node_modules$three$build$three_module(a){let b=a,c=a;do{if(b.x<c.x||b.x===c.x&&b.y<c.y)c=b;b=b.next}while(b!==a);return c}
function pointInTriangle$$module$node_modules$three$build$three_module(a,b,c,d,e,f,h,g){return 0<=(e-h)*(b-g)-(a-h)*(f-g)&&0<=(a-h)*(d-g)-(c-h)*(b-g)&&0<=(c-h)*(f-g)-(e-h)*(d-g)}
function isValidDiagonal$$module$node_modules$three$build$three_module(a,b){return a.next.i!==b.i&&a.prev.i!==b.i&&!intersectsPolygon$$module$node_modules$three$build$three_module(a,b)&&(locallyInside$$module$node_modules$three$build$three_module(a,b)&&locallyInside$$module$node_modules$three$build$three_module(b,a)&&middleInside$$module$node_modules$three$build$three_module(a,b)&&(area$$module$node_modules$three$build$three_module(a.prev,a,b.prev)||area$$module$node_modules$three$build$three_module(a,
b.prev,b))||equals$$module$node_modules$three$build$three_module(a,b)&&0<area$$module$node_modules$three$build$three_module(a.prev,a,a.next)&&0<area$$module$node_modules$three$build$three_module(b.prev,b,b.next))}function area$$module$node_modules$three$build$three_module(a,b,c){return(b.y-a.y)*(c.x-b.x)-(b.x-a.x)*(c.y-b.y)}function equals$$module$node_modules$three$build$three_module(a,b){return a.x===b.x&&a.y===b.y}
function intersects$$module$node_modules$three$build$three_module(a,b,c,d){const e=sign$$module$node_modules$three$build$three_module(area$$module$node_modules$three$build$three_module(a,b,c)),f=sign$$module$node_modules$three$build$three_module(area$$module$node_modules$three$build$three_module(a,b,d)),h=sign$$module$node_modules$three$build$three_module(area$$module$node_modules$three$build$three_module(c,d,a)),g=sign$$module$node_modules$three$build$three_module(area$$module$node_modules$three$build$three_module(c,
d,b));return e!==f&&h!==g||0===e&&onSegment$$module$node_modules$three$build$three_module(a,c,b)||0===f&&onSegment$$module$node_modules$three$build$three_module(a,d,b)||0===h&&onSegment$$module$node_modules$three$build$three_module(c,a,d)||0===g&&onSegment$$module$node_modules$three$build$three_module(c,b,d)?!0:!1}function onSegment$$module$node_modules$three$build$three_module(a,b,c){return b.x<=Math.max(a.x,c.x)&&b.x>=Math.min(a.x,c.x)&&b.y<=Math.max(a.y,c.y)&&b.y>=Math.min(a.y,c.y)}
function sign$$module$node_modules$three$build$three_module(a){return 0<a?1:0>a?-1:0}function intersectsPolygon$$module$node_modules$three$build$three_module(a,b){let c=a;do{if(c.i!==a.i&&c.next.i!==a.i&&c.i!==b.i&&c.next.i!==b.i&&intersects$$module$node_modules$three$build$three_module(c,c.next,a,b))return!0;c=c.next}while(c!==a);return!1}
function locallyInside$$module$node_modules$three$build$three_module(a,b){return 0>area$$module$node_modules$three$build$three_module(a.prev,a,a.next)?0<=area$$module$node_modules$three$build$three_module(a,b,a.next)&&0<=area$$module$node_modules$three$build$three_module(a,a.prev,b):0>area$$module$node_modules$three$build$three_module(a,b,a.prev)||0>area$$module$node_modules$three$build$three_module(a,a.next,b)}
function middleInside$$module$node_modules$three$build$three_module(a,b){let c=a,d=!1;const e=(a.x+b.x)/2;b=(a.y+b.y)/2;do c.y>b!==c.next.y>b&&c.next.y!==c.y&&e<(c.next.x-c.x)*(b-c.y)/(c.next.y-c.y)+c.x&&(d=!d),c=c.next;while(c!==a);return d}
function splitPolygon$$module$node_modules$three$build$three_module(a,b){const c=new Node$$module$node_modules$three$build$three_module(a.i,a.x,a.y),d=new Node$$module$node_modules$three$build$three_module(b.i,b.x,b.y),e=a.next,f=b.prev;a.next=b;b.prev=a;c.next=e;e.prev=c;d.next=c;c.prev=d;f.next=d;d.prev=f;return d}
function insertNode$$module$node_modules$three$build$three_module(a,b,c,d){a=new Node$$module$node_modules$three$build$three_module(a,b,c);d?(a.next=d.next,a.prev=d,d.next.prev=a,d.next=a):(a.prev=a,a.next=a);return a}function removeNode$$module$node_modules$three$build$three_module(a){a.next.prev=a.prev;a.prev.next=a.next;a.prevZ&&(a.prevZ.nextZ=a.nextZ);a.nextZ&&(a.nextZ.prevZ=a.prevZ)}
function Node$$module$node_modules$three$build$three_module(a,b,c){this.i=a;this.x=b;this.y=c;this.nextZ=this.prevZ=this.z=this.next=this.prev=null;this.steiner=!1}function signedArea$$module$node_modules$three$build$three_module(a,b,c,d){let e=0;for(let f=b,h=c-d;f<c;f+=d)e+=(a[h]-a[f])*(a[f+1]+a[h+1]),h=f;return e}
const ShapeUtils$$module$node_modules$three$build$three_module={area:function(a){const b=a.length;let c=0;for(let d=b-1,e=0;e<b;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return.5*c},isClockWise:function(a){return 0>ShapeUtils$$module$node_modules$three$build$three_module.area(a)},triangulateShape:function(a,b){var c=[];const d=[],e=[];removeDupEndPts$$module$node_modules$three$build$three_module(a);addContour$$module$node_modules$three$build$three_module(c,a);a=a.length;b.forEach(removeDupEndPts$$module$node_modules$three$build$three_module);
for(let f=0;f<b.length;f++)d.push(a),a+=b[f].length,addContour$$module$node_modules$three$build$three_module(c,b[f]);b=Earcut$$module$node_modules$three$build$three_module.triangulate(c,d);for(c=0;c<b.length;c+=3)e.push(b.slice(c,c+3));return e}};function removeDupEndPts$$module$node_modules$three$build$three_module(a){const b=a.length;2<b&&a[b-1].equals(a[0])&&a.pop()}function addContour$$module$node_modules$three$build$three_module(a,b){for(let c=0;c<b.length;c++)a.push(b[c].x),a.push(b[c].y)}
class ExtrudeGeometry$$module$node_modules$three$build$three_module extends Geometry$$module$node_modules$three$build$three_module{constructor(a,b){super();this.type="ExtrudeGeometry";this.parameters={shapes:a,options:b};this.fromBufferGeometry(new ExtrudeBufferGeometry$$module$node_modules$three$build$three_module(a,b));this.mergeVertices()}toJSON(){const a=super.toJSON();return toJSON$$module$node_modules$three$build$three_module(this.parameters.shapes,this.parameters.options,a)}}
class ExtrudeBufferGeometry$$module$node_modules$three$build$three_module extends BufferGeometry$$module$node_modules$three$build$three_module{constructor(a,b){function c(h){function g(B,H,M){H||console.error("THREE.ExtrudeGeometry: vec does not exist");return H.clone().multiplyScalar(M).add(B)}function k(B,H,M){var K=B.x-H.x;var R=B.y-H.y;var Q=M.x-B.x;var Y=M.y-B.y,da=K*K+R*R;if(Math.abs(K*Y-R*Q)>Number.EPSILON){const ca=Math.sqrt(da),ia=Math.sqrt(Q*Q+Y*Y);da=H.x-R/ca;H=H.y+K/ca;Y=((M.x-Y/ia-da)*
Y-(M.y+Q/ia-H)*Q)/(K*Y-R*Q);Q=da+K*Y-B.x;K=H+R*Y-B.y;R=Q*Q+K*K;if(2>=R)return new Vector2$$module$node_modules$three$build$three_module(Q,K);R=Math.sqrt(R/2)}else B=!1,K>Number.EPSILON?Q>Number.EPSILON&&(B=!0):K<-Number.EPSILON?Q<-Number.EPSILON&&(B=!0):Math.sign(R)===Math.sign(Y)&&(B=!0),B?(Q=-R,R=Math.sqrt(da)):(Q=K,K=R,R=Math.sqrt(da/2));return new Vector2$$module$node_modules$three$build$three_module(Q/R,K/R)}function n(B,H){let M=B.length;for(;0<=--M;){const Y=M;let da=M-1;0>da&&(da=B.length-
1);for(let ca=0,ia=p+2*T;ca<ia;ca++){const na=L*ca;var K=L*(ca+1),R=H+da+na,Q=H+da+K;K=H+Y+K;x(H+Y+na);x(R);x(K);x(R);x(Q);x(K);R=e.length/3;R=X.generateSideWallUV(d,e,R-6,R-3,R-2,R-1);z(R[0]);z(R[1]);z(R[3]);z(R[1]);z(R[2]);z(R[3])}}}function w(B,H,M){F.push(B);F.push(H);F.push(M)}function v(B,H,M){x(B);x(H);x(M);B=e.length/3;B=X.generateTopUV(d,e,B-3,B-2,B-1);z(B[0]);z(B[1]);z(B[2])}function x(B){e.push(F[3*B]);e.push(F[3*B+1]);e.push(F[3*B+2])}function z(B){f.push(B.x);f.push(B.y)}const F=[];var N=
void 0!==b.curveSegments?b.curveSegments:12;const p=void 0!==b.steps?b.steps:1;let A=void 0!==b.depth?b.depth:100,G=void 0!==b.bevelEnabled?b.bevelEnabled:!0,O=void 0!==b.bevelThickness?b.bevelThickness:6,P=void 0!==b.bevelSize?b.bevelSize:O-2,S=void 0!==b.bevelOffset?b.bevelOffset:0,T=void 0!==b.bevelSegments?b.bevelSegments:3;var W=b.extrudePath;const X=void 0!==b.UVGenerator?b.UVGenerator:WorldUVGenerator$$module$node_modules$three$build$three_module;void 0!==b.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),
A=b.amount);let U,Z=!1;if(W){U=W.getSpacedPoints(p);Z=!0;G=!1;var aa=W.computeFrenetFrames(p,!1);var r=new Vector3$$module$node_modules$three$build$three_module;var y=new Vector3$$module$node_modules$three$build$three_module;var J=new Vector3$$module$node_modules$three$build$three_module}G||(S=P=O=T=0);h=h.extractPoints(N);W=h.shape;const C=h.holes;if(!ShapeUtils$$module$node_modules$three$build$three_module.isClockWise(W)){W=W.reverse();for(let B=0,H=C.length;B<H;B++)h=C[B],ShapeUtils$$module$node_modules$three$build$three_module.isClockWise(h)&&
(C[B]=h.reverse())}const E=ShapeUtils$$module$node_modules$three$build$three_module.triangulateShape(W,C),I=W;for(let B=0,H=C.length;B<H;B++)W=W.concat(C[B]);const L=W.length,m=E.length;h=[];for(let B=0,H=I.length,M=H-1,K=B+1;B<H;B++,M++,K++)M===H&&(M=0),K===H&&(K=0),h[B]=k(I[B],I[M],I[K]);N=[];let u=h.concat();for(let B=0,H=C.length;B<H;B++){var D=C[B];var l=[];for(let M=0,K=D.length,R=K-1,Q=M+1;M<K;M++,R++,Q++)R===K&&(R=0),Q===K&&(Q=0),l[M]=k(D[M],D[R],D[Q]);N.push(l);u=u.concat(l)}for(D=0;D<T;D++){l=
D/T;var q=O*Math.cos(l*Math.PI/2),t=P*Math.sin(l*Math.PI/2)+S;for(let B=0,H=I.length;B<H;B++)l=g(I[B],h[B],t),w(l.x,l.y,-q);for(let B=0,H=C.length;B<H;B++){const M=C[B];l=N[B];for(let K=0,R=M.length;K<R;K++){const Q=g(M[K],l[K],t);w(Q.x,Q.y,-q)}}}l=P+S;for(D=0;D<L;D++)q=G?g(W[D],u[D],l):W[D],Z?(y.copy(aa.normals[0]).multiplyScalar(q.x),r.copy(aa.binormals[0]).multiplyScalar(q.y),J.copy(U[0]).add(y).add(r),w(J.x,J.y,J.z)):w(q.x,q.y,0);for(D=1;D<=p;D++)for(q=0;q<L;q++)t=G?g(W[q],u[q],l):W[q],Z?(y.copy(aa.normals[D]).multiplyScalar(t.x),
r.copy(aa.binormals[D]).multiplyScalar(t.y),J.copy(U[D]).add(y).add(r),w(J.x,J.y,J.z)):w(t.x,t.y,A/p*D);for(aa=T-1;0<=aa;aa--){y=aa/T;r=O*Math.cos(y*Math.PI/2);y=P*Math.sin(y*Math.PI/2)+S;for(let B=0,H=I.length;B<H;B++)J=g(I[B],h[B],y),w(J.x,J.y,A+r);for(let B=0,H=C.length;B<H;B++){J=C[B];l=N[B];for(let M=0,K=J.length;M<K;M++)W=g(J[M],l[M],y),Z?w(W.x,W.y+U[p-1].y,U[p-1].x+r):w(W.x,W.y,A+r)}}(function(){const B=e.length/3;if(G){var H=0*L;for(var M=0;M<m;M++){var K=E[M];v(K[2]+H,K[1]+H,K[0]+H)}H=L*
(p+2*T);for(M=0;M<m;M++)K=E[M],v(K[0]+H,K[1]+H,K[2]+H)}else{for(H=0;H<m;H++)M=E[H],v(M[2],M[1],M[0]);for(H=0;H<m;H++)M=E[H],v(M[0]+L*p,M[1]+L*p,M[2]+L*p)}d.addGroup(B,e.length/3-B,0)})();(function(){const B=e.length/3;let H=0;n(I,H);H+=I.length;for(let M=0,K=C.length;M<K;M++){const R=C[M];n(R,H);H+=R.length}d.addGroup(B,e.length/3-B,1)})()}super();this.type="ExtrudeBufferGeometry";this.parameters={shapes:a,options:b};a=Array.isArray(a)?a:[a];const d=this,e=[],f=[];for(let h=0,g=a.length;h<g;h++)c(a[h]);
this.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(e,3));this.setAttribute("uv",new Float32BufferAttribute$$module$node_modules$three$build$three_module(f,2));this.computeVertexNormals()}toJSON(){const a=BufferGeometry$$module$node_modules$three$build$three_module.prototype.toJSON.call(this);return toJSON$$module$node_modules$three$build$three_module(this.parameters.shapes,this.parameters.options,a)}}
const WorldUVGenerator$$module$node_modules$three$build$three_module={generateTopUV:function(a,b,c,d,e){a=b[3*d];d=b[3*d+1];const f=b[3*e];e=b[3*e+1];return[new Vector2$$module$node_modules$three$build$three_module(b[3*c],b[3*c+1]),new Vector2$$module$node_modules$three$build$three_module(a,d),new Vector2$$module$node_modules$three$build$three_module(f,e)]},generateSideWallUV:function(a,b,c,d,e,f){a=b[3*c];const h=b[3*c+1];c=b[3*c+2];const g=b[3*d],k=b[3*d+1];d=b[3*d+2];const n=b[3*e],w=b[3*e+1];
e=b[3*e+2];const v=b[3*f],x=b[3*f+1];b=b[3*f+2];return.01>Math.abs(h-k)?[new Vector2$$module$node_modules$three$build$three_module(a,1-c),new Vector2$$module$node_modules$three$build$three_module(g,1-d),new Vector2$$module$node_modules$three$build$three_module(n,1-e),new Vector2$$module$node_modules$three$build$three_module(v,1-b)]:[new Vector2$$module$node_modules$three$build$three_module(h,1-c),new Vector2$$module$node_modules$three$build$three_module(k,1-d),new Vector2$$module$node_modules$three$build$three_module(w,
1-e),new Vector2$$module$node_modules$three$build$three_module(x,1-b)]}};function toJSON$$module$node_modules$three$build$three_module(a,b,c){c.shapes=[];if(Array.isArray(a))for(let d=0,e=a.length;d<e;d++)c.shapes.push(a[d].uuid);else c.shapes.push(a.uuid);void 0!==b.extrudePath&&(c.options.extrudePath=b.extrudePath.toJSON());return c}
class TextGeometry$$module$node_modules$three$build$three_module extends Geometry$$module$node_modules$three$build$three_module{constructor(a,b){super();this.type="TextGeometry";this.parameters={text:a,parameters:b};this.fromBufferGeometry(new TextBufferGeometry$$module$node_modules$three$build$three_module(a,b));this.mergeVertices()}}
class TextBufferGeometry$$module$node_modules$three$build$three_module extends ExtrudeBufferGeometry$$module$node_modules$three$build$three_module{constructor(a,b){b=b||{};const c=b.font;if(!c||!c.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Geometry$$module$node_modules$three$build$three_module;a=c.generateShapes(a,b.size);b.depth=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=
8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);super(a,b);this.type="TextBufferGeometry"}}
class SphereGeometry$$module$node_modules$three$build$three_module extends Geometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d,e,f,h){super();this.type="SphereGeometry";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:h};this.fromBufferGeometry(new SphereBufferGeometry$$module$node_modules$three$build$three_module(a,b,c,d,e,f,h));this.mergeVertices()}}
class SphereBufferGeometry$$module$node_modules$three$build$three_module extends BufferGeometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d,e,f,h){super();this.type="SphereBufferGeometry";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:h};a=a||1;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);d=void 0!==d?d:0;e=void 0!==e?e:2*Math.PI;f=void 0!==f?f:0;h=void 0!==h?h:Math.PI;const g=Math.min(f+h,Math.PI);
var k=0;const n=[];var w=new Vector3$$module$node_modules$three$build$three_module;const v=new Vector3$$module$node_modules$three$build$three_module,x=[],z=[],F=[],N=[];for(let p=0;p<=c;p++){const A=[],G=p/c;let O=0;0==p&&0==f?O=.5/b:p==c&&g==Math.PI&&(O=-.5/b);for(let P=0;P<=b;P++){const S=P/b;w.x=-a*Math.cos(d+S*e)*Math.sin(f+G*h);w.y=a*Math.cos(f+G*h);w.z=a*Math.sin(d+S*e)*Math.sin(f+G*h);z.push(w.x,w.y,w.z);v.copy(w).normalize();F.push(v.x,v.y,v.z);N.push(S+O,1-G);A.push(k++)}n.push(A)}for(a=
0;a<c;a++)for(d=0;d<b;d++)e=n[a][d+1],h=n[a][d],k=n[a+1][d],w=n[a+1][d+1],(0!==a||0<f)&&x.push(e,h,w),(a!==c-1||g<Math.PI)&&x.push(h,k,w);this.setIndex(x);this.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(z,3));this.setAttribute("normal",new Float32BufferAttribute$$module$node_modules$three$build$three_module(F,3));this.setAttribute("uv",new Float32BufferAttribute$$module$node_modules$three$build$three_module(N,2))}}
class RingGeometry$$module$node_modules$three$build$three_module extends Geometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d,e,f){super();this.type="RingGeometry";this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};this.fromBufferGeometry(new RingBufferGeometry$$module$node_modules$three$build$three_module(a,b,c,d,e,f));this.mergeVertices()}}
class RingBufferGeometry$$module$node_modules$three$build$three_module extends BufferGeometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d,e,f){super();this.type="RingBufferGeometry";this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};a=a||.5;b=b||1;e=void 0!==e?e:0;f=void 0!==f?f:2*Math.PI;c=void 0!==c?Math.max(3,c):8;d=void 0!==d?Math.max(1,d):1;const h=[],g=[],k=[],n=[];var w=a;a=(b-a)/d;var v=new Vector3$$module$node_modules$three$build$three_module,
x=new Vector2$$module$node_modules$three$build$three_module;for(let z=0;z<=d;z++){for(let F=0;F<=c;F++){const N=e+F/c*f;v.x=w*Math.cos(N);v.y=w*Math.sin(N);g.push(v.x,v.y,v.z);k.push(0,0,1);x.x=(v.x/b+1)/2;x.y=(v.y/b+1)/2;n.push(x.x,x.y)}w+=a}for(b=0;b<d;b++)for(e=b*(c+1),f=0;f<c;f++)w=f+e,a=w+c+1,v=w+c+2,x=w+1,h.push(w,a,x),h.push(a,v,x);this.setIndex(h);this.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(g,3));this.setAttribute("normal",new Float32BufferAttribute$$module$node_modules$three$build$three_module(k,
3));this.setAttribute("uv",new Float32BufferAttribute$$module$node_modules$three$build$three_module(n,2))}}class LatheGeometry$$module$node_modules$three$build$three_module extends Geometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d){super();this.type="LatheGeometry";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};this.fromBufferGeometry(new LatheBufferGeometry$$module$node_modules$three$build$three_module(a,b,c,d));this.mergeVertices()}}
class LatheBufferGeometry$$module$node_modules$three$build$three_module extends BufferGeometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d){super();this.type="LatheBufferGeometry";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};b=Math.floor(b)||12;c=c||0;d=d||2*Math.PI;d=MathUtils$$module$node_modules$three$build$three_module.clamp(d,0,2*Math.PI);var e=[],f=[],h=[],g=1/b,k=new Vector3$$module$node_modules$three$build$three_module,n=new Vector2$$module$node_modules$three$build$three_module;
for(var w=0;w<=b;w++){var v=c+w*g*d,x=Math.sin(v);v=Math.cos(v);for(let z=0;z<=a.length-1;z++)k.x=a[z].x*x,k.y=a[z].y,k.z=a[z].x*v,f.push(k.x,k.y,k.z),n.x=w/b,n.y=z/(a.length-1),h.push(n.x,n.y)}for(c=0;c<b;c++)for(g=0;g<a.length-1;g++)k=g+c*a.length,n=k+a.length,w=k+a.length+1,x=k+1,e.push(k,n,x),e.push(n,w,x);this.setIndex(e);this.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(f,3));this.setAttribute("uv",new Float32BufferAttribute$$module$node_modules$three$build$three_module(h,
2));this.computeVertexNormals();if(d===2*Math.PI){d=this.attributes.normal.array;e=new Vector3$$module$node_modules$three$build$three_module;f=new Vector3$$module$node_modules$three$build$three_module;h=new Vector3$$module$node_modules$three$build$three_module;b=b*a.length*3;for(let z=0,F=0;z<a.length;z++,F+=3)e.x=d[F+0],e.y=d[F+1],e.z=d[F+2],f.x=d[b+F+0],f.y=d[b+F+1],f.z=d[b+F+2],h.addVectors(e,f).normalize(),d[F+0]=d[b+F+0]=h.x,d[F+1]=d[b+F+1]=h.y,d[F+2]=d[b+F+2]=h.z}}}
class ShapeGeometry$$module$node_modules$three$build$three_module extends Geometry$$module$node_modules$three$build$three_module{constructor(a,b){super();this.type="ShapeGeometry";"object"===typeof b&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),b=b.curveSegments);this.parameters={shapes:a,curveSegments:b};this.fromBufferGeometry(new ShapeBufferGeometry$$module$node_modules$three$build$three_module(a,b));this.mergeVertices()}toJSON(){const a=Geometry$$module$node_modules$three$build$three_module.prototype.toJSON.call(this);
return toJSON$1$$module$node_modules$three$build$three_module(this.parameters.shapes,a)}}
class ShapeBufferGeometry$$module$node_modules$three$build$three_module extends BufferGeometry$$module$node_modules$three$build$three_module{constructor(a,b){function c(n){const w=e.length/3;var v=n.extractPoints(b);n=v.shape;var x=v.holes;!1===ShapeUtils$$module$node_modules$three$build$three_module.isClockWise(n)&&(n=n.reverse());for(let z=0,F=x.length;z<F;z++)v=x[z],!0===ShapeUtils$$module$node_modules$three$build$three_module.isClockWise(v)&&(x[z]=v.reverse());v=ShapeUtils$$module$node_modules$three$build$three_module.triangulateShape(n,
x);for(let z=0,F=x.length;z<F;z++)n=n.concat(x[z]);for(let z=0,F=n.length;z<F;z++)x=n[z],e.push(x.x,x.y,0),f.push(0,0,1),h.push(x.x,x.y);for(let z=0,F=v.length;z<F;z++)n=v[z],d.push(n[0]+w,n[1]+w,n[2]+w),k+=3}super();this.type="ShapeBufferGeometry";this.parameters={shapes:a,curveSegments:b};b=b||12;const d=[],e=[],f=[],h=[];let g=0,k=0;if(!1===Array.isArray(a))c(a);else for(let n=0;n<a.length;n++)c(a[n]),this.addGroup(g,k,n),g+=k,k=0;this.setIndex(d);this.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(e,
3));this.setAttribute("normal",new Float32BufferAttribute$$module$node_modules$three$build$three_module(f,3));this.setAttribute("uv",new Float32BufferAttribute$$module$node_modules$three$build$three_module(h,2))}toJSON(){const a=BufferGeometry$$module$node_modules$three$build$three_module.prototype.toJSON.call(this);return toJSON$1$$module$node_modules$three$build$three_module(this.parameters.shapes,a)}}
function toJSON$1$$module$node_modules$three$build$three_module(a,b){b.shapes=[];if(Array.isArray(a))for(let c=0,d=a.length;c<d;c++)b.shapes.push(a[c].uuid);else b.shapes.push(a.uuid);return b}
class EdgesGeometry$$module$node_modules$three$build$three_module extends BufferGeometry$$module$node_modules$three$build$three_module{constructor(a,b){super();this.type="EdgesGeometry";this.parameters={thresholdAngle:b};const c=[];b=Math.cos(MathUtils$$module$node_modules$three$build$three_module.DEG2RAD*(void 0!==b?b:1));var d=[0,0];const e={};let f;var h=["a","b","c"];if(a.isBufferGeometry){var g=new Geometry$$module$node_modules$three$build$three_module;g.fromBufferGeometry(a)}else g=a.clone();
g.mergeVertices();g.computeFaceNormals();a=g.vertices;g=g.faces;for(let n=0,w=g.length;n<w;n++){const v=g[n];for(let x=0;3>x;x++){var k=v[h[x]];f=v[h[(x+1)%3]];d[0]=Math.min(k,f);d[1]=Math.max(k,f);k=d[0]+","+d[1];void 0===e[k]?e[k]={index1:d[0],index2:d[1],face1:n,face2:void 0}:e[k].face2=n}}for(k in e)if(d=e[k],void 0===d.face2||g[d.face1].normal.dot(g[d.face2].normal)<=b)h=a[d.index1],c.push(h.x,h.y,h.z),h=a[d.index2],c.push(h.x,h.y,h.z);this.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(c,
3))}}class CylinderGeometry$$module$node_modules$three$build$three_module extends Geometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d,e,f,h,g){super();this.type="CylinderGeometry";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:h,thetaLength:g};this.fromBufferGeometry(new CylinderBufferGeometry$$module$node_modules$three$build$three_module(a,b,c,d,e,f,h,g));this.mergeVertices()}}
class CylinderBufferGeometry$$module$node_modules$three$build$three_module extends BufferGeometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d,e,f,h,g){function k(G){const O=F;var P=new Vector2$$module$node_modules$three$build$three_module,S=new Vector3$$module$node_modules$three$build$three_module;let T=0;var W=!0===G?a:b;const X=!0===G?1:-1;for(var U=1;U<=d;U++)v.push(0,p*X,0),x.push(0,X,0),z.push(.5,.5),F++;U=F;for(let aa=0;aa<=d;aa++){var Z=aa/d*g+h;const r=Math.cos(Z);Z=
Math.sin(Z);S.x=W*Z;S.y=p*X;S.z=W*r;v.push(S.x,S.y,S.z);x.push(0,X,0);P.x=.5*r+.5;P.y=.5*Z*X+.5;z.push(P.x,P.y);F++}for(P=0;P<d;P++)S=O+P,W=U+P,!0===G?w.push(W,W+1,S):w.push(W+1,W,S),T+=3;n.addGroup(A,T,!0===G?1:2);A+=T}super();this.type="CylinderBufferGeometry";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:h,thetaLength:g};const n=this;a=void 0!==a?a:1;b=void 0!==b?b:1;c=c||1;d=Math.floor(d)||8;e=Math.floor(e)||1;f=void 0!==f?f:!1;h=
void 0!==h?h:0;g=void 0!==g?g:2*Math.PI;const w=[],v=[],x=[],z=[];let F=0;const N=[],p=c/2;let A=0;(function(){var G=new Vector3$$module$node_modules$three$build$three_module,O=new Vector3$$module$node_modules$three$build$three_module;let P=0;var S=(b-a)/c;for(var T=0;T<=e;T++){var W=[];const U=T/e,Z=U*(b-a)+a;for(let aa=0;aa<=d;aa++){const r=aa/d;var X=r*g+h;const y=Math.sin(X);X=Math.cos(X);O.x=Z*y;O.y=-U*c+p;O.z=Z*X;v.push(O.x,O.y,O.z);G.set(y,S,X).normalize();x.push(G.x,G.y,G.z);z.push(r,1-U);
W.push(F++)}N.push(W)}for(G=0;G<d;G++)for(O=0;O<e;O++)S=N[O+1][G],T=N[O+1][G+1],W=N[O][G+1],w.push(N[O][G],S,W),w.push(S,T,W),P+=6;n.addGroup(A,P,0);A+=P})();!1===f&&(0<a&&k(!0),0<b&&k(!1));this.setIndex(w);this.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(v,3));this.setAttribute("normal",new Float32BufferAttribute$$module$node_modules$three$build$three_module(x,3));this.setAttribute("uv",new Float32BufferAttribute$$module$node_modules$three$build$three_module(z,
2))}}class ConeGeometry$$module$node_modules$three$build$three_module extends CylinderGeometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d,e,f,h){super(0,a,b,c,d,e,f,h);this.type="ConeGeometry";this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,openEnded:e,thetaStart:f,thetaLength:h}}}
class ConeBufferGeometry$$module$node_modules$three$build$three_module extends CylinderBufferGeometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d,e,f,h){super(0,a,b,c,d,e,f,h);this.type="ConeBufferGeometry";this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,openEnded:e,thetaStart:f,thetaLength:h}}}
class CircleGeometry$$module$node_modules$three$build$three_module extends Geometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d){super();this.type="CircleGeometry";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};this.fromBufferGeometry(new CircleBufferGeometry$$module$node_modules$three$build$three_module(a,b,c,d));this.mergeVertices()}}
class CircleBufferGeometry$$module$node_modules$three$build$three_module extends BufferGeometry$$module$node_modules$three$build$three_module{constructor(a,b,c,d){super();this.type="CircleBufferGeometry";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};a=a||1;b=void 0!==b?Math.max(3,b):8;c=void 0!==c?c:0;d=void 0!==d?d:2*Math.PI;const e=[],f=[],h=[],g=[],k=new Vector3$$module$node_modules$three$build$three_module,n=new Vector2$$module$node_modules$three$build$three_module;f.push(0,
0,0);h.push(0,0,1);g.push(.5,.5);for(let w=0,v=3;w<=b;w++,v+=3){const x=c+w/b*d;k.x=a*Math.cos(x);k.y=a*Math.sin(x);f.push(k.x,k.y,k.z);h.push(0,0,1);n.x=(f[v]/a+1)/2;n.y=(f[v+1]/a+1)/2;g.push(n.x,n.y)}for(a=1;a<=b;a++)e.push(a,a+1,0);this.setIndex(e);this.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(f,3));this.setAttribute("normal",new Float32BufferAttribute$$module$node_modules$three$build$three_module(h,3));this.setAttribute("uv",new Float32BufferAttribute$$module$node_modules$three$build$three_module(g,
2))}}
var Geometries$$module$node_modules$three$build$three_module=Object.freeze({__proto__:null,WireframeGeometry:WireframeGeometry$$module$node_modules$three$build$three_module,ParametricGeometry:ParametricGeometry$$module$node_modules$three$build$three_module,ParametricBufferGeometry:ParametricBufferGeometry$$module$node_modules$three$build$three_module,TetrahedronGeometry:TetrahedronGeometry$$module$node_modules$three$build$three_module,TetrahedronBufferGeometry:TetrahedronBufferGeometry$$module$node_modules$three$build$three_module,OctahedronGeometry:OctahedronGeometry$$module$node_modules$three$build$three_module,
OctahedronBufferGeometry:OctahedronBufferGeometry$$module$node_modules$three$build$three_module,IcosahedronGeometry:IcosahedronGeometry$$module$node_modules$three$build$three_module,IcosahedronBufferGeometry:IcosahedronBufferGeometry$$module$node_modules$three$build$three_module,DodecahedronGeometry:DodecahedronGeometry$$module$node_modules$three$build$three_module,DodecahedronBufferGeometry:DodecahedronBufferGeometry$$module$node_modules$three$build$three_module,PolyhedronGeometry:PolyhedronGeometry$$module$node_modules$three$build$three_module,
PolyhedronBufferGeometry:PolyhedronBufferGeometry$$module$node_modules$three$build$three_module,TubeGeometry:TubeGeometry$$module$node_modules$three$build$three_module,TubeBufferGeometry:TubeBufferGeometry$$module$node_modules$three$build$three_module,TorusKnotGeometry:TorusKnotGeometry$$module$node_modules$three$build$three_module,TorusKnotBufferGeometry:TorusKnotBufferGeometry$$module$node_modules$three$build$three_module,TorusGeometry:TorusGeometry$$module$node_modules$three$build$three_module,
TorusBufferGeometry:TorusBufferGeometry$$module$node_modules$three$build$three_module,TextGeometry:TextGeometry$$module$node_modules$three$build$three_module,TextBufferGeometry:TextBufferGeometry$$module$node_modules$three$build$three_module,SphereGeometry:SphereGeometry$$module$node_modules$three$build$three_module,SphereBufferGeometry:SphereBufferGeometry$$module$node_modules$three$build$three_module,RingGeometry:RingGeometry$$module$node_modules$three$build$three_module,RingBufferGeometry:RingBufferGeometry$$module$node_modules$three$build$three_module,
PlaneGeometry:PlaneGeometry$$module$node_modules$three$build$three_module,PlaneBufferGeometry:PlaneBufferGeometry$$module$node_modules$three$build$three_module,LatheGeometry:LatheGeometry$$module$node_modules$three$build$three_module,LatheBufferGeometry:LatheBufferGeometry$$module$node_modules$three$build$three_module,ShapeGeometry:ShapeGeometry$$module$node_modules$three$build$three_module,ShapeBufferGeometry:ShapeBufferGeometry$$module$node_modules$three$build$three_module,ExtrudeGeometry:ExtrudeGeometry$$module$node_modules$three$build$three_module,
ExtrudeBufferGeometry:ExtrudeBufferGeometry$$module$node_modules$three$build$three_module,EdgesGeometry:EdgesGeometry$$module$node_modules$three$build$three_module,ConeGeometry:ConeGeometry$$module$node_modules$three$build$three_module,ConeBufferGeometry:ConeBufferGeometry$$module$node_modules$three$build$three_module,CylinderGeometry:CylinderGeometry$$module$node_modules$three$build$three_module,CylinderBufferGeometry:CylinderBufferGeometry$$module$node_modules$three$build$three_module,CircleGeometry:CircleGeometry$$module$node_modules$three$build$three_module,
CircleBufferGeometry:CircleBufferGeometry$$module$node_modules$three$build$three_module,BoxGeometry:BoxGeometry$$module$node_modules$three$build$three_module,BoxBufferGeometry:BoxBufferGeometry$$module$node_modules$three$build$three_module});
function ShadowMaterial$$module$node_modules$three$build$three_module(a){Material$$module$node_modules$three$build$three_module.call(this);this.type="ShadowMaterial";this.color=new Color$$module$node_modules$three$build$three_module(0);this.transparent=!0;this.setValues(a)}ShadowMaterial$$module$node_modules$three$build$three_module.prototype=Object.create(Material$$module$node_modules$three$build$three_module.prototype);
ShadowMaterial$$module$node_modules$three$build$three_module.prototype.constructor=ShadowMaterial$$module$node_modules$three$build$three_module;ShadowMaterial$$module$node_modules$three$build$three_module.prototype.isShadowMaterial=!0;ShadowMaterial$$module$node_modules$three$build$three_module.prototype.copy=function(a){Material$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.color.copy(a.color);return this};
function RawShaderMaterial$$module$node_modules$three$build$three_module(a){ShaderMaterial$$module$node_modules$three$build$three_module.call(this,a);this.type="RawShaderMaterial"}RawShaderMaterial$$module$node_modules$three$build$three_module.prototype=Object.create(ShaderMaterial$$module$node_modules$three$build$three_module.prototype);RawShaderMaterial$$module$node_modules$three$build$three_module.prototype.constructor=RawShaderMaterial$$module$node_modules$three$build$three_module;
RawShaderMaterial$$module$node_modules$three$build$three_module.prototype.isRawShaderMaterial=!0;
function MeshStandardMaterial$$module$node_modules$three$build$three_module(a){Material$$module$node_modules$three$build$three_module.call(this);this.defines={STANDARD:""};this.type="MeshStandardMaterial";this.color=new Color$$module$node_modules$three$build$three_module(16777215);this.roughness=1;this.metalness=0;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new Color$$module$node_modules$three$build$three_module(0);this.emissiveIntensity=
1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap$$module$node_modules$three$build$three_module;this.normalScale=new Vector2$$module$node_modules$three$build$three_module(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.envMap=this.alphaMap=this.metalnessMap=this.roughnessMap=null;this.envMapIntensity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=
"round";this.vertexTangents=this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)}MeshStandardMaterial$$module$node_modules$three$build$three_module.prototype=Object.create(Material$$module$node_modules$three$build$three_module.prototype);MeshStandardMaterial$$module$node_modules$three$build$three_module.prototype.constructor=MeshStandardMaterial$$module$node_modules$three$build$three_module;
MeshStandardMaterial$$module$node_modules$three$build$three_module.prototype.isMeshStandardMaterial=!0;
MeshStandardMaterial$$module$node_modules$three$build$three_module.prototype.copy=function(a){Material$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.defines={STANDARD:""};this.color.copy(a.color);this.roughness=a.roughness;this.metalness=a.metalness;this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=
a.emissiveIntensity;this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalMapType=a.normalMapType;this.normalScale.copy(a.normalScale);this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.roughnessMap=a.roughnessMap;this.metalnessMap=a.metalnessMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.envMapIntensity=a.envMapIntensity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;
this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;this.vertexTangents=a.vertexTangents;return this};
function MeshPhysicalMaterial$$module$node_modules$three$build$three_module(a){MeshStandardMaterial$$module$node_modules$three$build$three_module.call(this);this.defines={STANDARD:"",PHYSICAL:""};this.type="MeshPhysicalMaterial";this.clearcoat=0;this.clearcoatMap=null;this.clearcoatRoughness=0;this.clearcoatRoughnessMap=null;this.clearcoatNormalScale=new Vector2$$module$node_modules$three$build$three_module(1,1);this.clearcoatNormalMap=null;this.reflectivity=.5;this.sheen=null;this.transmission=0;
this.transmissionMap=null;this.setValues(a)}MeshPhysicalMaterial$$module$node_modules$three$build$three_module.prototype=Object.create(MeshStandardMaterial$$module$node_modules$three$build$three_module.prototype);MeshPhysicalMaterial$$module$node_modules$three$build$three_module.prototype.constructor=MeshPhysicalMaterial$$module$node_modules$three$build$three_module;MeshPhysicalMaterial$$module$node_modules$three$build$three_module.prototype.isMeshPhysicalMaterial=!0;
MeshPhysicalMaterial$$module$node_modules$three$build$three_module.prototype.copy=function(a){MeshStandardMaterial$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.defines={STANDARD:"",PHYSICAL:""};this.clearcoat=a.clearcoat;this.clearcoatMap=a.clearcoatMap;this.clearcoatRoughness=a.clearcoatRoughness;this.clearcoatRoughnessMap=a.clearcoatRoughnessMap;this.clearcoatNormalMap=a.clearcoatNormalMap;this.clearcoatNormalScale.copy(a.clearcoatNormalScale);this.reflectivity=
a.reflectivity;this.sheen=a.sheen?(this.sheen||new Color$$module$node_modules$three$build$three_module).copy(a.sheen):null;this.transmission=a.transmission;this.transmissionMap=a.transmissionMap;return this};
function MeshPhongMaterial$$module$node_modules$three$build$three_module(a){Material$$module$node_modules$three$build$three_module.call(this);this.type="MeshPhongMaterial";this.color=new Color$$module$node_modules$three$build$three_module(16777215);this.specular=new Color$$module$node_modules$three$build$three_module(1118481);this.shininess=30;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new Color$$module$node_modules$three$build$three_module(0);
this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap$$module$node_modules$three$build$three_module;this.normalScale=new Vector2$$module$node_modules$three$build$three_module(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.envMap=this.alphaMap=this.specularMap=null;this.combine=MultiplyOperation$$module$node_modules$three$build$three_module;this.reflectivity=1;this.refractionRatio=
.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)}MeshPhongMaterial$$module$node_modules$three$build$three_module.prototype=Object.create(Material$$module$node_modules$three$build$three_module.prototype);MeshPhongMaterial$$module$node_modules$three$build$three_module.prototype.constructor=MeshPhongMaterial$$module$node_modules$three$build$three_module;
MeshPhongMaterial$$module$node_modules$three$build$three_module.prototype.isMeshPhongMaterial=!0;
MeshPhongMaterial$$module$node_modules$three$build$three_module.prototype.copy=function(a){Material$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.color.copy(a.color);this.specular.copy(a.specular);this.shininess=a.shininess;this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;
this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalMapType=a.normalMapType;this.normalScale.copy(a.normalScale);this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;
this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};
function MeshToonMaterial$$module$node_modules$three$build$three_module(a){Material$$module$node_modules$three$build$three_module.call(this);this.defines={TOON:""};this.type="MeshToonMaterial";this.color=new Color$$module$node_modules$three$build$three_module(16777215);this.lightMap=this.gradientMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new Color$$module$node_modules$three$build$three_module(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=
null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap$$module$node_modules$three$build$three_module;this.normalScale=new Vector2$$module$node_modules$three$build$three_module(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)}
MeshToonMaterial$$module$node_modules$three$build$three_module.prototype=Object.create(Material$$module$node_modules$three$build$three_module.prototype);MeshToonMaterial$$module$node_modules$three$build$three_module.prototype.constructor=MeshToonMaterial$$module$node_modules$three$build$three_module;MeshToonMaterial$$module$node_modules$three$build$three_module.prototype.isMeshToonMaterial=!0;
MeshToonMaterial$$module$node_modules$three$build$three_module.prototype.copy=function(a){Material$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.gradientMap=a.gradientMap;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;this.bumpMap=a.bumpMap;this.bumpScale=
a.bumpScale;this.normalMap=a.normalMap;this.normalMapType=a.normalMapType;this.normalScale.copy(a.normalScale);this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.alphaMap=a.alphaMap;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;
return this};
function MeshNormalMaterial$$module$node_modules$three$build$three_module(a){Material$$module$node_modules$three$build$three_module.call(this);this.type="MeshNormalMaterial";this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap$$module$node_modules$three$build$three_module;this.normalScale=new Vector2$$module$node_modules$three$build$three_module(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=!1;this.wireframeLinewidth=
1;this.morphNormals=this.morphTargets=this.skinning=this.fog=!1;this.setValues(a)}MeshNormalMaterial$$module$node_modules$three$build$three_module.prototype=Object.create(Material$$module$node_modules$three$build$three_module.prototype);MeshNormalMaterial$$module$node_modules$three$build$three_module.prototype.constructor=MeshNormalMaterial$$module$node_modules$three$build$three_module;MeshNormalMaterial$$module$node_modules$three$build$three_module.prototype.isMeshNormalMaterial=!0;
MeshNormalMaterial$$module$node_modules$three$build$three_module.prototype.copy=function(a){Material$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalMapType=a.normalMapType;this.normalScale.copy(a.normalScale);this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;
this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};
function MeshLambertMaterial$$module$node_modules$three$build$three_module(a){Material$$module$node_modules$three$build$three_module.call(this);this.type="MeshLambertMaterial";this.color=new Color$$module$node_modules$three$build$three_module(16777215);this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new Color$$module$node_modules$three$build$three_module(0);this.emissiveIntensity=1;this.envMap=this.alphaMap=this.specularMap=this.emissiveMap=
null;this.combine=MultiplyOperation$$module$node_modules$three$build$three_module;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)}MeshLambertMaterial$$module$node_modules$three$build$three_module.prototype=Object.create(Material$$module$node_modules$three$build$three_module.prototype);
MeshLambertMaterial$$module$node_modules$three$build$three_module.prototype.constructor=MeshLambertMaterial$$module$node_modules$three$build$three_module;MeshLambertMaterial$$module$node_modules$three$build$three_module.prototype.isMeshLambertMaterial=!0;
MeshLambertMaterial$$module$node_modules$three$build$three_module.prototype.copy=function(a){Material$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;
this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};
function MeshMatcapMaterial$$module$node_modules$three$build$three_module(a){Material$$module$node_modules$three$build$three_module.call(this);this.defines={MATCAP:""};this.type="MeshMatcapMaterial";this.color=new Color$$module$node_modules$three$build$three_module(16777215);this.bumpMap=this.map=this.matcap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap$$module$node_modules$three$build$three_module;this.normalScale=new Vector2$$module$node_modules$three$build$three_module(1,
1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)}MeshMatcapMaterial$$module$node_modules$three$build$three_module.prototype=Object.create(Material$$module$node_modules$three$build$three_module.prototype);MeshMatcapMaterial$$module$node_modules$three$build$three_module.prototype.constructor=MeshMatcapMaterial$$module$node_modules$three$build$three_module;
MeshMatcapMaterial$$module$node_modules$three$build$three_module.prototype.isMeshMatcapMaterial=!0;
MeshMatcapMaterial$$module$node_modules$three$build$three_module.prototype.copy=function(a){Material$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.defines={MATCAP:""};this.color.copy(a.color);this.matcap=a.matcap;this.map=a.map;this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalMapType=a.normalMapType;this.normalScale.copy(a.normalScale);this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=
a.displacementBias;this.alphaMap=a.alphaMap;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};function LineDashedMaterial$$module$node_modules$three$build$three_module(a){LineBasicMaterial$$module$node_modules$three$build$three_module.call(this);this.type="LineDashedMaterial";this.scale=1;this.dashSize=3;this.gapSize=1;this.setValues(a)}LineDashedMaterial$$module$node_modules$three$build$three_module.prototype=Object.create(LineBasicMaterial$$module$node_modules$three$build$three_module.prototype);
LineDashedMaterial$$module$node_modules$three$build$three_module.prototype.constructor=LineDashedMaterial$$module$node_modules$three$build$three_module;LineDashedMaterial$$module$node_modules$three$build$three_module.prototype.isLineDashedMaterial=!0;
LineDashedMaterial$$module$node_modules$three$build$three_module.prototype.copy=function(a){LineBasicMaterial$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.scale=a.scale;this.dashSize=a.dashSize;this.gapSize=a.gapSize;return this};
var Materials$$module$node_modules$three$build$three_module=Object.freeze({__proto__:null,ShadowMaterial:ShadowMaterial$$module$node_modules$three$build$three_module,SpriteMaterial:SpriteMaterial$$module$node_modules$three$build$three_module,RawShaderMaterial:RawShaderMaterial$$module$node_modules$three$build$three_module,ShaderMaterial:ShaderMaterial$$module$node_modules$three$build$three_module,PointsMaterial:PointsMaterial$$module$node_modules$three$build$three_module,MeshPhysicalMaterial:MeshPhysicalMaterial$$module$node_modules$three$build$three_module,
MeshStandardMaterial:MeshStandardMaterial$$module$node_modules$three$build$three_module,MeshPhongMaterial:MeshPhongMaterial$$module$node_modules$three$build$three_module,MeshToonMaterial:MeshToonMaterial$$module$node_modules$three$build$three_module,MeshNormalMaterial:MeshNormalMaterial$$module$node_modules$three$build$three_module,MeshLambertMaterial:MeshLambertMaterial$$module$node_modules$three$build$three_module,MeshDepthMaterial:MeshDepthMaterial$$module$node_modules$three$build$three_module,
MeshDistanceMaterial:MeshDistanceMaterial$$module$node_modules$three$build$three_module,MeshBasicMaterial:MeshBasicMaterial$$module$node_modules$three$build$three_module,MeshMatcapMaterial:MeshMatcapMaterial$$module$node_modules$three$build$three_module,LineDashedMaterial:LineDashedMaterial$$module$node_modules$three$build$three_module,LineBasicMaterial:LineBasicMaterial$$module$node_modules$three$build$three_module,Material:Material$$module$node_modules$three$build$three_module});
const AnimationUtils$$module$node_modules$three$build$three_module={arraySlice:function(a,b,c){return AnimationUtils$$module$node_modules$three$build$three_module.isTypedArray(a)?new a.constructor(a.subarray(b,void 0!==c?c:a.length)):a.slice(b,c)},convertArray:function(a,b,c){return!a||!c&&a.constructor===b?a:"number"===typeof b.BYTES_PER_ELEMENT?new b(a):Array.prototype.slice.call(a)},isTypedArray:function(a){return ArrayBuffer.isView(a)&&!(a instanceof DataView)},getKeyframeOrder:function(a){const b=
a.length,c=Array(b);for(let d=0;d!==b;++d)c[d]=d;c.sort(function(d,e){return a[d]-a[e]});return c},sortedArray:function(a,b,c){const d=a.length,e=new a.constructor(d);for(let f=0,h=0;h!==d;++f){const g=c[f]*b;for(let k=0;k!==b;++k)e[h++]=a[g+k]}return e},flattenJSON:function(a,b,c,d){let e=1,f=a[0];for(;void 0!==f&&void 0===f[d];)f=a[e++];if(void 0!==f){var h=f[d];if(void 0!==h)if(Array.isArray(h)){do h=f[d],void 0!==h&&(b.push(f.time),c.push.apply(c,h)),f=a[e++];while(void 0!==f)}else if(void 0!==
h.toArray){do h=f[d],void 0!==h&&(b.push(f.time),h.toArray(c,c.length)),f=a[e++];while(void 0!==f)}else{do h=f[d],void 0!==h&&(b.push(f.time),c.push(h)),f=a[e++];while(void 0!==f)}}},subclip:function(a,b,c,d,e){e=e||30;a=a.clone();a.name=b;b=[];for(let h=0;h<a.tracks.length;++h){const g=a.tracks[h],k=g.getValueSize(),n=[],w=[];for(let v=0;v<g.times.length;++v){var f=g.times[v]*e;if(!(f<c||f>=d))for(n.push(g.times[v]),f=0;f<k;++f)w.push(g.values[v*k+f])}0!==n.length&&(g.times=AnimationUtils$$module$node_modules$three$build$three_module.convertArray(n,
g.times.constructor),g.values=AnimationUtils$$module$node_modules$three$build$three_module.convertArray(w,g.values.constructor),b.push(g))}a.tracks=b;c=Infinity;for(d=0;d<a.tracks.length;++d)c>a.tracks[d].times[0]&&(c=a.tracks[d].times[0]);for(d=0;d<a.tracks.length;++d)a.tracks[d].shift(-1*c);a.resetDuration();return a},makeClipAdditive:function(a,b,c,d){void 0===b&&(b=0);void 0===c&&(c=a);if(void 0===d||0>=d)d=30;const e=a.tracks.length;b/=d;for(d=0;d<e;++d){const n=c.tracks[d],w=n.ValueTypeName;
if("bool"===w||"string"===w)continue;const v=a.tracks.find(function(F){return F.name===n.name&&F.ValueTypeName===w});if(void 0===v)continue;var f=0,h=n.getValueSize();n.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=h/3);let x=0;const z=v.getValueSize();v.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(x=z/3);var g=n.times.length-1;if(b<=n.times[0])f=AnimationUtils$$module$node_modules$three$build$three_module.arraySlice(n.values,f,h-f);else if(b>=n.times[g])g=g*h+f,
f=AnimationUtils$$module$node_modules$three$build$three_module.arraySlice(n.values,g,g+h-f);else{g=n.createInterpolant();var k=f;f=h-f;g.evaluate(b);f=AnimationUtils$$module$node_modules$three$build$three_module.arraySlice(g.resultBuffer,k,f)}"quaternion"===w&&(new Quaternion$$module$node_modules$three$build$three_module).fromArray(f).normalize().conjugate().toArray(f);h=v.times.length;for(g=0;g<h;++g)if(k=g*z+x,"quaternion"===w)Quaternion$$module$node_modules$three$build$three_module.multiplyQuaternionsFlat(v.values,
k,f,0,v.values,k);else{const F=z-2*x;for(let N=0;N<F;++N)v.values[k+N]-=f[N]}}a.blendMode=AdditiveAnimationBlendMode$$module$node_modules$three$build$three_module;return a}};function Interpolant$$module$node_modules$three$build$three_module(a,b,c,d){this.parameterPositions=a;this._cachedIndex=0;this.resultBuffer=void 0!==d?d:new b.constructor(c);this.sampleValues=b;this.valueSize=c}
Object.assign(Interpolant$$module$node_modules$three$build$three_module.prototype,{evaluate:function(a){const b=this.parameterPositions;let c=this._cachedIndex;var d=b[c],e=b[c-1];a:{b:{c:{d:if(!(a<d)){for(var f=c+2;;){if(void 0===d){if(a<e)break d;this._cachedIndex=c=b.length;return this.afterEnd_(c-1,a,e)}if(c===f)break;e=d;d=b[++c];if(a<d)break b}d=b.length;break c}if(a>=e)break a;else{f=b[1];a<f&&(c=2,e=f);for(f=c-2;;){if(void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(c===f)break;
d=e;e=b[--c-1];if(a>=e)break b}d=c;c=0}}for(;c<d;)e=c+d>>>1,a<b[e]?d=e:c=e+1;d=b[c];e=b[c-1];if(void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(void 0===d)return this._cachedIndex=c=b.length,this.afterEnd_(c-1,e,a)}this._cachedIndex=c;this.intervalChanged_(c,e,d)}return this.interpolate_(c,e,a,d)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(a){const b=this.resultBuffer,c=this.sampleValues,d=this.valueSize;
a*=d;for(let e=0;e!==d;++e)b[e]=c[a+e];return b},interpolate_:function(){throw Error("call to abstract method");},intervalChanged_:function(){}});Object.assign(Interpolant$$module$node_modules$three$build$three_module.prototype,{beforeStart_:Interpolant$$module$node_modules$three$build$three_module.prototype.copySampleValue_,afterEnd_:Interpolant$$module$node_modules$three$build$three_module.prototype.copySampleValue_});
function CubicInterpolant$$module$node_modules$three$build$three_module(a,b,c,d){Interpolant$$module$node_modules$three$build$three_module.call(this,a,b,c,d);this._offsetNext=this._weightNext=this._offsetPrev=this._weightPrev=-0}
CubicInterpolant$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Interpolant$$module$node_modules$three$build$three_module.prototype),{constructor:CubicInterpolant$$module$node_modules$three$build$three_module,DefaultSettings_:{endingStart:ZeroCurvatureEnding$$module$node_modules$three$build$three_module,endingEnd:ZeroCurvatureEnding$$module$node_modules$three$build$three_module},intervalChanged_:function(a,b,c){var d=this.parameterPositions;let e=a-2,f=a+1,h=d[e],
g=d[f];if(void 0===h)switch(this.getSettings_().endingStart){case ZeroSlopeEnding$$module$node_modules$three$build$three_module:e=a;h=2*b-c;break;case WrapAroundEnding$$module$node_modules$three$build$three_module:e=d.length-2;h=b+d[e]-d[e+1];break;default:e=a,h=c}if(void 0===g)switch(this.getSettings_().endingEnd){case ZeroSlopeEnding$$module$node_modules$three$build$three_module:f=a;g=2*c-b;break;case WrapAroundEnding$$module$node_modules$three$build$three_module:f=1;g=c+d[1]-d[0];break;default:f=
a-1,g=b}a=.5*(c-b);d=this.valueSize;this._weightPrev=a/(b-h);this._weightNext=a/(g-c);this._offsetPrev=e*d;this._offsetNext=f*d},interpolate_:function(a,b,c,d){const e=this.resultBuffer,f=this.sampleValues,h=this.valueSize;a*=h;const g=a-h,k=this._offsetPrev,n=this._offsetNext;var w=this._weightPrev,v=this._weightNext,x=(c-b)/(d-b);c=x*x;d=c*x;b=-w*d+2*w*c-w*x;w=(1+w)*d+(-1.5-2*w)*c+(-.5+w)*x+1;x=(-1-v)*d+(1.5+v)*c+.5*x;v=v*d-v*c;for(c=0;c!==h;++c)e[c]=b*f[k+c]+w*f[g+c]+x*f[a+c]+v*f[n+c];return e}});
function LinearInterpolant$$module$node_modules$three$build$three_module(a,b,c,d){Interpolant$$module$node_modules$three$build$three_module.call(this,a,b,c,d)}
LinearInterpolant$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Interpolant$$module$node_modules$three$build$three_module.prototype),{constructor:LinearInterpolant$$module$node_modules$three$build$three_module,interpolate_:function(a,b,c,d){const e=this.resultBuffer,f=this.sampleValues,h=this.valueSize;a*=h;const g=a-h;b=(c-b)/(d-b);c=1-b;for(d=0;d!==h;++d)e[d]=f[g+d]*c+f[a+d]*b;return e}});
function DiscreteInterpolant$$module$node_modules$three$build$three_module(a,b,c,d){Interpolant$$module$node_modules$three$build$three_module.call(this,a,b,c,d)}DiscreteInterpolant$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Interpolant$$module$node_modules$three$build$three_module.prototype),{constructor:DiscreteInterpolant$$module$node_modules$three$build$three_module,interpolate_:function(a){return this.copySampleValue_(a-1)}});
function KeyframeTrack$$module$node_modules$three$build$three_module(a,b,c,d){if(void 0===a)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===b||0===b.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+a);this.name=a;this.times=AnimationUtils$$module$node_modules$three$build$three_module.convertArray(b,this.TimeBufferType);this.values=AnimationUtils$$module$node_modules$three$build$three_module.convertArray(c,this.ValueBufferType);this.setInterpolation(d||
this.DefaultInterpolation)}Object.assign(KeyframeTrack$$module$node_modules$three$build$three_module,{toJSON:function(a){var b=a.constructor;if(void 0!==b.toJSON)b=b.toJSON(a);else{b={name:a.name,times:AnimationUtils$$module$node_modules$three$build$three_module.convertArray(a.times,Array),values:AnimationUtils$$module$node_modules$three$build$three_module.convertArray(a.values,Array)};const c=a.getInterpolation();c!==a.DefaultInterpolation&&(b.interpolation=c)}b.type=a.ValueTypeName;return b}});
Object.assign(KeyframeTrack$$module$node_modules$three$build$three_module.prototype,{constructor:KeyframeTrack$$module$node_modules$three$build$three_module,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:InterpolateLinear$$module$node_modules$three$build$three_module,InterpolantFactoryMethodDiscrete:function(a){return new DiscreteInterpolant$$module$node_modules$three$build$three_module(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodLinear:function(a){return new LinearInterpolant$$module$node_modules$three$build$three_module(this.times,
this.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:function(a){return new CubicInterpolant$$module$node_modules$three$build$three_module(this.times,this.values,this.getValueSize(),a)},setInterpolation:function(a){switch(a){case InterpolateDiscrete$$module$node_modules$three$build$three_module:var b=this.InterpolantFactoryMethodDiscrete;break;case InterpolateLinear$$module$node_modules$three$build$three_module:b=this.InterpolantFactoryMethodLinear;break;case InterpolateSmooth$$module$node_modules$three$build$three_module:b=
this.InterpolantFactoryMethodSmooth}if(void 0===b){b="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant)if(a!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(b);console.warn("THREE.KeyframeTrack:",b);return this}this.createInterpolant=b;return this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return InterpolateDiscrete$$module$node_modules$three$build$three_module;
case this.InterpolantFactoryMethodLinear:return InterpolateLinear$$module$node_modules$three$build$three_module;case this.InterpolantFactoryMethodSmooth:return InterpolateSmooth$$module$node_modules$three$build$three_module}},getValueSize:function(){return this.values.length/this.times.length},shift:function(a){if(0!==a){const b=this.times;for(let c=0,d=b.length;c!==d;++c)b[c]+=a}return this},scale:function(a){if(1!==a){const b=this.times;for(let c=0,d=b.length;c!==d;++c)b[c]*=a}return this},trim:function(a,
b){const c=this.times,d=c.length;let e=0,f=d-1;for(;e!==d&&c[e]<a;)++e;for(;-1!==f&&c[f]>b;)--f;++f;if(0!==e||f!==d)e>=f&&(f=Math.max(f,1),e=f-1),a=this.getValueSize(),this.times=AnimationUtils$$module$node_modules$three$build$three_module.arraySlice(c,e,f),this.values=AnimationUtils$$module$node_modules$three$build$three_module.arraySlice(this.values,e*a,f*a);return this},validate:function(){let a=!0;var b=this.getValueSize();0!==b-Math.floor(b)&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",
this),a=!1);var c=this.times;b=this.values;const d=c.length;0===d&&(console.error("THREE.KeyframeTrack: Track is empty.",this),a=!1);let e=null;for(let f=0;f!==d;f++){const h=c[f];if("number"===typeof h&&isNaN(h)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,f,h);a=!1;break}if(null!==e&&e>h){console.error("THREE.KeyframeTrack: Out of order keys.",this,f,h,e);a=!1;break}e=h}if(void 0!==b&&AnimationUtils$$module$node_modules$three$build$three_module.isTypedArray(b))for(let f=
0,h=b.length;f!==h;++f)if(c=b[f],isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,f,c);a=!1;break}return a},optimize:function(){const a=AnimationUtils$$module$node_modules$three$build$three_module.arraySlice(this.times),b=AnimationUtils$$module$node_modules$three$build$three_module.arraySlice(this.values),c=this.getValueSize(),d=this.getInterpolation()===InterpolateSmooth$$module$node_modules$three$build$three_module,e=a.length-1;let f=1;for(let n=1;n<e;++n){var h=
!1,g=a[n];if(g!==a[n+1]&&(1!==n||g!==g[0]))if(d)h=!0;else{g=n*c;var k=g-c;const w=g+c;for(let v=0;v!==c;++v){const x=b[g+v];if(x!==b[k+v]||x!==b[w+v]){h=!0;break}}}if(h){if(n!==f)for(a[f]=a[n],h=n*c,g=f*c,k=0;k!==c;++k)b[g+k]=b[h+k];++f}}if(0<e){a[f]=a[e];for(let n=e*c,w=f*c,v=0;v!==c;++v)b[w+v]=b[n+v];++f}f!==a.length?(this.times=AnimationUtils$$module$node_modules$three$build$three_module.arraySlice(a,0,f),this.values=AnimationUtils$$module$node_modules$three$build$three_module.arraySlice(b,0,f*
c)):(this.times=a,this.values=b);return this},clone:function(){var a=AnimationUtils$$module$node_modules$three$build$three_module.arraySlice(this.times,0);const b=AnimationUtils$$module$node_modules$three$build$three_module.arraySlice(this.values,0);a=new this.constructor(this.name,a,b);a.createInterpolant=this.createInterpolant;return a}});
function BooleanKeyframeTrack$$module$node_modules$three$build$three_module(a,b,c){KeyframeTrack$$module$node_modules$three$build$three_module.call(this,a,b,c)}
BooleanKeyframeTrack$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(KeyframeTrack$$module$node_modules$three$build$three_module.prototype),{constructor:BooleanKeyframeTrack$$module$node_modules$three$build$three_module,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:InterpolateDiscrete$$module$node_modules$three$build$three_module,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});
function ColorKeyframeTrack$$module$node_modules$three$build$three_module(a,b,c,d){KeyframeTrack$$module$node_modules$three$build$three_module.call(this,a,b,c,d)}ColorKeyframeTrack$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(KeyframeTrack$$module$node_modules$three$build$three_module.prototype),{constructor:ColorKeyframeTrack$$module$node_modules$three$build$three_module,ValueTypeName:"color"});
function NumberKeyframeTrack$$module$node_modules$three$build$three_module(a,b,c,d){KeyframeTrack$$module$node_modules$three$build$three_module.call(this,a,b,c,d)}NumberKeyframeTrack$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(KeyframeTrack$$module$node_modules$three$build$three_module.prototype),{constructor:NumberKeyframeTrack$$module$node_modules$three$build$three_module,ValueTypeName:"number"});
function QuaternionLinearInterpolant$$module$node_modules$three$build$three_module(a,b,c,d){Interpolant$$module$node_modules$three$build$three_module.call(this,a,b,c,d)}
QuaternionLinearInterpolant$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Interpolant$$module$node_modules$three$build$three_module.prototype),{constructor:QuaternionLinearInterpolant$$module$node_modules$three$build$three_module,interpolate_:function(a,b,c,d){const e=this.resultBuffer,f=this.sampleValues,h=this.valueSize;b=(c-b)/(d-b);a*=h;for(c=a+h;a!==c;a+=4)Quaternion$$module$node_modules$three$build$three_module.slerpFlat(e,0,f,a-h,f,a,b);return e}});
function QuaternionKeyframeTrack$$module$node_modules$three$build$three_module(a,b,c,d){KeyframeTrack$$module$node_modules$three$build$three_module.call(this,a,b,c,d)}
QuaternionKeyframeTrack$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(KeyframeTrack$$module$node_modules$three$build$three_module.prototype),{constructor:QuaternionKeyframeTrack$$module$node_modules$three$build$three_module,ValueTypeName:"quaternion",DefaultInterpolation:InterpolateLinear$$module$node_modules$three$build$three_module,InterpolantFactoryMethodLinear:function(a){return new QuaternionLinearInterpolant$$module$node_modules$three$build$three_module(this.times,
this.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:void 0});function StringKeyframeTrack$$module$node_modules$three$build$three_module(a,b,c,d){KeyframeTrack$$module$node_modules$three$build$three_module.call(this,a,b,c,d)}
StringKeyframeTrack$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(KeyframeTrack$$module$node_modules$three$build$three_module.prototype),{constructor:StringKeyframeTrack$$module$node_modules$three$build$three_module,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:InterpolateDiscrete$$module$node_modules$three$build$three_module,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});
function VectorKeyframeTrack$$module$node_modules$three$build$three_module(a,b,c,d){KeyframeTrack$$module$node_modules$three$build$three_module.call(this,a,b,c,d)}VectorKeyframeTrack$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(KeyframeTrack$$module$node_modules$three$build$three_module.prototype),{constructor:VectorKeyframeTrack$$module$node_modules$three$build$three_module,ValueTypeName:"vector"});
function AnimationClip$$module$node_modules$three$build$three_module(a,b,c,d){this.name=a;this.tracks=c;this.duration=void 0!==b?b:-1;this.blendMode=void 0!==d?d:NormalAnimationBlendMode$$module$node_modules$three$build$three_module;this.uuid=MathUtils$$module$node_modules$three$build$three_module.generateUUID();0>this.duration&&this.resetDuration()}
function getTrackTypeForValueTypeName$$module$node_modules$three$build$three_module(a){switch(a.toLowerCase()){case "scalar":case "double":case "float":case "number":case "integer":return NumberKeyframeTrack$$module$node_modules$three$build$three_module;case "vector":case "vector2":case "vector3":case "vector4":return VectorKeyframeTrack$$module$node_modules$three$build$three_module;case "color":return ColorKeyframeTrack$$module$node_modules$three$build$three_module;case "quaternion":return QuaternionKeyframeTrack$$module$node_modules$three$build$three_module;
case "bool":case "boolean":return BooleanKeyframeTrack$$module$node_modules$three$build$three_module;case "string":return StringKeyframeTrack$$module$node_modules$three$build$three_module}throw Error("THREE.KeyframeTrack: Unsupported typeName: "+a);}
function parseKeyframeTrack$$module$node_modules$three$build$three_module(a){if(void 0===a.type)throw Error("THREE.KeyframeTrack: track type undefined, can not parse");const b=getTrackTypeForValueTypeName$$module$node_modules$three$build$three_module(a.type);if(void 0===a.times){const c=[],d=[];AnimationUtils$$module$node_modules$three$build$three_module.flattenJSON(a.keys,c,d,"value");a.times=c;a.values=d}return void 0!==b.parse?b.parse(a):new b(a.name,a.times,a.values,a.interpolation)}
Object.assign(AnimationClip$$module$node_modules$three$build$three_module,{parse:function(a){const b=[],c=a.tracks,d=1/(a.fps||1);for(let e=0,f=c.length;e!==f;++e)b.push(parseKeyframeTrack$$module$node_modules$three$build$three_module(c[e]).scale(d));return new AnimationClip$$module$node_modules$three$build$three_module(a.name,a.duration,b,a.blendMode)},toJSON:function(a){const b=[],c=a.tracks;a={name:a.name,duration:a.duration,tracks:b,uuid:a.uuid,blendMode:a.blendMode};for(let d=0,e=c.length;d!==
e;++d)b.push(KeyframeTrack$$module$node_modules$three$build$three_module.toJSON(c[d]));return a},CreateFromMorphTargetSequence:function(a,b,c,d){const e=b.length,f=[];for(let h=0;h<e;h++){let g=[],k=[];g.push((h+e-1)%e,h,(h+1)%e);k.push(0,1,0);const n=AnimationUtils$$module$node_modules$three$build$three_module.getKeyframeOrder(g);g=AnimationUtils$$module$node_modules$three$build$three_module.sortedArray(g,1,n);k=AnimationUtils$$module$node_modules$three$build$three_module.sortedArray(k,1,n);d||0!==
g[0]||(g.push(e),k.push(k[0]));f.push((new NumberKeyframeTrack$$module$node_modules$three$build$three_module(".morphTargetInfluences["+b[h].name+"]",g,k)).scale(1/c))}return new AnimationClip$$module$node_modules$three$build$three_module(a,-1,f)},findByName:function(a,b){let c=a;Array.isArray(a)||(c=a.geometry&&a.geometry.animations||a.animations);for(a=0;a<c.length;a++)if(c[a].name===b)return c[a];return null},CreateClipsFromMorphTargetSequences:function(a,b,c){const d={},e=/^([\w-]*?)([\d]+)$/;
for(let h=0,g=a.length;h<g;h++){const k=a[h];var f=k.name.match(e);if(f&&1<f.length){f=f[1];let n=d[f];n||(d[f]=n=[]);n.push(k)}}a=[];for(const h in d)a.push(AnimationClip$$module$node_modules$three$build$three_module.CreateFromMorphTargetSequence(h,d[h],b,c));return a},parseAnimation:function(a,b){if(!a)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const c=function(w,v,x,z,F){if(0!==x.length){const N=[],p=[];AnimationUtils$$module$node_modules$three$build$three_module.flattenJSON(x,
N,p,z);0!==N.length&&F.push(new w(v,N,p))}},d=[],e=a.name||"default",f=a.fps||30,h=a.blendMode;var g=a.length||-1;a=a.hierarchy||[];for(let w=0;w<a.length;w++){const v=a[w].keys;if(v&&0!==v.length)if(v[0].morphTargets){g={};var k=void 0;for(k=0;k<v.length;k++)if(v[k].morphTargets)for(var n=0;n<v[k].morphTargets.length;n++)g[v[k].morphTargets[n]]=-1;for(const x in g){n=[];const z=[];for(let F=0;F!==v[k].morphTargets.length;++F){const N=v[k];n.push(N.time);z.push(N.morphTarget===x?1:0)}d.push(new NumberKeyframeTrack$$module$node_modules$three$build$three_module(".morphTargetInfluence["+
x+"]",n,z))}g=g.length*(f||1)}else k=".bones["+b[w].name+"]",c(VectorKeyframeTrack$$module$node_modules$three$build$three_module,k+".position",v,"pos",d),c(QuaternionKeyframeTrack$$module$node_modules$three$build$three_module,k+".quaternion",v,"rot",d),c(VectorKeyframeTrack$$module$node_modules$three$build$three_module,k+".scale",v,"scl",d)}return 0===d.length?null:new AnimationClip$$module$node_modules$three$build$three_module(e,g,d,h)}});
Object.assign(AnimationClip$$module$node_modules$three$build$three_module.prototype,{resetDuration:function(){var a=this.tracks;let b=0;for(let c=0,d=a.length;c!==d;++c)a=this.tracks[c],b=Math.max(b,a.times[a.times.length-1]);this.duration=b;return this},trim:function(){for(let a=0;a<this.tracks.length;a++)this.tracks[a].trim(0,this.duration);return this},validate:function(){let a=!0;for(let b=0;b<this.tracks.length;b++)a=a&&this.tracks[b].validate();return a},optimize:function(){for(let a=0;a<this.tracks.length;a++)this.tracks[a].optimize();
return this},clone:function(){const a=[];for(let b=0;b<this.tracks.length;b++)a.push(this.tracks[b].clone());return new AnimationClip$$module$node_modules$three$build$three_module(this.name,this.duration,a,this.blendMode)}});const Cache$$module$node_modules$three$build$three_module={enabled:!1,files:{},add:function(a,b){!1!==this.enabled&&(this.files[a]=b)},get:function(a){if(!1!==this.enabled)return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}};
function LoadingManager$$module$node_modules$three$build$three_module(a,b,c){const d=this;let e=!1,f=0,h=0,g=void 0;const k=[];this.onStart=void 0;this.onLoad=a;this.onProgress=b;this.onError=c;this.itemStart=function(n){h++;if(!1===e&&void 0!==d.onStart)d.onStart(n,f,h);e=!0};this.itemEnd=function(n){f++;if(void 0!==d.onProgress)d.onProgress(n,f,h);if(f===h&&(e=!1,void 0!==d.onLoad))d.onLoad()};this.itemError=function(n){if(void 0!==d.onError)d.onError(n)};this.resolveURL=function(n){return g?g(n):
n};this.setURLModifier=function(n){g=n;return this};this.addHandler=function(n,w){k.push(n,w);return this};this.removeHandler=function(n){n=k.indexOf(n);-1!==n&&k.splice(n,2);return this};this.getHandler=function(n){for(let w=0,v=k.length;w<v;w+=2){const x=k[w],z=k[w+1];x.global&&(x.lastIndex=0);if(x.test(n))return z}return null}}const DefaultLoadingManager$$module$node_modules$three$build$three_module=new LoadingManager$$module$node_modules$three$build$three_module;
function Loader$$module$node_modules$three$build$three_module(a){this.manager=void 0!==a?a:DefaultLoadingManager$$module$node_modules$three$build$three_module;this.crossOrigin="anonymous";this.resourcePath=this.path="";this.requestHeader={}}
Object.assign(Loader$$module$node_modules$three$build$three_module.prototype,{load:function(){},loadAsync:function(a,b){const c=this;return new Promise(function(d,e){c.load(a,d,b,e)})},parse:function(){},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this},setResourcePath:function(a){this.resourcePath=a;return this},setRequestHeader:function(a){this.requestHeader=a;return this}});const loading$$module$node_modules$three$build$three_module={};
function FileLoader$$module$node_modules$three$build$three_module(a){Loader$$module$node_modules$three$build$three_module.call(this,a)}
FileLoader$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Loader$$module$node_modules$three$build$three_module.prototype),{constructor:FileLoader$$module$node_modules$three$build$three_module,load:function(a,b,c,d){void 0===a&&(a="");void 0!==this.path&&(a=this.path+a);a=this.manager.resolveURL(a);const e=this,f=Cache$$module$node_modules$three$build$three_module.get(a);if(void 0!==f)return e.manager.itemStart(a),setTimeout(function(){b&&b(f);e.manager.itemEnd(a)},
0),f;if(void 0!==loading$$module$node_modules$three$build$three_module[a])loading$$module$node_modules$three$build$three_module[a].push({onLoad:b,onProgress:c,onError:d});else{var h=a.match(/^data:(.*?)(;base64)?,(.*)$/);if(h){c=h[1];var g=!!h[2];h=h[3];h=decodeURIComponent(h);g&&(h=atob(h));try{let n;const w=(this.responseType||"").toLowerCase();switch(w){case "arraybuffer":case "blob":const v=new Uint8Array(h.length);for(g=0;g<h.length;g++)v[g]=h.charCodeAt(g);n="blob"===w?new Blob([v.buffer],{type:c}):
v.buffer;break;case "document":n=(new DOMParser).parseFromString(h,c);break;case "json":n=JSON.parse(h);break;default:n=h}setTimeout(function(){b&&b(n);e.manager.itemEnd(a)},0)}catch(n){setTimeout(function(){d&&d(n);e.manager.itemError(a);e.manager.itemEnd(a)},0)}}else{loading$$module$node_modules$three$build$three_module[a]=[];loading$$module$node_modules$three$build$three_module[a].push({onLoad:b,onProgress:c,onError:d});var k=new XMLHttpRequest;k.open("GET",a,!0);k.addEventListener("load",function(n){var w=
this.response;const v=loading$$module$node_modules$three$build$three_module[a];delete loading$$module$node_modules$three$build$three_module[a];if(200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received.");Cache$$module$node_modules$three$build$three_module.add(a,w);for(let x=0,z=v.length;x<z;x++)if(n=v[x],n.onLoad)n.onLoad(w)}else{for(let x=0,z=v.length;x<z;x++)if(w=v[x],w.onError)w.onError(n);e.manager.itemError(a)}e.manager.itemEnd(a)},!1);k.addEventListener("progress",
function(n){const w=loading$$module$node_modules$three$build$three_module[a];for(let v=0,x=w.length;v<x;v++){const z=w[v];if(z.onProgress)z.onProgress(n)}},!1);k.addEventListener("error",function(n){const w=loading$$module$node_modules$three$build$three_module[a];delete loading$$module$node_modules$three$build$three_module[a];for(let v=0,x=w.length;v<x;v++){const z=w[v];if(z.onError)z.onError(n)}e.manager.itemError(a);e.manager.itemEnd(a)},!1);k.addEventListener("abort",function(n){const w=loading$$module$node_modules$three$build$three_module[a];
delete loading$$module$node_modules$three$build$three_module[a];for(let v=0,x=w.length;v<x;v++){const z=w[v];if(z.onError)z.onError(n)}e.manager.itemError(a);e.manager.itemEnd(a)},!1);void 0!==this.responseType&&(k.responseType=this.responseType);void 0!==this.withCredentials&&(k.withCredentials=this.withCredentials);k.overrideMimeType&&k.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(g in this.requestHeader)k.setRequestHeader(g,this.requestHeader[g]);k.send(null)}e.manager.itemStart(a);
return k}},setResponseType:function(a){this.responseType=a;return this},setWithCredentials:function(a){this.withCredentials=a;return this},setMimeType:function(a){this.mimeType=a;return this}});function AnimationLoader$$module$node_modules$three$build$three_module(a){Loader$$module$node_modules$three$build$three_module.call(this,a)}
AnimationLoader$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Loader$$module$node_modules$three$build$three_module.prototype),{constructor:AnimationLoader$$module$node_modules$three$build$three_module,load:function(a,b,c,d){const e=this,f=new FileLoader$$module$node_modules$three$build$three_module(e.manager);f.setPath(e.path);f.setRequestHeader(e.requestHeader);f.load(a,function(h){try{b(e.parse(JSON.parse(h)))}catch(g){d?d(g):console.error(g),e.manager.itemError(a)}},
c,d)},parse:function(a){const b=[];for(let c=0;c<a.length;c++){const d=AnimationClip$$module$node_modules$three$build$three_module.parse(a[c]);b.push(d)}return b}});function CompressedTextureLoader$$module$node_modules$three$build$three_module(a){Loader$$module$node_modules$three$build$three_module.call(this,a)}
CompressedTextureLoader$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Loader$$module$node_modules$three$build$three_module.prototype),{constructor:CompressedTextureLoader$$module$node_modules$three$build$three_module,load:function(a,b,c,d){function e(w){k.load(a[w],function(v){v=f.parse(v,!0);h[w]={width:v.width,height:v.height,format:v.format,mipmaps:v.mipmaps};n+=1;6===n&&(1===v.mipmapCount&&(g.minFilter=LinearFilter$$module$node_modules$three$build$three_module),
g.format=v.format,g.needsUpdate=!0,b&&b(g))},c,d)}const f=this,h=[],g=new CompressedTexture$$module$node_modules$three$build$three_module;g.image=h;const k=new FileLoader$$module$node_modules$three$build$three_module(this.manager);k.setPath(this.path);k.setResponseType("arraybuffer");k.setRequestHeader(this.requestHeader);let n=0;if(Array.isArray(a))for(let w=0,v=a.length;w<v;++w)e(w);else k.load(a,function(w){w=f.parse(w,!0);if(w.isCubemap){const v=w.mipmaps.length/w.mipmapCount;for(let x=0;x<v;x++){h[x]=
{mipmaps:[]};for(let z=0;z<w.mipmapCount;z++)h[x].mipmaps.push(w.mipmaps[x*w.mipmapCount+z]),h[x].format=w.format,h[x].width=w.width,h[x].height=w.height}}else g.image.width=w.width,g.image.height=w.height,g.mipmaps=w.mipmaps;1===w.mipmapCount&&(g.minFilter=LinearFilter$$module$node_modules$three$build$three_module);g.format=w.format;g.needsUpdate=!0;b&&b(g)},c,d);return g}});
function ImageLoader$$module$node_modules$three$build$three_module(a){Loader$$module$node_modules$three$build$three_module.call(this,a)}
ImageLoader$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Loader$$module$node_modules$three$build$three_module.prototype),{constructor:ImageLoader$$module$node_modules$three$build$three_module,load:function(a,b,c,d){function e(){k.removeEventListener("load",e,!1);k.removeEventListener("error",f,!1);Cache$$module$node_modules$three$build$three_module.add(a,this);b&&b(this);h.manager.itemEnd(a)}function f(n){k.removeEventListener("load",e,!1);k.removeEventListener("error",
f,!1);d&&d(n);h.manager.itemError(a);h.manager.itemEnd(a)}void 0!==this.path&&(a=this.path+a);a=this.manager.resolveURL(a);const h=this,g=Cache$$module$node_modules$three$build$three_module.get(a);if(void 0!==g)return h.manager.itemStart(a),setTimeout(function(){b&&b(g);h.manager.itemEnd(a)},0),g;const k=document.createElementNS("http://www.w3.org/1999/xhtml","img");k.addEventListener("load",e,!1);k.addEventListener("error",f,!1);"data:"!==a.substr(0,5)&&void 0!==this.crossOrigin&&(k.crossOrigin=
this.crossOrigin);h.manager.itemStart(a);k.src=a;return k}});function CubeTextureLoader$$module$node_modules$three$build$three_module(a){Loader$$module$node_modules$three$build$three_module.call(this,a)}
CubeTextureLoader$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Loader$$module$node_modules$three$build$three_module.prototype),{constructor:CubeTextureLoader$$module$node_modules$three$build$three_module,load:function(a,b,c,d){function e(k){h.load(a[k],function(n){f.images[k]=n;g++;6===g&&(f.needsUpdate=!0,b&&b(f))},void 0,d)}const f=new CubeTexture$$module$node_modules$three$build$three_module,h=new ImageLoader$$module$node_modules$three$build$three_module(this.manager);
h.setCrossOrigin(this.crossOrigin);h.setPath(this.path);let g=0;for(c=0;c<a.length;++c)e(c);return f}});function DataTextureLoader$$module$node_modules$three$build$three_module(a){Loader$$module$node_modules$three$build$three_module.call(this,a)}
DataTextureLoader$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Loader$$module$node_modules$three$build$three_module.prototype),{constructor:DataTextureLoader$$module$node_modules$three$build$three_module,load:function(a,b,c,d){const e=this,f=new DataTexture$$module$node_modules$three$build$three_module,h=new FileLoader$$module$node_modules$three$build$three_module(this.manager);h.setResponseType("arraybuffer");h.setRequestHeader(this.requestHeader);h.setPath(this.path);
h.load(a,function(g){if(g=e.parse(g))void 0!==g.image?f.image=g.image:void 0!==g.data&&(f.image.width=g.width,f.image.height=g.height,f.image.data=g.data),f.wrapS=void 0!==g.wrapS?g.wrapS:ClampToEdgeWrapping$$module$node_modules$three$build$three_module,f.wrapT=void 0!==g.wrapT?g.wrapT:ClampToEdgeWrapping$$module$node_modules$three$build$three_module,f.magFilter=void 0!==g.magFilter?g.magFilter:LinearFilter$$module$node_modules$three$build$three_module,f.minFilter=void 0!==g.minFilter?g.minFilter:
LinearFilter$$module$node_modules$three$build$three_module,f.anisotropy=void 0!==g.anisotropy?g.anisotropy:1,void 0!==g.format&&(f.format=g.format),void 0!==g.type&&(f.type=g.type),void 0!==g.mipmaps&&(f.mipmaps=g.mipmaps,f.minFilter=LinearMipmapLinearFilter$$module$node_modules$three$build$three_module),1===g.mipmapCount&&(f.minFilter=LinearFilter$$module$node_modules$three$build$three_module),f.needsUpdate=!0,b&&b(f,g)},c,d);return f}});
function TextureLoader$$module$node_modules$three$build$three_module(a){Loader$$module$node_modules$three$build$three_module.call(this,a)}
TextureLoader$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Loader$$module$node_modules$three$build$three_module.prototype),{constructor:TextureLoader$$module$node_modules$three$build$three_module,load:function(a,b,c,d){const e=new Texture$$module$node_modules$three$build$three_module,f=new ImageLoader$$module$node_modules$three$build$three_module(this.manager);f.setCrossOrigin(this.crossOrigin);f.setPath(this.path);f.load(a,function(h){e.image=h;h=0<a.search(/\.jpe?g($|\?)/i)||
0===a.search(/^data:image\/jpeg/);e.format=h?RGBFormat$$module$node_modules$three$build$three_module:RGBAFormat$$module$node_modules$three$build$three_module;e.needsUpdate=!0;void 0!==b&&b(e)},c,d);return e}});function Curve$$module$node_modules$three$build$three_module(){this.type="Curve";this.arcLengthDivisions=200}
Object.assign(Curve$$module$node_modules$three$build$three_module.prototype,{getPoint:function(){console.warn("THREE.Curve: .getPoint() not implemented.");return null},getPointAt:function(a,b){a=this.getUtoTmapping(a);return this.getPoint(a,b)},getPoints:function(a){void 0===a&&(a=5);const b=[];for(let c=0;c<=a;c++)b.push(this.getPoint(c/a));return b},getSpacedPoints:function(a){void 0===a&&(a=5);const b=[];for(let c=0;c<=a;c++)b.push(this.getPointAt(c/a));return b},getLength:function(){const a=this.getLengths();
return a[a.length-1]},getLengths:function(a){void 0===a&&(a=this.arcLengthDivisions);if(this.cacheArcLengths&&this.cacheArcLengths.length===a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const b=[];let c,d=this.getPoint(0),e=0;b.push(0);for(let f=1;f<=a;f++)c=this.getPoint(f/a),e+=c.distanceTo(d),b.push(e),d=c;return this.cacheArcLengths=b},updateArcLengths:function(){this.needsUpdate=!0;this.getLengths()},getUtoTmapping:function(a,b){const c=this.getLengths(),d=c.length;b=
b?b:a*c[d-1];var e=0;let f=d-1,h;for(;e<=f;)if(a=Math.floor(e+(f-e)/2),h=c[a]-b,0>h)e=a+1;else if(0<h)f=a-1;else{f=a;break}a=f;if(c[a]===b)return a/(d-1);e=c[a];return(a+(b-e)/(c[a+1]-e))/(d-1)},getTangent:function(a,b){var c=a-1E-4;a+=1E-4;0>c&&(c=0);1<a&&(a=1);c=this.getPoint(c);a=this.getPoint(a);b=b||(c.isVector2?new Vector2$$module$node_modules$three$build$three_module:new Vector3$$module$node_modules$three$build$three_module);b.copy(a).sub(c).normalize();return b},getTangentAt:function(a,b){a=
this.getUtoTmapping(a);return this.getTangent(a,b)},computeFrenetFrames:function(a,b){var c=new Vector3$$module$node_modules$three$build$three_module;const d=[],e=[],f=[];var h=new Vector3$$module$node_modules$three$build$three_module;const g=new Matrix4$$module$node_modules$three$build$three_module;for(var k=0;k<=a;k++)d[k]=this.getTangentAt(k/a,new Vector3$$module$node_modules$three$build$three_module),d[k].normalize();e[0]=new Vector3$$module$node_modules$three$build$three_module;f[0]=new Vector3$$module$node_modules$three$build$three_module;
k=Number.MAX_VALUE;const n=Math.abs(d[0].x),w=Math.abs(d[0].y),v=Math.abs(d[0].z);n<=k&&(k=n,c.set(1,0,0));w<=k&&(k=w,c.set(0,1,0));v<=k&&c.set(0,0,1);h.crossVectors(d[0],c).normalize();e[0].crossVectors(d[0],h);f[0].crossVectors(d[0],e[0]);for(c=1;c<=a;c++)e[c]=e[c-1].clone(),f[c]=f[c-1].clone(),h.crossVectors(d[c-1],d[c]),h.length()>Number.EPSILON&&(h.normalize(),k=Math.acos(MathUtils$$module$node_modules$three$build$three_module.clamp(d[c-1].dot(d[c]),-1,1)),e[c].applyMatrix4(g.makeRotationAxis(h,
k))),f[c].crossVectors(d[c],e[c]);if(!0===b)for(b=Math.acos(MathUtils$$module$node_modules$three$build$three_module.clamp(e[0].dot(e[a]),-1,1)),b/=a,0<d[0].dot(h.crossVectors(e[0],e[a]))&&(b=-b),h=1;h<=a;h++)e[h].applyMatrix4(g.makeRotationAxis(d[h],b*h)),f[h].crossVectors(d[h],e[h]);return{tangents:d,normals:e,binormals:f}},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.arcLengthDivisions=a.arcLengthDivisions;return this},toJSON:function(){const a={metadata:{version:4.5,
type:"Curve",generator:"Curve.toJSON"}};a.arcLengthDivisions=this.arcLengthDivisions;a.type=this.type;return a},fromJSON:function(a){this.arcLengthDivisions=a.arcLengthDivisions;return this}});
function EllipseCurve$$module$node_modules$three$build$three_module(a,b,c,d,e,f,h,g){Curve$$module$node_modules$three$build$three_module.call(this);this.type="EllipseCurve";this.aX=a||0;this.aY=b||0;this.xRadius=c||1;this.yRadius=d||1;this.aStartAngle=e||0;this.aEndAngle=f||2*Math.PI;this.aClockwise=h||!1;this.aRotation=g||0}EllipseCurve$$module$node_modules$three$build$three_module.prototype=Object.create(Curve$$module$node_modules$three$build$three_module.prototype);
EllipseCurve$$module$node_modules$three$build$three_module.prototype.constructor=EllipseCurve$$module$node_modules$three$build$three_module;EllipseCurve$$module$node_modules$three$build$three_module.prototype.isEllipseCurve=!0;
EllipseCurve$$module$node_modules$three$build$three_module.prototype.getPoint=function(a,b){b=b||new Vector2$$module$node_modules$three$build$three_module;for(var c=2*Math.PI,d=this.aEndAngle-this.aStartAngle,e=Math.abs(d)<Number.EPSILON;0>d;)d+=c;for(;d>c;)d-=c;d<Number.EPSILON&&(d=e?0:c);!0!==this.aClockwise||e||(d=d===c?-c:d-c);c=this.aStartAngle+a*d;a=this.aX+this.xRadius*Math.cos(c);var f=this.aY+this.yRadius*Math.sin(c);0!==this.aRotation&&(c=Math.cos(this.aRotation),d=Math.sin(this.aRotation),
e=a-this.aX,f-=this.aY,a=e*c-f*d+this.aX,f=e*d+f*c+this.aY);return b.set(a,f)};EllipseCurve$$module$node_modules$three$build$three_module.prototype.copy=function(a){Curve$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.aX=a.aX;this.aY=a.aY;this.xRadius=a.xRadius;this.yRadius=a.yRadius;this.aStartAngle=a.aStartAngle;this.aEndAngle=a.aEndAngle;this.aClockwise=a.aClockwise;this.aRotation=a.aRotation;return this};
EllipseCurve$$module$node_modules$three$build$three_module.prototype.toJSON=function(){const a=Curve$$module$node_modules$three$build$three_module.prototype.toJSON.call(this);a.aX=this.aX;a.aY=this.aY;a.xRadius=this.xRadius;a.yRadius=this.yRadius;a.aStartAngle=this.aStartAngle;a.aEndAngle=this.aEndAngle;a.aClockwise=this.aClockwise;a.aRotation=this.aRotation;return a};
EllipseCurve$$module$node_modules$three$build$three_module.prototype.fromJSON=function(a){Curve$$module$node_modules$three$build$three_module.prototype.fromJSON.call(this,a);this.aX=a.aX;this.aY=a.aY;this.xRadius=a.xRadius;this.yRadius=a.yRadius;this.aStartAngle=a.aStartAngle;this.aEndAngle=a.aEndAngle;this.aClockwise=a.aClockwise;this.aRotation=a.aRotation;return this};
function ArcCurve$$module$node_modules$three$build$three_module(a,b,c,d,e,f){EllipseCurve$$module$node_modules$three$build$three_module.call(this,a,b,c,c,d,e,f);this.type="ArcCurve"}ArcCurve$$module$node_modules$three$build$three_module.prototype=Object.create(EllipseCurve$$module$node_modules$three$build$three_module.prototype);ArcCurve$$module$node_modules$three$build$three_module.prototype.constructor=ArcCurve$$module$node_modules$three$build$three_module;
ArcCurve$$module$node_modules$three$build$three_module.prototype.isArcCurve=!0;function CubicPoly$$module$node_modules$three$build$three_module(){let a=0,b=0,c=0,d=0;return{initCatmullRom:function(e,f,h,g,k){e=k*(h-e);g=k*(g-f);a=f;b=e;c=-3*f+3*h-2*e-g;d=2*f-2*h+e+g},initNonuniformCatmullRom:function(e,f,h,g,k,n,w){e=((f-e)/k-(h-e)/(k+n)+(h-f)/n)*n;g=((h-f)/n-(g-f)/(n+w)+(g-h)/w)*n;a=f;b=e;c=-3*f+3*h-2*e-g;d=2*f-2*h+e+g},calc:function(e){const f=e*e;return a+b*e+c*f+d*f*e}}}
const tmp$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,px$$module$node_modules$three$build$three_module=new CubicPoly$$module$node_modules$three$build$three_module,py$$module$node_modules$three$build$three_module=new CubicPoly$$module$node_modules$three$build$three_module,pz$$module$node_modules$three$build$three_module=new CubicPoly$$module$node_modules$three$build$three_module;
function CatmullRomCurve3$$module$node_modules$three$build$three_module(a,b,c,d){Curve$$module$node_modules$three$build$three_module.call(this);this.type="CatmullRomCurve3";this.points=a||[];this.closed=b||!1;this.curveType=c||"centripetal";this.tension=void 0!==d?d:.5}CatmullRomCurve3$$module$node_modules$three$build$three_module.prototype=Object.create(Curve$$module$node_modules$three$build$three_module.prototype);
CatmullRomCurve3$$module$node_modules$three$build$three_module.prototype.constructor=CatmullRomCurve3$$module$node_modules$three$build$three_module;CatmullRomCurve3$$module$node_modules$three$build$three_module.prototype.isCatmullRomCurve3=!0;
CatmullRomCurve3$$module$node_modules$three$build$three_module.prototype.getPoint=function(a,b){b=b||new Vector3$$module$node_modules$three$build$three_module;var c=this.points,d=c.length;a*=d-(this.closed?0:1);var e=Math.floor(a);a-=e;this.closed?e+=0<e?0:(Math.floor(Math.abs(e)/d)+1)*d:0===a&&e===d-1&&(e=d-2,a=1);let f;this.closed||0<e?f=c[(e-1)%d]:(tmp$$module$node_modules$three$build$three_module.subVectors(c[0],c[1]).add(c[0]),f=tmp$$module$node_modules$three$build$three_module);const h=c[e%
d],g=c[(e+1)%d];this.closed||e+2<d?c=c[(e+2)%d]:(tmp$$module$node_modules$three$build$three_module.subVectors(c[d-1],c[d-2]).add(c[d-1]),c=tmp$$module$node_modules$three$build$three_module);if("centripetal"===this.curveType||"chordal"===this.curveType){var k="chordal"===this.curveType?.5:.25;d=Math.pow(f.distanceToSquared(h),k);e=Math.pow(h.distanceToSquared(g),k);k=Math.pow(g.distanceToSquared(c),k);1E-4>e&&(e=1);1E-4>d&&(d=e);1E-4>k&&(k=e);px$$module$node_modules$three$build$three_module.initNonuniformCatmullRom(f.x,
h.x,g.x,c.x,d,e,k);py$$module$node_modules$three$build$three_module.initNonuniformCatmullRom(f.y,h.y,g.y,c.y,d,e,k);pz$$module$node_modules$three$build$three_module.initNonuniformCatmullRom(f.z,h.z,g.z,c.z,d,e,k)}else"catmullrom"===this.curveType&&(px$$module$node_modules$three$build$three_module.initCatmullRom(f.x,h.x,g.x,c.x,this.tension),py$$module$node_modules$three$build$three_module.initCatmullRom(f.y,h.y,g.y,c.y,this.tension),pz$$module$node_modules$three$build$three_module.initCatmullRom(f.z,
h.z,g.z,c.z,this.tension));b.set(px$$module$node_modules$three$build$three_module.calc(a),py$$module$node_modules$three$build$three_module.calc(a),pz$$module$node_modules$three$build$three_module.calc(a));return b};
CatmullRomCurve3$$module$node_modules$three$build$three_module.prototype.copy=function(a){Curve$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.points=[];for(let b=0,c=a.points.length;b<c;b++)this.points.push(a.points[b].clone());this.closed=a.closed;this.curveType=a.curveType;this.tension=a.tension;return this};
CatmullRomCurve3$$module$node_modules$three$build$three_module.prototype.toJSON=function(){const a=Curve$$module$node_modules$three$build$three_module.prototype.toJSON.call(this);a.points=[];for(let b=0,c=this.points.length;b<c;b++)a.points.push(this.points[b].toArray());a.closed=this.closed;a.curveType=this.curveType;a.tension=this.tension;return a};
CatmullRomCurve3$$module$node_modules$three$build$three_module.prototype.fromJSON=function(a){Curve$$module$node_modules$three$build$three_module.prototype.fromJSON.call(this,a);this.points=[];for(let b=0,c=a.points.length;b<c;b++){const d=a.points[b];this.points.push((new Vector3$$module$node_modules$three$build$three_module).fromArray(d))}this.closed=a.closed;this.curveType=a.curveType;this.tension=a.tension;return this};
function CatmullRom$$module$node_modules$three$build$three_module(a,b,c,d,e){b=.5*(d-b);e=.5*(e-c);const f=a*a;return(2*c-2*d+b+e)*a*f+(-3*c+3*d-2*b-e)*f+b*a+c}function QuadraticBezierP0$$module$node_modules$three$build$three_module(a,b){a=1-a;return a*a*b}function QuadraticBezierP1$$module$node_modules$three$build$three_module(a,b){return 2*(1-a)*a*b}function QuadraticBezierP2$$module$node_modules$three$build$three_module(a,b){return a*a*b}
function QuadraticBezier$$module$node_modules$three$build$three_module(a,b,c,d){return QuadraticBezierP0$$module$node_modules$three$build$three_module(a,b)+QuadraticBezierP1$$module$node_modules$three$build$three_module(a,c)+QuadraticBezierP2$$module$node_modules$three$build$three_module(a,d)}function CubicBezierP0$$module$node_modules$three$build$three_module(a,b){a=1-a;return a*a*a*b}function CubicBezierP1$$module$node_modules$three$build$three_module(a,b){const c=1-a;return 3*c*c*a*b}
function CubicBezierP2$$module$node_modules$three$build$three_module(a,b){return 3*(1-a)*a*a*b}function CubicBezierP3$$module$node_modules$three$build$three_module(a,b){return a*a*a*b}
function CubicBezier$$module$node_modules$three$build$three_module(a,b,c,d,e){return CubicBezierP0$$module$node_modules$three$build$three_module(a,b)+CubicBezierP1$$module$node_modules$three$build$three_module(a,c)+CubicBezierP2$$module$node_modules$three$build$three_module(a,d)+CubicBezierP3$$module$node_modules$three$build$three_module(a,e)}
function CubicBezierCurve$$module$node_modules$three$build$three_module(a,b,c,d){Curve$$module$node_modules$three$build$three_module.call(this);this.type="CubicBezierCurve";this.v0=a||new Vector2$$module$node_modules$three$build$three_module;this.v1=b||new Vector2$$module$node_modules$three$build$three_module;this.v2=c||new Vector2$$module$node_modules$three$build$three_module;this.v3=d||new Vector2$$module$node_modules$three$build$three_module}
CubicBezierCurve$$module$node_modules$three$build$three_module.prototype=Object.create(Curve$$module$node_modules$three$build$three_module.prototype);CubicBezierCurve$$module$node_modules$three$build$three_module.prototype.constructor=CubicBezierCurve$$module$node_modules$three$build$three_module;CubicBezierCurve$$module$node_modules$three$build$three_module.prototype.isCubicBezierCurve=!0;
CubicBezierCurve$$module$node_modules$three$build$three_module.prototype.getPoint=function(a,b){b=b||new Vector2$$module$node_modules$three$build$three_module;const c=this.v0,d=this.v1,e=this.v2,f=this.v3;b.set(CubicBezier$$module$node_modules$three$build$three_module(a,c.x,d.x,e.x,f.x),CubicBezier$$module$node_modules$three$build$three_module(a,c.y,d.y,e.y,f.y));return b};
CubicBezierCurve$$module$node_modules$three$build$three_module.prototype.copy=function(a){Curve$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.v0.copy(a.v0);this.v1.copy(a.v1);this.v2.copy(a.v2);this.v3.copy(a.v3);return this};
CubicBezierCurve$$module$node_modules$three$build$three_module.prototype.toJSON=function(){const a=Curve$$module$node_modules$three$build$three_module.prototype.toJSON.call(this);a.v0=this.v0.toArray();a.v1=this.v1.toArray();a.v2=this.v2.toArray();a.v3=this.v3.toArray();return a};
CubicBezierCurve$$module$node_modules$three$build$three_module.prototype.fromJSON=function(a){Curve$$module$node_modules$three$build$three_module.prototype.fromJSON.call(this,a);this.v0.fromArray(a.v0);this.v1.fromArray(a.v1);this.v2.fromArray(a.v2);this.v3.fromArray(a.v3);return this};
function CubicBezierCurve3$$module$node_modules$three$build$three_module(a,b,c,d){Curve$$module$node_modules$three$build$three_module.call(this);this.type="CubicBezierCurve3";this.v0=a||new Vector3$$module$node_modules$three$build$three_module;this.v1=b||new Vector3$$module$node_modules$three$build$three_module;this.v2=c||new Vector3$$module$node_modules$three$build$three_module;this.v3=d||new Vector3$$module$node_modules$three$build$three_module}
CubicBezierCurve3$$module$node_modules$three$build$three_module.prototype=Object.create(Curve$$module$node_modules$three$build$three_module.prototype);CubicBezierCurve3$$module$node_modules$three$build$three_module.prototype.constructor=CubicBezierCurve3$$module$node_modules$three$build$three_module;CubicBezierCurve3$$module$node_modules$three$build$three_module.prototype.isCubicBezierCurve3=!0;
CubicBezierCurve3$$module$node_modules$three$build$three_module.prototype.getPoint=function(a,b){b=b||new Vector3$$module$node_modules$three$build$three_module;const c=this.v0,d=this.v1,e=this.v2,f=this.v3;b.set(CubicBezier$$module$node_modules$three$build$three_module(a,c.x,d.x,e.x,f.x),CubicBezier$$module$node_modules$three$build$three_module(a,c.y,d.y,e.y,f.y),CubicBezier$$module$node_modules$three$build$three_module(a,c.z,d.z,e.z,f.z));return b};
CubicBezierCurve3$$module$node_modules$three$build$three_module.prototype.copy=function(a){Curve$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.v0.copy(a.v0);this.v1.copy(a.v1);this.v2.copy(a.v2);this.v3.copy(a.v3);return this};
CubicBezierCurve3$$module$node_modules$three$build$three_module.prototype.toJSON=function(){const a=Curve$$module$node_modules$three$build$three_module.prototype.toJSON.call(this);a.v0=this.v0.toArray();a.v1=this.v1.toArray();a.v2=this.v2.toArray();a.v3=this.v3.toArray();return a};
CubicBezierCurve3$$module$node_modules$three$build$three_module.prototype.fromJSON=function(a){Curve$$module$node_modules$three$build$three_module.prototype.fromJSON.call(this,a);this.v0.fromArray(a.v0);this.v1.fromArray(a.v1);this.v2.fromArray(a.v2);this.v3.fromArray(a.v3);return this};
function LineCurve$$module$node_modules$three$build$three_module(a,b){Curve$$module$node_modules$three$build$three_module.call(this);this.type="LineCurve";this.v1=a||new Vector2$$module$node_modules$three$build$three_module;this.v2=b||new Vector2$$module$node_modules$three$build$three_module}LineCurve$$module$node_modules$three$build$three_module.prototype=Object.create(Curve$$module$node_modules$three$build$three_module.prototype);
LineCurve$$module$node_modules$three$build$three_module.prototype.constructor=LineCurve$$module$node_modules$three$build$three_module;LineCurve$$module$node_modules$three$build$three_module.prototype.isLineCurve=!0;LineCurve$$module$node_modules$three$build$three_module.prototype.getPoint=function(a,b){b=b||new Vector2$$module$node_modules$three$build$three_module;1===a?b.copy(this.v2):(b.copy(this.v2).sub(this.v1),b.multiplyScalar(a).add(this.v1));return b};
LineCurve$$module$node_modules$three$build$three_module.prototype.getPointAt=function(a,b){return this.getPoint(a,b)};LineCurve$$module$node_modules$three$build$three_module.prototype.getTangent=function(a,b){a=b||new Vector2$$module$node_modules$three$build$three_module;a.copy(this.v2).sub(this.v1).normalize();return a};
LineCurve$$module$node_modules$three$build$three_module.prototype.copy=function(a){Curve$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.v1.copy(a.v1);this.v2.copy(a.v2);return this};LineCurve$$module$node_modules$three$build$three_module.prototype.toJSON=function(){const a=Curve$$module$node_modules$three$build$three_module.prototype.toJSON.call(this);a.v1=this.v1.toArray();a.v2=this.v2.toArray();return a};
LineCurve$$module$node_modules$three$build$three_module.prototype.fromJSON=function(a){Curve$$module$node_modules$three$build$three_module.prototype.fromJSON.call(this,a);this.v1.fromArray(a.v1);this.v2.fromArray(a.v2);return this};
function LineCurve3$$module$node_modules$three$build$three_module(a,b){Curve$$module$node_modules$three$build$three_module.call(this);this.type="LineCurve3";this.v1=a||new Vector3$$module$node_modules$three$build$three_module;this.v2=b||new Vector3$$module$node_modules$three$build$three_module}LineCurve3$$module$node_modules$three$build$three_module.prototype=Object.create(Curve$$module$node_modules$three$build$three_module.prototype);
LineCurve3$$module$node_modules$three$build$three_module.prototype.constructor=LineCurve3$$module$node_modules$three$build$three_module;LineCurve3$$module$node_modules$three$build$three_module.prototype.isLineCurve3=!0;LineCurve3$$module$node_modules$three$build$three_module.prototype.getPoint=function(a,b){b=b||new Vector3$$module$node_modules$three$build$three_module;1===a?b.copy(this.v2):(b.copy(this.v2).sub(this.v1),b.multiplyScalar(a).add(this.v1));return b};
LineCurve3$$module$node_modules$three$build$three_module.prototype.getPointAt=function(a,b){return this.getPoint(a,b)};LineCurve3$$module$node_modules$three$build$three_module.prototype.copy=function(a){Curve$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.v1.copy(a.v1);this.v2.copy(a.v2);return this};
LineCurve3$$module$node_modules$three$build$three_module.prototype.toJSON=function(){const a=Curve$$module$node_modules$three$build$three_module.prototype.toJSON.call(this);a.v1=this.v1.toArray();a.v2=this.v2.toArray();return a};LineCurve3$$module$node_modules$three$build$three_module.prototype.fromJSON=function(a){Curve$$module$node_modules$three$build$three_module.prototype.fromJSON.call(this,a);this.v1.fromArray(a.v1);this.v2.fromArray(a.v2);return this};
function QuadraticBezierCurve$$module$node_modules$three$build$three_module(a,b,c){Curve$$module$node_modules$three$build$three_module.call(this);this.type="QuadraticBezierCurve";this.v0=a||new Vector2$$module$node_modules$three$build$three_module;this.v1=b||new Vector2$$module$node_modules$three$build$three_module;this.v2=c||new Vector2$$module$node_modules$three$build$three_module}QuadraticBezierCurve$$module$node_modules$three$build$three_module.prototype=Object.create(Curve$$module$node_modules$three$build$three_module.prototype);
QuadraticBezierCurve$$module$node_modules$three$build$three_module.prototype.constructor=QuadraticBezierCurve$$module$node_modules$three$build$three_module;QuadraticBezierCurve$$module$node_modules$three$build$three_module.prototype.isQuadraticBezierCurve=!0;
QuadraticBezierCurve$$module$node_modules$three$build$three_module.prototype.getPoint=function(a,b){b=b||new Vector2$$module$node_modules$three$build$three_module;const c=this.v0,d=this.v1,e=this.v2;b.set(QuadraticBezier$$module$node_modules$three$build$three_module(a,c.x,d.x,e.x),QuadraticBezier$$module$node_modules$three$build$three_module(a,c.y,d.y,e.y));return b};
QuadraticBezierCurve$$module$node_modules$three$build$three_module.prototype.copy=function(a){Curve$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.v0.copy(a.v0);this.v1.copy(a.v1);this.v2.copy(a.v2);return this};QuadraticBezierCurve$$module$node_modules$three$build$three_module.prototype.toJSON=function(){const a=Curve$$module$node_modules$three$build$three_module.prototype.toJSON.call(this);a.v0=this.v0.toArray();a.v1=this.v1.toArray();a.v2=this.v2.toArray();return a};
QuadraticBezierCurve$$module$node_modules$three$build$three_module.prototype.fromJSON=function(a){Curve$$module$node_modules$three$build$three_module.prototype.fromJSON.call(this,a);this.v0.fromArray(a.v0);this.v1.fromArray(a.v1);this.v2.fromArray(a.v2);return this};
function QuadraticBezierCurve3$$module$node_modules$three$build$three_module(a,b,c){Curve$$module$node_modules$three$build$three_module.call(this);this.type="QuadraticBezierCurve3";this.v0=a||new Vector3$$module$node_modules$three$build$three_module;this.v1=b||new Vector3$$module$node_modules$three$build$three_module;this.v2=c||new Vector3$$module$node_modules$three$build$three_module}QuadraticBezierCurve3$$module$node_modules$three$build$three_module.prototype=Object.create(Curve$$module$node_modules$three$build$three_module.prototype);
QuadraticBezierCurve3$$module$node_modules$three$build$three_module.prototype.constructor=QuadraticBezierCurve3$$module$node_modules$three$build$three_module;QuadraticBezierCurve3$$module$node_modules$three$build$three_module.prototype.isQuadraticBezierCurve3=!0;
QuadraticBezierCurve3$$module$node_modules$three$build$three_module.prototype.getPoint=function(a,b){b=b||new Vector3$$module$node_modules$three$build$three_module;const c=this.v0,d=this.v1,e=this.v2;b.set(QuadraticBezier$$module$node_modules$three$build$three_module(a,c.x,d.x,e.x),QuadraticBezier$$module$node_modules$three$build$three_module(a,c.y,d.y,e.y),QuadraticBezier$$module$node_modules$three$build$three_module(a,c.z,d.z,e.z));return b};
QuadraticBezierCurve3$$module$node_modules$three$build$three_module.prototype.copy=function(a){Curve$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.v0.copy(a.v0);this.v1.copy(a.v1);this.v2.copy(a.v2);return this};QuadraticBezierCurve3$$module$node_modules$three$build$three_module.prototype.toJSON=function(){const a=Curve$$module$node_modules$three$build$three_module.prototype.toJSON.call(this);a.v0=this.v0.toArray();a.v1=this.v1.toArray();a.v2=this.v2.toArray();return a};
QuadraticBezierCurve3$$module$node_modules$three$build$three_module.prototype.fromJSON=function(a){Curve$$module$node_modules$three$build$three_module.prototype.fromJSON.call(this,a);this.v0.fromArray(a.v0);this.v1.fromArray(a.v1);this.v2.fromArray(a.v2);return this};function SplineCurve$$module$node_modules$three$build$three_module(a){Curve$$module$node_modules$three$build$three_module.call(this);this.type="SplineCurve";this.points=a||[]}
SplineCurve$$module$node_modules$three$build$three_module.prototype=Object.create(Curve$$module$node_modules$three$build$three_module.prototype);SplineCurve$$module$node_modules$three$build$three_module.prototype.constructor=SplineCurve$$module$node_modules$three$build$three_module;SplineCurve$$module$node_modules$three$build$three_module.prototype.isSplineCurve=!0;
SplineCurve$$module$node_modules$three$build$three_module.prototype.getPoint=function(a,b){b=b||new Vector2$$module$node_modules$three$build$three_module;var c=this.points,d=(c.length-1)*a;a=Math.floor(d);d-=a;const e=c[0===a?a:a-1],f=c[a],h=c[a>c.length-2?c.length-1:a+1];c=c[a>c.length-3?c.length-1:a+2];b.set(CatmullRom$$module$node_modules$three$build$three_module(d,e.x,f.x,h.x,c.x),CatmullRom$$module$node_modules$three$build$three_module(d,e.y,f.y,h.y,c.y));return b};
SplineCurve$$module$node_modules$three$build$three_module.prototype.copy=function(a){Curve$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.points=[];for(let b=0,c=a.points.length;b<c;b++)this.points.push(a.points[b].clone());return this};
SplineCurve$$module$node_modules$three$build$three_module.prototype.toJSON=function(){const a=Curve$$module$node_modules$three$build$three_module.prototype.toJSON.call(this);a.points=[];for(let b=0,c=this.points.length;b<c;b++)a.points.push(this.points[b].toArray());return a};
SplineCurve$$module$node_modules$three$build$three_module.prototype.fromJSON=function(a){Curve$$module$node_modules$three$build$three_module.prototype.fromJSON.call(this,a);this.points=[];for(let b=0,c=a.points.length;b<c;b++){const d=a.points[b];this.points.push((new Vector2$$module$node_modules$three$build$three_module).fromArray(d))}return this};
var Curves$$module$node_modules$three$build$three_module=Object.freeze({__proto__:null,ArcCurve:ArcCurve$$module$node_modules$three$build$three_module,CatmullRomCurve3:CatmullRomCurve3$$module$node_modules$three$build$three_module,CubicBezierCurve:CubicBezierCurve$$module$node_modules$three$build$three_module,CubicBezierCurve3:CubicBezierCurve3$$module$node_modules$three$build$three_module,EllipseCurve:EllipseCurve$$module$node_modules$three$build$three_module,LineCurve:LineCurve$$module$node_modules$three$build$three_module,
LineCurve3:LineCurve3$$module$node_modules$three$build$three_module,QuadraticBezierCurve:QuadraticBezierCurve$$module$node_modules$three$build$three_module,QuadraticBezierCurve3:QuadraticBezierCurve3$$module$node_modules$three$build$three_module,SplineCurve:SplineCurve$$module$node_modules$three$build$three_module});
function CurvePath$$module$node_modules$three$build$three_module(){Curve$$module$node_modules$three$build$three_module.call(this);this.type="CurvePath";this.curves=[];this.autoClose=!1}
CurvePath$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Curve$$module$node_modules$three$build$three_module.prototype),{constructor:CurvePath$$module$node_modules$three$build$three_module,add:function(a){this.curves.push(a)},closePath:function(){const a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new LineCurve$$module$node_modules$three$build$three_module(b,a))},getPoint:function(a){var b=a*this.getLength(),
c=this.getCurveLengths();for(a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],c=a.getLength(),a.getPointAt(0===c?0:1-b/c);a++}return null},getLength:function(){const a=this.getCurveLengths();return a[a.length-1]},updateArcLengths:function(){this.needsUpdate=!0;this.cacheLengths=null;this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const a=[];let b=0;for(let c=0,d=this.curves.length;c<d;c++)b+=
this.curves[c].getLength(),a.push(b);return this.cacheLengths=a},getSpacedPoints:function(a){void 0===a&&(a=40);const b=[];for(let c=0;c<=a;c++)b.push(this.getPoint(c/a));this.autoClose&&b.push(b[0]);return b},getPoints:function(a){a=a||12;const b=[];let c;for(let e=0,f=this.curves;e<f.length;e++){var d=f[e];d=d.getPoints(d&&d.isEllipseCurve?2*a:d&&(d.isLineCurve||d.isLineCurve3)?1:d&&d.isSplineCurve?a*d.points.length:a);for(let h=0;h<d.length;h++){const g=d[h];c&&c.equals(g)||(b.push(g),c=g)}}this.autoClose&&
1<b.length&&!b[b.length-1].equals(b[0])&&b.push(b[0]);return b},copy:function(a){Curve$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.curves=[];for(let b=0,c=a.curves.length;b<c;b++)this.curves.push(a.curves[b].clone());this.autoClose=a.autoClose;return this},toJSON:function(){const a=Curve$$module$node_modules$three$build$three_module.prototype.toJSON.call(this);a.autoClose=this.autoClose;a.curves=[];for(let b=0,c=this.curves.length;b<c;b++)a.curves.push(this.curves[b].toJSON());
return a},fromJSON:function(a){Curve$$module$node_modules$three$build$three_module.prototype.fromJSON.call(this,a);this.autoClose=a.autoClose;this.curves=[];for(let b=0,c=a.curves.length;b<c;b++){const d=a.curves[b];this.curves.push((new Curves$$module$node_modules$three$build$three_module[d.type]).fromJSON(d))}return this}});
function Path$$module$node_modules$three$build$three_module(a){CurvePath$$module$node_modules$three$build$three_module.call(this);this.type="Path";this.currentPoint=new Vector2$$module$node_modules$three$build$three_module;a&&this.setFromPoints(a)}
Path$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(CurvePath$$module$node_modules$three$build$three_module.prototype),{constructor:Path$$module$node_modules$three$build$three_module,setFromPoints:function(a){this.moveTo(a[0].x,a[0].y);for(let b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y);return this},moveTo:function(a,b){this.currentPoint.set(a,b);return this},lineTo:function(a,b){const c=new LineCurve$$module$node_modules$three$build$three_module(this.currentPoint.clone(),
new Vector2$$module$node_modules$three$build$three_module(a,b));this.curves.push(c);this.currentPoint.set(a,b);return this},quadraticCurveTo:function(a,b,c,d){a=new QuadraticBezierCurve$$module$node_modules$three$build$three_module(this.currentPoint.clone(),new Vector2$$module$node_modules$three$build$three_module(a,b),new Vector2$$module$node_modules$three$build$three_module(c,d));this.curves.push(a);this.currentPoint.set(c,d);return this},bezierCurveTo:function(a,b,c,d,e,f){a=new CubicBezierCurve$$module$node_modules$three$build$three_module(this.currentPoint.clone(),
new Vector2$$module$node_modules$three$build$three_module(a,b),new Vector2$$module$node_modules$three$build$three_module(c,d),new Vector2$$module$node_modules$three$build$three_module(e,f));this.curves.push(a);this.currentPoint.set(e,f);return this},splineThru:function(a){var b=[this.currentPoint.clone()].concat(a);b=new SplineCurve$$module$node_modules$three$build$three_module(b);this.curves.push(b);this.currentPoint.copy(a[a.length-1]);return this},arc:function(a,b,c,d,e,f){this.absarc(a+this.currentPoint.x,
b+this.currentPoint.y,c,d,e,f);return this},absarc:function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f);return this},ellipse:function(a,b,c,d,e,f,h,g){this.absellipse(a+this.currentPoint.x,b+this.currentPoint.y,c,d,e,f,h,g);return this},absellipse:function(a,b,c,d,e,f,h,g){a=new EllipseCurve$$module$node_modules$three$build$three_module(a,b,c,d,e,f,h,g);0<this.curves.length&&(b=a.getPoint(0),b.equals(this.currentPoint)||this.lineTo(b.x,b.y));this.curves.push(a);a=a.getPoint(1);this.currentPoint.copy(a);
return this},copy:function(a){CurvePath$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.currentPoint.copy(a.currentPoint);return this},toJSON:function(){const a=CurvePath$$module$node_modules$three$build$three_module.prototype.toJSON.call(this);a.currentPoint=this.currentPoint.toArray();return a},fromJSON:function(a){CurvePath$$module$node_modules$three$build$three_module.prototype.fromJSON.call(this,a);this.currentPoint.fromArray(a.currentPoint);return this}});
function Shape$$module$node_modules$three$build$three_module(a){Path$$module$node_modules$three$build$three_module.call(this,a);this.uuid=MathUtils$$module$node_modules$three$build$three_module.generateUUID();this.type="Shape";this.holes=[]}
Shape$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Path$$module$node_modules$three$build$three_module.prototype),{constructor:Shape$$module$node_modules$three$build$three_module,getPointsHoles:function(a){const b=[];for(let c=0,d=this.holes.length;c<d;c++)b[c]=this.holes[c].getPoints(a);return b},extractPoints:function(a){return{shape:this.getPoints(a),holes:this.getPointsHoles(a)}},copy:function(a){Path$$module$node_modules$three$build$three_module.prototype.copy.call(this,
a);this.holes=[];for(let b=0,c=a.holes.length;b<c;b++)this.holes.push(a.holes[b].clone());return this},toJSON:function(){const a=Path$$module$node_modules$three$build$three_module.prototype.toJSON.call(this);a.uuid=this.uuid;a.holes=[];for(let b=0,c=this.holes.length;b<c;b++)a.holes.push(this.holes[b].toJSON());return a},fromJSON:function(a){Path$$module$node_modules$three$build$three_module.prototype.fromJSON.call(this,a);this.uuid=a.uuid;this.holes=[];for(let b=0,c=a.holes.length;b<c;b++){const d=
a.holes[b];this.holes.push((new Path$$module$node_modules$three$build$three_module).fromJSON(d))}return this}});function Light$$module$node_modules$three$build$three_module(a,b){Object3D$$module$node_modules$three$build$three_module.call(this);this.type="Light";this.color=new Color$$module$node_modules$three$build$three_module(a);this.intensity=void 0!==b?b:1;this.receiveShadow=void 0}
Light$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Object3D$$module$node_modules$three$build$three_module.prototype),{constructor:Light$$module$node_modules$three$build$three_module,isLight:!0,copy:function(a){Object3D$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.color.copy(a.color);this.intensity=a.intensity;return this},toJSON:function(a){a=Object3D$$module$node_modules$three$build$three_module.prototype.toJSON.call(this,a);
a.object.color=this.color.getHex();a.object.intensity=this.intensity;void 0!==this.groundColor&&(a.object.groundColor=this.groundColor.getHex());void 0!==this.distance&&(a.object.distance=this.distance);void 0!==this.angle&&(a.object.angle=this.angle);void 0!==this.decay&&(a.object.decay=this.decay);void 0!==this.penumbra&&(a.object.penumbra=this.penumbra);void 0!==this.shadow&&(a.object.shadow=this.shadow.toJSON());return a}});
function HemisphereLight$$module$node_modules$three$build$three_module(a,b,c){Light$$module$node_modules$three$build$three_module.call(this,a,c);this.type="HemisphereLight";this.castShadow=void 0;this.position.copy(Object3D$$module$node_modules$three$build$three_module.DefaultUp);this.updateMatrix();this.groundColor=new Color$$module$node_modules$three$build$three_module(b)}
HemisphereLight$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Light$$module$node_modules$three$build$three_module.prototype),{constructor:HemisphereLight$$module$node_modules$three$build$three_module,isHemisphereLight:!0,copy:function(a){Light$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.groundColor.copy(a.groundColor);return this}});
function LightShadow$$module$node_modules$three$build$three_module(a){this.camera=a;this.normalBias=this.bias=0;this.radius=1;this.mapSize=new Vector2$$module$node_modules$three$build$three_module(512,512);this.mapPass=this.map=null;this.matrix=new Matrix4$$module$node_modules$three$build$three_module;this.autoUpdate=!0;this.needsUpdate=!1;this._frustum=new Frustum$$module$node_modules$three$build$three_module;this._frameExtents=new Vector2$$module$node_modules$three$build$three_module(1,1);this._viewportCount=
1;this._viewports=[new Vector4$$module$node_modules$three$build$three_module(0,0,1,1)]}
Object.assign(LightShadow$$module$node_modules$three$build$three_module.prototype,{_projScreenMatrix:new Matrix4$$module$node_modules$three$build$three_module,_lightPositionWorld:new Vector3$$module$node_modules$three$build$three_module,_lookTarget:new Vector3$$module$node_modules$three$build$three_module,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(a){const b=this.camera,c=this.matrix,d=this._projScreenMatrix,e=this._lookTarget,
f=this._lightPositionWorld;f.setFromMatrixPosition(a.matrixWorld);b.position.copy(f);e.setFromMatrixPosition(a.target.matrixWorld);b.lookAt(e);b.updateMatrixWorld();d.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);this._frustum.setFromProjectionMatrix(d);c.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);c.multiply(b.projectionMatrix);c.multiply(b.matrixWorldInverse)},getViewport:function(a){return this._viewports[a]},getFrameExtents:function(){return this._frameExtents},copy:function(a){this.camera=
a.camera.clone();this.bias=a.bias;this.radius=a.radius;this.mapSize.copy(a.mapSize);return this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const a={};0!==this.bias&&(a.bias=this.bias);0!==this.normalBias&&(a.normalBias=this.normalBias);1!==this.radius&&(a.radius=this.radius);if(512!==this.mapSize.x||512!==this.mapSize.y)a.mapSize=this.mapSize.toArray();a.camera=this.camera.toJSON(!1).object;delete a.camera.matrix;return a}});
function SpotLightShadow$$module$node_modules$three$build$three_module(){LightShadow$$module$node_modules$three$build$three_module.call(this,new PerspectiveCamera$$module$node_modules$three$build$three_module(50,1,.5,500))}
SpotLightShadow$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(LightShadow$$module$node_modules$three$build$three_module.prototype),{constructor:SpotLightShadow$$module$node_modules$three$build$three_module,isSpotLightShadow:!0,updateMatrices:function(a){const b=this.camera,c=2*MathUtils$$module$node_modules$three$build$three_module.RAD2DEG*a.angle,d=this.mapSize.width/this.mapSize.height,e=a.distance||b.far;if(c!==b.fov||d!==b.aspect||e!==b.far)b.fov=c,b.aspect=
d,b.far=e,b.updateProjectionMatrix();LightShadow$$module$node_modules$three$build$three_module.prototype.updateMatrices.call(this,a)}});
function SpotLight$$module$node_modules$three$build$three_module(a,b,c,d,e,f){Light$$module$node_modules$three$build$three_module.call(this,a,b);this.type="SpotLight";this.position.copy(Object3D$$module$node_modules$three$build$three_module.DefaultUp);this.updateMatrix();this.target=new Object3D$$module$node_modules$three$build$three_module;Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(h){this.intensity=h/Math.PI}});this.distance=void 0!==c?c:0;this.angle=
void 0!==d?d:Math.PI/3;this.penumbra=void 0!==e?e:0;this.decay=void 0!==f?f:1;this.shadow=new SpotLightShadow$$module$node_modules$three$build$three_module}
SpotLight$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Light$$module$node_modules$three$build$three_module.prototype),{constructor:SpotLight$$module$node_modules$three$build$three_module,isSpotLight:!0,copy:function(a){Light$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.distance=a.distance;this.angle=a.angle;this.penumbra=a.penumbra;this.decay=a.decay;this.target=a.target.clone();this.shadow=a.shadow.clone();return this}});
function PointLightShadow$$module$node_modules$three$build$three_module(){LightShadow$$module$node_modules$three$build$three_module.call(this,new PerspectiveCamera$$module$node_modules$three$build$three_module(90,1,.5,500));this._frameExtents=new Vector2$$module$node_modules$three$build$three_module(4,2);this._viewportCount=6;this._viewports=[new Vector4$$module$node_modules$three$build$three_module(2,1,1,1),new Vector4$$module$node_modules$three$build$three_module(0,1,1,1),new Vector4$$module$node_modules$three$build$three_module(3,
1,1,1),new Vector4$$module$node_modules$three$build$three_module(1,1,1,1),new Vector4$$module$node_modules$three$build$three_module(3,0,1,1),new Vector4$$module$node_modules$three$build$three_module(1,0,1,1)];this._cubeDirections=[new Vector3$$module$node_modules$three$build$three_module(1,0,0),new Vector3$$module$node_modules$three$build$three_module(-1,0,0),new Vector3$$module$node_modules$three$build$three_module(0,0,1),new Vector3$$module$node_modules$three$build$three_module(0,0,-1),new Vector3$$module$node_modules$three$build$three_module(0,
1,0),new Vector3$$module$node_modules$three$build$three_module(0,-1,0)];this._cubeUps=[new Vector3$$module$node_modules$three$build$three_module(0,1,0),new Vector3$$module$node_modules$three$build$three_module(0,1,0),new Vector3$$module$node_modules$three$build$three_module(0,1,0),new Vector3$$module$node_modules$three$build$three_module(0,1,0),new Vector3$$module$node_modules$three$build$three_module(0,0,1),new Vector3$$module$node_modules$three$build$three_module(0,0,-1)]}
PointLightShadow$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(LightShadow$$module$node_modules$three$build$three_module.prototype),{constructor:PointLightShadow$$module$node_modules$three$build$three_module,isPointLightShadow:!0,updateMatrices:function(a,b){void 0===b&&(b=0);const c=this.camera,d=this.matrix,e=this._lightPositionWorld,f=this._lookTarget,h=this._projScreenMatrix;e.setFromMatrixPosition(a.matrixWorld);c.position.copy(e);f.copy(c.position);f.add(this._cubeDirections[b]);
c.up.copy(this._cubeUps[b]);c.lookAt(f);c.updateMatrixWorld();d.makeTranslation(-e.x,-e.y,-e.z);h.multiplyMatrices(c.projectionMatrix,c.matrixWorldInverse);this._frustum.setFromProjectionMatrix(h)}});
function PointLight$$module$node_modules$three$build$three_module(a,b,c,d){Light$$module$node_modules$three$build$three_module.call(this,a,b);this.type="PointLight";Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}});this.distance=void 0!==c?c:0;this.decay=void 0!==d?d:1;this.shadow=new PointLightShadow$$module$node_modules$three$build$three_module}
PointLight$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Light$$module$node_modules$three$build$three_module.prototype),{constructor:PointLight$$module$node_modules$three$build$three_module,isPointLight:!0,copy:function(a){Light$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.distance=a.distance;this.decay=a.decay;this.shadow=a.shadow.clone();return this}});
function OrthographicCamera$$module$node_modules$three$build$three_module(a,b,c,d,e,f){Camera$$module$node_modules$three$build$three_module.call(this);this.type="OrthographicCamera";this.zoom=1;this.view=null;this.left=void 0!==a?a:-1;this.right=void 0!==b?b:1;this.top=void 0!==c?c:1;this.bottom=void 0!==d?d:-1;this.near=void 0!==e?e:.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()}
OrthographicCamera$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Camera$$module$node_modules$three$build$three_module.prototype),{constructor:OrthographicCamera$$module$node_modules$three$build$three_module,isOrthographicCamera:!0,copy:function(a,b){Camera$$module$node_modules$three$build$three_module.prototype.copy.call(this,a,b);this.left=a.left;this.right=a.right;this.top=a.top;this.bottom=a.bottom;this.near=a.near;this.far=a.far;this.zoom=a.zoom;this.view=
null===a.view?null:Object.assign({},a.view);return this},setViewOffset:function(a,b,c,d,e,f){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1});this.view.enabled=!0;this.view.fullWidth=a;this.view.fullHeight=b;this.view.offsetX=c;this.view.offsetY=d;this.view.width=e;this.view.height=f;this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1);this.updateProjectionMatrix()},updateProjectionMatrix:function(){var a=
(this.right-this.left)/(2*this.zoom),b=(this.top-this.bottom)/(2*this.zoom),c=(this.right+this.left)/2,d=(this.top+this.bottom)/2;let e=c-a;c+=a;a=d+b;b=d-b;null!==this.view&&this.view.enabled&&(d=(this.right-this.left)/this.view.fullWidth/this.zoom,b=(this.top-this.bottom)/this.view.fullHeight/this.zoom,e+=d*this.view.offsetX,c=e+d*this.view.width,a-=b*this.view.offsetY,b=a-b*this.view.height);this.projectionMatrix.makeOrthographic(e,c,a,b,this.near,this.far);this.projectionMatrixInverse.getInverse(this.projectionMatrix)},
toJSON:function(a){a=Object3D$$module$node_modules$three$build$three_module.prototype.toJSON.call(this,a);a.object.zoom=this.zoom;a.object.left=this.left;a.object.right=this.right;a.object.top=this.top;a.object.bottom=this.bottom;a.object.near=this.near;a.object.far=this.far;null!==this.view&&(a.object.view=Object.assign({},this.view));return a}});
function DirectionalLightShadow$$module$node_modules$three$build$three_module(){LightShadow$$module$node_modules$three$build$three_module.call(this,new OrthographicCamera$$module$node_modules$three$build$three_module(-5,5,5,-5,.5,500))}
DirectionalLightShadow$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(LightShadow$$module$node_modules$three$build$three_module.prototype),{constructor:DirectionalLightShadow$$module$node_modules$three$build$three_module,isDirectionalLightShadow:!0,updateMatrices:function(a){LightShadow$$module$node_modules$three$build$three_module.prototype.updateMatrices.call(this,a)}});
function DirectionalLight$$module$node_modules$three$build$three_module(a,b){Light$$module$node_modules$three$build$three_module.call(this,a,b);this.type="DirectionalLight";this.position.copy(Object3D$$module$node_modules$three$build$three_module.DefaultUp);this.updateMatrix();this.target=new Object3D$$module$node_modules$three$build$three_module;this.shadow=new DirectionalLightShadow$$module$node_modules$three$build$three_module}
DirectionalLight$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Light$$module$node_modules$three$build$three_module.prototype),{constructor:DirectionalLight$$module$node_modules$three$build$three_module,isDirectionalLight:!0,copy:function(a){Light$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.target=a.target.clone();this.shadow=a.shadow.clone();return this}});
function AmbientLight$$module$node_modules$three$build$three_module(a,b){Light$$module$node_modules$three$build$three_module.call(this,a,b);this.type="AmbientLight";this.castShadow=void 0}AmbientLight$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Light$$module$node_modules$three$build$three_module.prototype),{constructor:AmbientLight$$module$node_modules$three$build$three_module,isAmbientLight:!0});
function RectAreaLight$$module$node_modules$three$build$three_module(a,b,c,d){Light$$module$node_modules$three$build$three_module.call(this,a,b);this.type="RectAreaLight";this.width=void 0!==c?c:10;this.height=void 0!==d?d:10}
RectAreaLight$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Light$$module$node_modules$three$build$three_module.prototype),{constructor:RectAreaLight$$module$node_modules$three$build$three_module,isRectAreaLight:!0,copy:function(a){Light$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.width=a.width;this.height=a.height;return this},toJSON:function(a){a=Light$$module$node_modules$three$build$three_module.prototype.toJSON.call(this,
a);a.object.width=this.width;a.object.height=this.height;return a}});
class SphericalHarmonics3$$module$node_modules$three$build$three_module{constructor(){Object.defineProperty(this,"isSphericalHarmonics3",{value:!0});this.coefficients=[];for(let a=0;9>a;a++)this.coefficients.push(new Vector3$$module$node_modules$three$build$three_module)}set(a){for(let b=0;9>b;b++)this.coefficients[b].copy(a[b]);return this}zero(){for(let a=0;9>a;a++)this.coefficients[a].set(0,0,0);return this}getAt(a,b){const c=a.x,d=a.y;a=a.z;const e=this.coefficients;b.copy(e[0]).multiplyScalar(.282095);
b.addScaledVector(e[1],.488603*d);b.addScaledVector(e[2],.488603*a);b.addScaledVector(e[3],.488603*c);b.addScaledVector(e[4],1.092548*c*d);b.addScaledVector(e[5],1.092548*d*a);b.addScaledVector(e[6],.315392*(3*a*a-1));b.addScaledVector(e[7],1.092548*c*a);b.addScaledVector(e[8],.546274*(c*c-d*d));return b}getIrradianceAt(a,b){const c=a.x,d=a.y;a=a.z;const e=this.coefficients;b.copy(e[0]).multiplyScalar(.886227);b.addScaledVector(e[1],1.023328*d);b.addScaledVector(e[2],1.023328*a);b.addScaledVector(e[3],
1.023328*c);b.addScaledVector(e[4],.858086*c*d);b.addScaledVector(e[5],.858086*d*a);b.addScaledVector(e[6],.743125*a*a-.247708);b.addScaledVector(e[7],.858086*c*a);b.addScaledVector(e[8],.429043*(c*c-d*d));return b}add(a){for(let b=0;9>b;b++)this.coefficients[b].add(a.coefficients[b]);return this}addScaledSH(a,b){for(let c=0;9>c;c++)this.coefficients[c].addScaledVector(a.coefficients[c],b);return this}scale(a){for(let b=0;9>b;b++)this.coefficients[b].multiplyScalar(a);return this}lerp(a,b){for(let c=
0;9>c;c++)this.coefficients[c].lerp(a.coefficients[c],b);return this}equals(a){for(let b=0;9>b;b++)if(!this.coefficients[b].equals(a.coefficients[b]))return!1;return!0}copy(a){return this.set(a.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(a,b){void 0===b&&(b=0);const c=this.coefficients;for(let d=0;9>d;d++)c[d].fromArray(a,b+3*d);return this}toArray(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);const c=this.coefficients;for(let d=0;9>d;d++)c[d].toArray(a,b+3*d);return a}static getBasisAt(a,
b){const c=a.x,d=a.y;a=a.z;b[0]=.282095;b[1]=.488603*d;b[2]=.488603*a;b[3]=.488603*c;b[4]=1.092548*c*d;b[5]=1.092548*d*a;b[6]=.315392*(3*a*a-1);b[7]=1.092548*c*a;b[8]=.546274*(c*c-d*d)}}function LightProbe$$module$node_modules$three$build$three_module(a,b){Light$$module$node_modules$three$build$three_module.call(this,void 0,b);this.type="LightProbe";this.sh=void 0!==a?a:new SphericalHarmonics3$$module$node_modules$three$build$three_module}
LightProbe$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Light$$module$node_modules$three$build$three_module.prototype),{constructor:LightProbe$$module$node_modules$three$build$three_module,isLightProbe:!0,copy:function(a){Light$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.sh.copy(a.sh);return this},fromJSON:function(a){this.intensity=a.intensity;this.sh.fromArray(a.sh);return this},toJSON:function(a){a=Light$$module$node_modules$three$build$three_module.prototype.toJSON.call(this,
a);a.object.sh=this.sh.toArray();return a}});function MaterialLoader$$module$node_modules$three$build$three_module(a){Loader$$module$node_modules$three$build$three_module.call(this,a);this.textures={}}
MaterialLoader$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Loader$$module$node_modules$three$build$three_module.prototype),{constructor:MaterialLoader$$module$node_modules$three$build$three_module,load:function(a,b,c,d){const e=this,f=new FileLoader$$module$node_modules$three$build$three_module(e.manager);f.setPath(e.path);f.setRequestHeader(e.requestHeader);f.load(a,function(h){try{b(e.parse(JSON.parse(h)))}catch(g){d?d(g):console.error(g),e.manager.itemError(a)}},
c,d)},parse:function(a){function b(f){void 0===c[f]&&console.warn("THREE.MaterialLoader: Undefined texture",f);return c[f]}const c=this.textures,d=new Materials$$module$node_modules$three$build$three_module[a.type];void 0!==a.uuid&&(d.uuid=a.uuid);void 0!==a.name&&(d.name=a.name);void 0!==a.color&&d.color.setHex(a.color);void 0!==a.roughness&&(d.roughness=a.roughness);void 0!==a.metalness&&(d.metalness=a.metalness);void 0!==a.sheen&&(d.sheen=(new Color$$module$node_modules$three$build$three_module).setHex(a.sheen));
void 0!==a.emissive&&d.emissive.setHex(a.emissive);void 0!==a.specular&&d.specular.setHex(a.specular);void 0!==a.shininess&&(d.shininess=a.shininess);void 0!==a.clearcoat&&(d.clearcoat=a.clearcoat);void 0!==a.clearcoatRoughness&&(d.clearcoatRoughness=a.clearcoatRoughness);void 0!==a.fog&&(d.fog=a.fog);void 0!==a.flatShading&&(d.flatShading=a.flatShading);void 0!==a.blending&&(d.blending=a.blending);void 0!==a.combine&&(d.combine=a.combine);void 0!==a.side&&(d.side=a.side);void 0!==a.opacity&&(d.opacity=
a.opacity);void 0!==a.transparent&&(d.transparent=a.transparent);void 0!==a.alphaTest&&(d.alphaTest=a.alphaTest);void 0!==a.depthTest&&(d.depthTest=a.depthTest);void 0!==a.depthWrite&&(d.depthWrite=a.depthWrite);void 0!==a.colorWrite&&(d.colorWrite=a.colorWrite);void 0!==a.stencilWrite&&(d.stencilWrite=a.stencilWrite);void 0!==a.stencilWriteMask&&(d.stencilWriteMask=a.stencilWriteMask);void 0!==a.stencilFunc&&(d.stencilFunc=a.stencilFunc);void 0!==a.stencilRef&&(d.stencilRef=a.stencilRef);void 0!==
a.stencilFuncMask&&(d.stencilFuncMask=a.stencilFuncMask);void 0!==a.stencilFail&&(d.stencilFail=a.stencilFail);void 0!==a.stencilZFail&&(d.stencilZFail=a.stencilZFail);void 0!==a.stencilZPass&&(d.stencilZPass=a.stencilZPass);void 0!==a.wireframe&&(d.wireframe=a.wireframe);void 0!==a.wireframeLinewidth&&(d.wireframeLinewidth=a.wireframeLinewidth);void 0!==a.wireframeLinecap&&(d.wireframeLinecap=a.wireframeLinecap);void 0!==a.wireframeLinejoin&&(d.wireframeLinejoin=a.wireframeLinejoin);void 0!==a.rotation&&
(d.rotation=a.rotation);1!==a.linewidth&&(d.linewidth=a.linewidth);void 0!==a.dashSize&&(d.dashSize=a.dashSize);void 0!==a.gapSize&&(d.gapSize=a.gapSize);void 0!==a.scale&&(d.scale=a.scale);void 0!==a.polygonOffset&&(d.polygonOffset=a.polygonOffset);void 0!==a.polygonOffsetFactor&&(d.polygonOffsetFactor=a.polygonOffsetFactor);void 0!==a.polygonOffsetUnits&&(d.polygonOffsetUnits=a.polygonOffsetUnits);void 0!==a.skinning&&(d.skinning=a.skinning);void 0!==a.morphTargets&&(d.morphTargets=a.morphTargets);
void 0!==a.morphNormals&&(d.morphNormals=a.morphNormals);void 0!==a.dithering&&(d.dithering=a.dithering);void 0!==a.vertexTangents&&(d.vertexTangents=a.vertexTangents);void 0!==a.visible&&(d.visible=a.visible);void 0!==a.toneMapped&&(d.toneMapped=a.toneMapped);void 0!==a.userData&&(d.userData=a.userData);void 0!==a.vertexColors&&(d.vertexColors="number"===typeof a.vertexColors?0<a.vertexColors?!0:!1:a.vertexColors);if(void 0!==a.uniforms)for(var e in a.uniforms){const f=a.uniforms[e];d.uniforms[e]=
{};switch(f.type){case "t":d.uniforms[e].value=b(f.value);break;case "c":d.uniforms[e].value=(new Color$$module$node_modules$three$build$three_module).setHex(f.value);break;case "v2":d.uniforms[e].value=(new Vector2$$module$node_modules$three$build$three_module).fromArray(f.value);break;case "v3":d.uniforms[e].value=(new Vector3$$module$node_modules$three$build$three_module).fromArray(f.value);break;case "v4":d.uniforms[e].value=(new Vector4$$module$node_modules$three$build$three_module).fromArray(f.value);
break;case "m3":d.uniforms[e].value=(new Matrix3$$module$node_modules$three$build$three_module).fromArray(f.value);break;case "m4":d.uniforms[e].value=(new Matrix4$$module$node_modules$three$build$three_module).fromArray(f.value);break;default:d.uniforms[e].value=f.value}}void 0!==a.defines&&(d.defines=a.defines);void 0!==a.vertexShader&&(d.vertexShader=a.vertexShader);void 0!==a.fragmentShader&&(d.fragmentShader=a.fragmentShader);if(void 0!==a.extensions)for(const f in a.extensions)d.extensions[f]=
a.extensions[f];void 0!==a.shading&&(d.flatShading=1===a.shading);void 0!==a.size&&(d.size=a.size);void 0!==a.sizeAttenuation&&(d.sizeAttenuation=a.sizeAttenuation);void 0!==a.map&&(d.map=b(a.map));void 0!==a.matcap&&(d.matcap=b(a.matcap));void 0!==a.alphaMap&&(d.alphaMap=b(a.alphaMap));void 0!==a.bumpMap&&(d.bumpMap=b(a.bumpMap));void 0!==a.bumpScale&&(d.bumpScale=a.bumpScale);void 0!==a.normalMap&&(d.normalMap=b(a.normalMap));void 0!==a.normalMapType&&(d.normalMapType=a.normalMapType);void 0!==
a.normalScale&&(e=a.normalScale,!1===Array.isArray(e)&&(e=[e,e]),d.normalScale=(new Vector2$$module$node_modules$three$build$three_module).fromArray(e));void 0!==a.displacementMap&&(d.displacementMap=b(a.displacementMap));void 0!==a.displacementScale&&(d.displacementScale=a.displacementScale);void 0!==a.displacementBias&&(d.displacementBias=a.displacementBias);void 0!==a.roughnessMap&&(d.roughnessMap=b(a.roughnessMap));void 0!==a.metalnessMap&&(d.metalnessMap=b(a.metalnessMap));void 0!==a.emissiveMap&&
(d.emissiveMap=b(a.emissiveMap));void 0!==a.emissiveIntensity&&(d.emissiveIntensity=a.emissiveIntensity);void 0!==a.specularMap&&(d.specularMap=b(a.specularMap));void 0!==a.envMap&&(d.envMap=b(a.envMap));void 0!==a.envMapIntensity&&(d.envMapIntensity=a.envMapIntensity);void 0!==a.reflectivity&&(d.reflectivity=a.reflectivity);void 0!==a.refractionRatio&&(d.refractionRatio=a.refractionRatio);void 0!==a.lightMap&&(d.lightMap=b(a.lightMap));void 0!==a.lightMapIntensity&&(d.lightMapIntensity=a.lightMapIntensity);
void 0!==a.aoMap&&(d.aoMap=b(a.aoMap));void 0!==a.aoMapIntensity&&(d.aoMapIntensity=a.aoMapIntensity);void 0!==a.gradientMap&&(d.gradientMap=b(a.gradientMap));void 0!==a.clearcoatMap&&(d.clearcoatMap=b(a.clearcoatMap));void 0!==a.clearcoatRoughnessMap&&(d.clearcoatRoughnessMap=b(a.clearcoatRoughnessMap));void 0!==a.clearcoatNormalMap&&(d.clearcoatNormalMap=b(a.clearcoatNormalMap));void 0!==a.clearcoatNormalScale&&(d.clearcoatNormalScale=(new Vector2$$module$node_modules$three$build$three_module).fromArray(a.clearcoatNormalScale));
void 0!==a.transmission&&(d.transmission=a.transmission);void 0!==a.transmissionMap&&(d.transmissionMap=b(a.transmissionMap));return d},setTextures:function(a){this.textures=a;return this}});
const LoaderUtils$$module$node_modules$three$build$three_module={decodeText:function(a){if("undefined"!==typeof TextDecoder)return(new TextDecoder).decode(a);let b="";for(let c=0,d=a.length;c<d;c++)b+=String.fromCharCode(a[c]);try{return decodeURIComponent(escape(b))}catch(c){return b}},extractUrlBase:function(a){const b=a.lastIndexOf("/");return-1===b?"./":a.substr(0,b+1)}};
function InstancedBufferGeometry$$module$node_modules$three$build$three_module(){BufferGeometry$$module$node_modules$three$build$three_module.call(this);this.type="InstancedBufferGeometry";this.instanceCount=Infinity}
InstancedBufferGeometry$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(BufferGeometry$$module$node_modules$three$build$three_module.prototype),{constructor:InstancedBufferGeometry$$module$node_modules$three$build$three_module,isInstancedBufferGeometry:!0,copy:function(a){BufferGeometry$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.instanceCount=a.instanceCount;return this},clone:function(){return(new this.constructor).copy(this)},
toJSON:function(){const a=BufferGeometry$$module$node_modules$three$build$three_module.prototype.toJSON.call(this);a.instanceCount=this.instanceCount;a.isInstancedBufferGeometry=!0;return a}});
function InstancedBufferAttribute$$module$node_modules$three$build$three_module(a,b,c,d){"number"===typeof c&&(d=c,c=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument."));BufferAttribute$$module$node_modules$three$build$three_module.call(this,a,b,c);this.meshPerAttribute=d||1}
InstancedBufferAttribute$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(BufferAttribute$$module$node_modules$three$build$three_module.prototype),{constructor:InstancedBufferAttribute$$module$node_modules$three$build$three_module,isInstancedBufferAttribute:!0,copy:function(a){BufferAttribute$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this},toJSON:function(){const a=BufferAttribute$$module$node_modules$three$build$three_module.prototype.toJSON.call(this);
a.meshPerAttribute=this.meshPerAttribute;a.isInstancedBufferAttribute=!0;return a}});function BufferGeometryLoader$$module$node_modules$three$build$three_module(a){Loader$$module$node_modules$three$build$three_module.call(this,a)}
BufferGeometryLoader$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Loader$$module$node_modules$three$build$three_module.prototype),{constructor:BufferGeometryLoader$$module$node_modules$three$build$three_module,load:function(a,b,c,d){const e=this,f=new FileLoader$$module$node_modules$three$build$three_module(e.manager);f.setPath(e.path);f.setRequestHeader(e.requestHeader);f.load(a,function(h){try{b(e.parse(JSON.parse(h)))}catch(g){d?d(g):console.error(g),e.manager.itemError(a)}},
c,d)},parse:function(a){function b(v,x){if(void 0!==c[x])return c[x];const z=v.interleavedBuffers[x];var F=z.buffer;void 0!==d[F]?F=d[F]:(v=(new Uint32Array(v.arrayBuffers[F])).buffer,F=d[F]=v);F=new TYPED_ARRAYS$$module$node_modules$three$build$three_module[z.type](F);F=new InterleavedBuffer$$module$node_modules$three$build$three_module(F,z.stride);F.uuid=z.uuid;return c[x]=F}const c={},d={},e=a.isInstancedBufferGeometry?new InstancedBufferGeometry$$module$node_modules$three$build$three_module:new BufferGeometry$$module$node_modules$three$build$three_module;
var f=a.data.index;void 0!==f&&(f=new TYPED_ARRAYS$$module$node_modules$three$build$three_module[f.type](f.array),e.setIndex(new BufferAttribute$$module$node_modules$three$build$three_module(f,1)));f=a.data.attributes;for(var h in f){var g=f[h],k=void 0;g.isInterleavedBufferAttribute?(k=b(a.data,g.data),k=new InterleavedBufferAttribute$$module$node_modules$three$build$three_module(k,g.itemSize,g.offset,g.normalized)):(k=new TYPED_ARRAYS$$module$node_modules$three$build$three_module[g.type](g.array),
k=new (g.isInstancedBufferAttribute?InstancedBufferAttribute$$module$node_modules$three$build$three_module:BufferAttribute$$module$node_modules$three$build$three_module)(k,g.itemSize,g.normalized));void 0!==g.name&&(k.name=g.name);e.setAttribute(h,k)}if(h=a.data.morphAttributes)for(var n in h){f=h[n];g=[];for(let v=0,x=f.length;v<x;v++){k=f[v];var w=void 0;k.isInterleavedBufferAttribute?(w=b(a.data,k.data),w=new InterleavedBufferAttribute$$module$node_modules$three$build$three_module(w,k.itemSize,
k.offset,k.normalized)):(w=new TYPED_ARRAYS$$module$node_modules$three$build$three_module[k.type](k.array),w=new BufferAttribute$$module$node_modules$three$build$three_module(w,k.itemSize,k.normalized));void 0!==k.name&&(w.name=k.name);g.push(w)}e.morphAttributes[n]=g}a.data.morphTargetsRelative&&(e.morphTargetsRelative=!0);n=a.data.groups||a.data.drawcalls||a.data.offsets;if(void 0!==n)for(let v=0,x=n.length;v!==x;++v)h=n[v],e.addGroup(h.start,h.count,h.materialIndex);n=a.data.boundingSphere;void 0!==
n&&(h=new Vector3$$module$node_modules$three$build$three_module,void 0!==n.center&&h.fromArray(n.center),e.boundingSphere=new Sphere$$module$node_modules$three$build$three_module(h,n.radius));a.name&&(e.name=a.name);a.userData&&(e.userData=a.userData);return e}});const TYPED_ARRAYS$$module$node_modules$three$build$three_module={Int8Array,Uint8Array,Uint8ClampedArray:"undefined"!==typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};
function ObjectLoader$$module$node_modules$three$build$three_module(a){Loader$$module$node_modules$three$build$three_module.call(this,a)}
ObjectLoader$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Loader$$module$node_modules$three$build$three_module.prototype),{constructor:ObjectLoader$$module$node_modules$three$build$three_module,load:function(a,b,c,d){const e=this;var f=""===this.path?LoaderUtils$$module$node_modules$three$build$three_module.extractUrlBase(a):this.path;this.resourcePath=this.resourcePath||f;f=new FileLoader$$module$node_modules$three$build$three_module(e.manager);f.setPath(this.path);
f.setRequestHeader(this.requestHeader);f.load(a,function(h){let g=null;try{g=JSON.parse(h)}catch(k){void 0!==d&&d(k);console.error("THREE:ObjectLoader: Can't parse "+a+".",k.message);return}h=g.metadata;void 0===h||void 0===h.type||"geometry"===h.type.toLowerCase()?console.error("THREE.ObjectLoader: Can't load "+a):e.parse(g,b)},c,d)},parse:function(a,b){var c=this.parseShape(a.shapes);c=this.parseGeometries(a.geometries,c);var d=this.parseImages(a.images,function(){void 0!==b&&b(e)});d=this.parseTextures(a.textures,
d);d=this.parseMaterials(a.materials,d);const e=this.parseObject(a.object,c,d);a.animations&&(e.animations=this.parseAnimations(a.animations));void 0!==a.images&&0!==a.images.length||void 0===b||b(e);return e},parseShape:function(a){const b={};if(void 0!==a)for(let c=0,d=a.length;c<d;c++){const e=(new Shape$$module$node_modules$three$build$three_module).fromJSON(a[c]);b[e.uuid]=e}return b},parseGeometries:function(a,b){const c={};if(void 0!==a){const e=new BufferGeometryLoader$$module$node_modules$three$build$three_module;
for(let f=0,h=a.length;f<h;f++){const g=a[f];switch(g.type){case "PlaneGeometry":case "PlaneBufferGeometry":var d=new Geometries$$module$node_modules$three$build$three_module[g.type](g.width,g.height,g.widthSegments,g.heightSegments);break;case "BoxGeometry":case "BoxBufferGeometry":case "CubeGeometry":d=new Geometries$$module$node_modules$three$build$three_module[g.type](g.width,g.height,g.depth,g.widthSegments,g.heightSegments,g.depthSegments);break;case "CircleGeometry":case "CircleBufferGeometry":d=
new Geometries$$module$node_modules$three$build$three_module[g.type](g.radius,g.segments,g.thetaStart,g.thetaLength);break;case "CylinderGeometry":case "CylinderBufferGeometry":d=new Geometries$$module$node_modules$three$build$three_module[g.type](g.radiusTop,g.radiusBottom,g.height,g.radialSegments,g.heightSegments,g.openEnded,g.thetaStart,g.thetaLength);break;case "ConeGeometry":case "ConeBufferGeometry":d=new Geometries$$module$node_modules$three$build$three_module[g.type](g.radius,g.height,g.radialSegments,
g.heightSegments,g.openEnded,g.thetaStart,g.thetaLength);break;case "SphereGeometry":case "SphereBufferGeometry":d=new Geometries$$module$node_modules$three$build$three_module[g.type](g.radius,g.widthSegments,g.heightSegments,g.phiStart,g.phiLength,g.thetaStart,g.thetaLength);break;case "DodecahedronGeometry":case "DodecahedronBufferGeometry":case "IcosahedronGeometry":case "IcosahedronBufferGeometry":case "OctahedronGeometry":case "OctahedronBufferGeometry":case "TetrahedronGeometry":case "TetrahedronBufferGeometry":d=
new Geometries$$module$node_modules$three$build$three_module[g.type](g.radius,g.detail);break;case "RingGeometry":case "RingBufferGeometry":d=new Geometries$$module$node_modules$three$build$three_module[g.type](g.innerRadius,g.outerRadius,g.thetaSegments,g.phiSegments,g.thetaStart,g.thetaLength);break;case "TorusGeometry":case "TorusBufferGeometry":d=new Geometries$$module$node_modules$three$build$three_module[g.type](g.radius,g.tube,g.radialSegments,g.tubularSegments,g.arc);break;case "TorusKnotGeometry":case "TorusKnotBufferGeometry":d=
new Geometries$$module$node_modules$three$build$three_module[g.type](g.radius,g.tube,g.tubularSegments,g.radialSegments,g.p,g.q);break;case "TubeGeometry":case "TubeBufferGeometry":d=new Geometries$$module$node_modules$three$build$three_module[g.type]((new Curves$$module$node_modules$three$build$three_module[g.path.type]).fromJSON(g.path),g.tubularSegments,g.radius,g.radialSegments,g.closed);break;case "LatheGeometry":case "LatheBufferGeometry":d=new Geometries$$module$node_modules$three$build$three_module[g.type](g.points,
g.segments,g.phiStart,g.phiLength);break;case "PolyhedronGeometry":case "PolyhedronBufferGeometry":d=new Geometries$$module$node_modules$three$build$three_module[g.type](g.vertices,g.indices,g.radius,g.details);break;case "ShapeGeometry":case "ShapeBufferGeometry":d=[];for(let n=0,w=g.shapes.length;n<w;n++)d.push(b[g.shapes[n]]);d=new Geometries$$module$node_modules$three$build$three_module[g.type](d,g.curveSegments);break;case "ExtrudeGeometry":case "ExtrudeBufferGeometry":d=[];for(let n=0,w=g.shapes.length;n<
w;n++)d.push(b[g.shapes[n]]);const k=g.options.extrudePath;void 0!==k&&(g.options.extrudePath=(new Curves$$module$node_modules$three$build$three_module[k.type]).fromJSON(k));d=new Geometries$$module$node_modules$three$build$three_module[g.type](d,g.options);break;case "BufferGeometry":case "InstancedBufferGeometry":d=e.parse(g);break;case "Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+
g.type+'"');continue}d.uuid=g.uuid;void 0!==g.name&&(d.name=g.name);!0===d.isBufferGeometry&&void 0!==g.userData&&(d.userData=g.userData);c[g.uuid]=d}}return c},parseMaterials:function(a,b){const c={},d={};if(void 0!==a){const e=new MaterialLoader$$module$node_modules$three$build$three_module;e.setTextures(b);for(let f=0,h=a.length;f<h;f++)if(b=a[f],"MultiMaterial"===b.type){const g=[];for(let k=0;k<b.materials.length;k++){const n=b.materials[k];void 0===c[n.uuid]&&(c[n.uuid]=e.parse(n));g.push(c[n.uuid])}d[b.uuid]=
g}else void 0===c[b.uuid]&&(c[b.uuid]=e.parse(b)),d[b.uuid]=c[b.uuid]}return d},parseAnimations:function(a){const b=[];for(let c=0;c<a.length;c++){const d=a[c],e=AnimationClip$$module$node_modules$three$build$three_module.parse(d);void 0!==d.uuid&&(e.uuid=d.uuid);b.push(e)}return b},parseImages:function(a,b){function c(k){d.manager.itemStart(k);return f.load(k,function(){d.manager.itemEnd(k)},void 0,function(){d.manager.itemError(k);d.manager.itemEnd(k)})}const d=this,e={};let f;if(void 0!==a&&0<
a.length){b=new LoadingManager$$module$node_modules$three$build$three_module(b);f=new ImageLoader$$module$node_modules$three$build$three_module(b);f.setCrossOrigin(this.crossOrigin);for(let k=0,n=a.length;k<n;k++){b=a[k];var h=b.url;if(Array.isArray(h)){e[b.uuid]=[];for(let w=0,v=h.length;w<v;w++){var g=h[w];g=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(g)?g:d.resourcePath+g;e[b.uuid].push(c(g))}}else h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(b.url)?b.url:d.resourcePath+b.url,e[b.uuid]=c(h)}}return e},parseTextures:function(a,
b){function c(e,f){if("number"===typeof e)return e;console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e);return f[e]}const d={};if(void 0!==a)for(let e=0,f=a.length;e<f;e++){const h=a[e];void 0===h.image&&console.warn('THREE.ObjectLoader: No "image" specified for',h.uuid);void 0===b[h.image]&&console.warn("THREE.ObjectLoader: Undefined image",h.image);let g;g=Array.isArray(b[h.image])?new CubeTexture$$module$node_modules$three$build$three_module(b[h.image]):new Texture$$module$node_modules$three$build$three_module(b[h.image]);
g.needsUpdate=!0;g.uuid=h.uuid;void 0!==h.name&&(g.name=h.name);void 0!==h.mapping&&(g.mapping=c(h.mapping,TEXTURE_MAPPING$$module$node_modules$three$build$three_module));void 0!==h.offset&&g.offset.fromArray(h.offset);void 0!==h.repeat&&g.repeat.fromArray(h.repeat);void 0!==h.center&&g.center.fromArray(h.center);void 0!==h.rotation&&(g.rotation=h.rotation);void 0!==h.wrap&&(g.wrapS=c(h.wrap[0],TEXTURE_WRAPPING$$module$node_modules$three$build$three_module),g.wrapT=c(h.wrap[1],TEXTURE_WRAPPING$$module$node_modules$three$build$three_module));
void 0!==h.format&&(g.format=h.format);void 0!==h.type&&(g.type=h.type);void 0!==h.encoding&&(g.encoding=h.encoding);void 0!==h.minFilter&&(g.minFilter=c(h.minFilter,TEXTURE_FILTER$$module$node_modules$three$build$three_module));void 0!==h.magFilter&&(g.magFilter=c(h.magFilter,TEXTURE_FILTER$$module$node_modules$three$build$three_module));void 0!==h.anisotropy&&(g.anisotropy=h.anisotropy);void 0!==h.flipY&&(g.flipY=h.flipY);void 0!==h.premultiplyAlpha&&(g.premultiplyAlpha=h.premultiplyAlpha);void 0!==
h.unpackAlignment&&(g.unpackAlignment=h.unpackAlignment);d[h.uuid]=g}return d},parseObject:function(a,b,c){function d(k){void 0===b[k]&&console.warn("THREE.ObjectLoader: Undefined geometry",k);return b[k]}function e(k){if(void 0!==k){if(Array.isArray(k)){const n=[];for(let w=0,v=k.length;w<v;w++){const x=k[w];void 0===c[x]&&console.warn("THREE.ObjectLoader: Undefined material",x);n.push(c[x])}return n}void 0===c[k]&&console.warn("THREE.ObjectLoader: Undefined material",k);return c[k]}}switch(a.type){case "Scene":var f=
new Scene$$module$node_modules$three$build$three_module;void 0!==a.background&&Number.isInteger(a.background)&&(f.background=new Color$$module$node_modules$three$build$three_module(a.background));void 0!==a.fog&&("Fog"===a.fog.type?f.fog=new Fog$$module$node_modules$three$build$three_module(a.fog.color,a.fog.near,a.fog.far):"FogExp2"===a.fog.type&&(f.fog=new FogExp2$$module$node_modules$three$build$three_module(a.fog.color,a.fog.density)));break;case "PerspectiveCamera":f=new PerspectiveCamera$$module$node_modules$three$build$three_module(a.fov,
a.aspect,a.near,a.far);void 0!==a.focus&&(f.focus=a.focus);void 0!==a.zoom&&(f.zoom=a.zoom);void 0!==a.filmGauge&&(f.filmGauge=a.filmGauge);void 0!==a.filmOffset&&(f.filmOffset=a.filmOffset);void 0!==a.view&&(f.view=Object.assign({},a.view));break;case "OrthographicCamera":f=new OrthographicCamera$$module$node_modules$three$build$three_module(a.left,a.right,a.top,a.bottom,a.near,a.far);void 0!==a.zoom&&(f.zoom=a.zoom);void 0!==a.view&&(f.view=Object.assign({},a.view));break;case "AmbientLight":f=
new AmbientLight$$module$node_modules$three$build$three_module(a.color,a.intensity);break;case "DirectionalLight":f=new DirectionalLight$$module$node_modules$three$build$three_module(a.color,a.intensity);break;case "PointLight":f=new PointLight$$module$node_modules$three$build$three_module(a.color,a.intensity,a.distance,a.decay);break;case "RectAreaLight":f=new RectAreaLight$$module$node_modules$three$build$three_module(a.color,a.intensity,a.width,a.height);break;case "SpotLight":f=new SpotLight$$module$node_modules$three$build$three_module(a.color,
a.intensity,a.distance,a.angle,a.penumbra,a.decay);break;case "HemisphereLight":f=new HemisphereLight$$module$node_modules$three$build$three_module(a.color,a.groundColor,a.intensity);break;case "LightProbe":f=(new LightProbe$$module$node_modules$three$build$three_module).fromJSON(a);break;case "SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case "Mesh":f=d(a.geometry);var h=e(a.material);f=new Mesh$$module$node_modules$three$build$three_module(f,h);
break;case "InstancedMesh":f=d(a.geometry);h=e(a.material);var g=a.instanceMatrix;f=new InstancedMesh$$module$node_modules$three$build$three_module(f,h,a.count);f.instanceMatrix=new BufferAttribute$$module$node_modules$three$build$three_module(new Float32Array(g.array),16);break;case "LOD":f=new LOD$$module$node_modules$three$build$three_module;break;case "Line":f=new Line$$module$node_modules$three$build$three_module(d(a.geometry),e(a.material),a.mode);break;case "LineLoop":f=new LineLoop$$module$node_modules$three$build$three_module(d(a.geometry),
e(a.material));break;case "LineSegments":f=new LineSegments$$module$node_modules$three$build$three_module(d(a.geometry),e(a.material));break;case "PointCloud":case "Points":f=new Points$$module$node_modules$three$build$three_module(d(a.geometry),e(a.material));break;case "Sprite":f=new Sprite$$module$node_modules$three$build$three_module(e(a.material));break;case "Group":f=new Group$$module$node_modules$three$build$three_module;break;default:f=new Object3D$$module$node_modules$three$build$three_module}f.uuid=
a.uuid;void 0!==a.name&&(f.name=a.name);void 0!==a.matrix?(f.matrix.fromArray(a.matrix),void 0!==a.matrixAutoUpdate&&(f.matrixAutoUpdate=a.matrixAutoUpdate),f.matrixAutoUpdate&&f.matrix.decompose(f.position,f.quaternion,f.scale)):(void 0!==a.position&&f.position.fromArray(a.position),void 0!==a.rotation&&f.rotation.fromArray(a.rotation),void 0!==a.quaternion&&f.quaternion.fromArray(a.quaternion),void 0!==a.scale&&f.scale.fromArray(a.scale));void 0!==a.castShadow&&(f.castShadow=a.castShadow);void 0!==
a.receiveShadow&&(f.receiveShadow=a.receiveShadow);a.shadow&&(void 0!==a.shadow.bias&&(f.shadow.bias=a.shadow.bias),void 0!==a.shadow.normalBias&&(f.shadow.normalBias=a.shadow.normalBias),void 0!==a.shadow.radius&&(f.shadow.radius=a.shadow.radius),void 0!==a.shadow.mapSize&&f.shadow.mapSize.fromArray(a.shadow.mapSize),void 0!==a.shadow.camera&&(f.shadow.camera=this.parseObject(a.shadow.camera)));void 0!==a.visible&&(f.visible=a.visible);void 0!==a.frustumCulled&&(f.frustumCulled=a.frustumCulled);
void 0!==a.renderOrder&&(f.renderOrder=a.renderOrder);void 0!==a.userData&&(f.userData=a.userData);void 0!==a.layers&&(f.layers.mask=a.layers);if(void 0!==a.children)for(g=a.children,h=0;h<g.length;h++)f.add(this.parseObject(g[h],b,c));if("LOD"===a.type)for(void 0!==a.autoUpdate&&(f.autoUpdate=a.autoUpdate),a=a.levels,g=0;g<a.length;g++){h=a[g];const k=f.getObjectByProperty("uuid",h.object);void 0!==k&&f.addLevel(k,h.distance)}return f}});
const TEXTURE_MAPPING$$module$node_modules$three$build$three_module={UVMapping:UVMapping$$module$node_modules$three$build$three_module,CubeReflectionMapping:CubeReflectionMapping$$module$node_modules$three$build$three_module,CubeRefractionMapping:CubeRefractionMapping$$module$node_modules$three$build$three_module,EquirectangularReflectionMapping:EquirectangularReflectionMapping$$module$node_modules$three$build$three_module,EquirectangularRefractionMapping:EquirectangularRefractionMapping$$module$node_modules$three$build$three_module,
CubeUVReflectionMapping:CubeUVReflectionMapping$$module$node_modules$three$build$three_module,CubeUVRefractionMapping:CubeUVRefractionMapping$$module$node_modules$three$build$three_module},TEXTURE_WRAPPING$$module$node_modules$three$build$three_module={RepeatWrapping:RepeatWrapping$$module$node_modules$three$build$three_module,ClampToEdgeWrapping:ClampToEdgeWrapping$$module$node_modules$three$build$three_module,MirroredRepeatWrapping:MirroredRepeatWrapping$$module$node_modules$three$build$three_module},
TEXTURE_FILTER$$module$node_modules$three$build$three_module={NearestFilter:NearestFilter$$module$node_modules$three$build$three_module,NearestMipmapNearestFilter:NearestMipmapNearestFilter$$module$node_modules$three$build$three_module,NearestMipmapLinearFilter:NearestMipmapLinearFilter$$module$node_modules$three$build$three_module,LinearFilter:LinearFilter$$module$node_modules$three$build$three_module,LinearMipmapNearestFilter:LinearMipmapNearestFilter$$module$node_modules$three$build$three_module,
LinearMipmapLinearFilter:LinearMipmapLinearFilter$$module$node_modules$three$build$three_module};function ImageBitmapLoader$$module$node_modules$three$build$three_module(a){"undefined"===typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported.");"undefined"===typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported.");Loader$$module$node_modules$three$build$three_module.call(this,a);this.options={premultiplyAlpha:"none"}}
ImageBitmapLoader$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Loader$$module$node_modules$three$build$three_module.prototype),{constructor:ImageBitmapLoader$$module$node_modules$three$build$three_module,isImageBitmapLoader:!0,setOptions:function(a){this.options=a;return this},load:function(a,b,c,d){void 0===a&&(a="");void 0!==this.path&&(a=this.path+a);a=this.manager.resolveURL(a);const e=this,f=Cache$$module$node_modules$three$build$three_module.get(a);if(void 0!==
f)return e.manager.itemStart(a),setTimeout(function(){b&&b(f);e.manager.itemEnd(a)},0),f;fetch(a).then(function(h){return h.blob()}).then(function(h){return createImageBitmap(h,e.options)}).then(function(h){Cache$$module$node_modules$three$build$three_module.add(a,h);b&&b(h);e.manager.itemEnd(a)}).catch(function(h){d&&d(h);e.manager.itemError(a);e.manager.itemEnd(a)});e.manager.itemStart(a)}});
function ShapePath$$module$node_modules$three$build$three_module(){this.type="ShapePath";this.color=new Color$$module$node_modules$three$build$three_module;this.subPaths=[];this.currentPath=null}
Object.assign(ShapePath$$module$node_modules$three$build$three_module.prototype,{moveTo:function(a,b){this.currentPath=new Path$$module$node_modules$three$build$three_module;this.subPaths.push(this.currentPath);this.currentPath.moveTo(a,b);return this},lineTo:function(a,b){this.currentPath.lineTo(a,b);return this},quadraticCurveTo:function(a,b,c,d){this.currentPath.quadraticCurveTo(a,b,c,d);return this},bezierCurveTo:function(a,b,c,d,e,f){this.currentPath.bezierCurveTo(a,b,c,d,e,f);return this},splineThru:function(a){this.currentPath.splineThru(a);
return this},toShapes:function(a,b){function c(F){const N=[];for(let p=0,A=F.length;p<A;p++){const G=F[p],O=new Shape$$module$node_modules$three$build$three_module;O.curves=G.curves;N.push(O)}return N}function d(F,N){const p=N.length;let A=!1;for(let O=p-1,P=0;P<p;O=P++){var G=N[O];let S=N[P],T=S.x-G.x,W=S.y-G.y;if(Math.abs(W)>Number.EPSILON){if(0>W&&(G=N[P],T=-T,S=N[O],W=-W),!(F.y<G.y||F.y>S.y))if(F.y===G.y){if(F.x===G.x)return!0}else{G=W*(F.x-G.x)-T*(F.y-G.y);if(0===G)return!0;0>G||(A=!A)}}else if(F.y===
G.y&&(S.x<=F.x&&F.x<=G.x||G.x<=F.x&&F.x<=S.x))return!0}return A}var e=ShapeUtils$$module$node_modules$three$build$three_module.isClockWise,f=this.subPaths;if(0===f.length)return[];if(!0===b)return c(f);b=[];if(1===f.length){var h=f[0];var g=new Shape$$module$node_modules$three$build$three_module;g.curves=h.curves;b.push(g);return b}var k=!e(f[0].getPoints());k=a?!k:k;g=[];const n=[];let w=[];var v=0;let x;n[v]=void 0;w[v]=[];for(let F=0,N=f.length;F<N;F++){h=f[F];x=h.getPoints();var z=e(x);(z=a?!z:
z)?(!k&&n[v]&&v++,n[v]={s:new Shape$$module$node_modules$three$build$three_module,p:x},n[v].s.curves=h.curves,k&&v++,w[v]=[]):w[v].push({h,p:x[0]})}if(!n[0])return c(f);if(1<n.length){a=!1;e=[];for(let F=0,N=n.length;F<N;F++)g[F]=[];for(let F=0,N=n.length;F<N;F++)for(f=w[F],h=0;h<f.length;h++){z=f[h];k=!0;for(v=0;v<n.length;v++)d(z.p,n[v].p)&&(F!==v&&e.push({froms:F,tos:v,hole:h}),k?(k=!1,g[v].push(z)):a=!0);k&&g[F].push(z)}0<e.length&&(a||(w=g))}for(let F=0,N=n.length;F<N;F++){g=n[F].s;b.push(g);
a=w[F];for(let p=0,A=a.length;p<A;p++)g.holes.push(a[p].h)}return b}});function Font$$module$node_modules$three$build$three_module(a){this.type="Font";this.data=a}Object.assign(Font$$module$node_modules$three$build$three_module.prototype,{isFont:!0,generateShapes:function(a,b){void 0===b&&(b=100);const c=[];a=createPaths$$module$node_modules$three$build$three_module(a,b,this.data);for(let d=0,e=a.length;d<e;d++)Array.prototype.push.apply(c,a[d].toShapes());return c}});
function createPaths$$module$node_modules$three$build$three_module(a,b,c){a=Array.from?Array.from(a):String(a).split("");b/=c.resolution;const d=(c.boundingBox.yMax-c.boundingBox.yMin+c.underlineThickness)*b,e=[];let f=0,h=0;for(let k=0;k<a.length;k++){var g=a[k];"\n"===g?(f=0,h-=d):(g=createPath$$module$node_modules$three$build$three_module(g,b,f,h,c),f+=g.offsetX,e.push(g.path))}return e}
function createPath$$module$node_modules$three$build$three_module(a,b,c,d,e){const f=e.glyphs[a]||e.glyphs["?"];if(f){a=new ShapePath$$module$node_modules$three$build$three_module;if(f.o){e=f._cachedOutline||(f._cachedOutline=f.o.split(" "));for(let x=0,z=e.length;x<z;)switch(e[x++]){case "m":var h=e[x++]*b+c;var g=e[x++]*b+d;a.moveTo(h,g);break;case "l":h=e[x++]*b+c;g=e[x++]*b+d;a.lineTo(h,g);break;case "q":h=e[x++]*b+c;g=e[x++]*b+d;var k=e[x++]*b+c;var n=e[x++]*b+d;a.quadraticCurveTo(k,n,h,g);break;
case "b":h=e[x++]*b+c;g=e[x++]*b+d;k=e[x++]*b+c;n=e[x++]*b+d;var w=e[x++]*b+c;var v=e[x++]*b+d;a.bezierCurveTo(k,n,w,v,h,g)}}return{offsetX:f.ha*b,path:a}}console.error('THREE.Font: character "'+a+'" does not exists in font family '+e.familyName+".")}function FontLoader$$module$node_modules$three$build$three_module(a){Loader$$module$node_modules$three$build$three_module.call(this,a)}
FontLoader$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Loader$$module$node_modules$three$build$three_module.prototype),{constructor:FontLoader$$module$node_modules$three$build$three_module,load:function(a,b,c,d){const e=this,f=new FileLoader$$module$node_modules$three$build$three_module(this.manager);f.setPath(this.path);f.setRequestHeader(this.requestHeader);f.load(a,function(h){let g;try{g=JSON.parse(h)}catch(k){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),
g=JSON.parse(h.substring(65,h.length-2))}h=e.parse(g);b&&b(h)},c,d)},parse:function(a){return new Font$$module$node_modules$three$build$three_module(a)}});let _context$$module$node_modules$three$build$three_module;
const AudioContext$$module$node_modules$three$build$three_module={getContext:function(){void 0===_context$$module$node_modules$three$build$three_module&&(_context$$module$node_modules$three$build$three_module=new (window.AudioContext||window.webkitAudioContext));return _context$$module$node_modules$three$build$three_module},setContext:function(a){_context$$module$node_modules$three$build$three_module=a}};
function AudioLoader$$module$node_modules$three$build$three_module(a){Loader$$module$node_modules$three$build$three_module.call(this,a)}
AudioLoader$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(Loader$$module$node_modules$three$build$three_module.prototype),{constructor:AudioLoader$$module$node_modules$three$build$three_module,load:function(a,b,c,d){const e=this,f=new FileLoader$$module$node_modules$three$build$three_module(e.manager);f.setResponseType("arraybuffer");f.setPath(e.path);f.setRequestHeader(e.requestHeader);f.load(a,function(h){try{const g=h.slice(0);AudioContext$$module$node_modules$three$build$three_module.getContext().decodeAudioData(g,
function(k){b(k)})}catch(g){d?d(g):console.error(g),e.manager.itemError(a)}},c,d)}});
function HemisphereLightProbe$$module$node_modules$three$build$three_module(a,b,c){LightProbe$$module$node_modules$three$build$three_module.call(this,void 0,c);a=(new Color$$module$node_modules$three$build$three_module).set(a);c=(new Color$$module$node_modules$three$build$three_module).set(b);b=new Vector3$$module$node_modules$three$build$three_module(a.r,a.g,a.b);a=new Vector3$$module$node_modules$three$build$three_module(c.r,c.g,c.b);c=Math.sqrt(Math.PI);const d=c*Math.sqrt(.75);this.sh.coefficients[0].copy(b).add(a).multiplyScalar(c);
this.sh.coefficients[1].copy(b).sub(a).multiplyScalar(d)}
HemisphereLightProbe$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(LightProbe$$module$node_modules$three$build$three_module.prototype),{constructor:HemisphereLightProbe$$module$node_modules$three$build$three_module,isHemisphereLightProbe:!0,copy:function(a){LightProbe$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);return this},toJSON:function(a){return LightProbe$$module$node_modules$three$build$three_module.prototype.toJSON.call(this,a)}});
function AmbientLightProbe$$module$node_modules$three$build$three_module(a,b){LightProbe$$module$node_modules$three$build$three_module.call(this,void 0,b);a=(new Color$$module$node_modules$three$build$three_module).set(a);this.sh.coefficients[0].set(a.r,a.g,a.b).multiplyScalar(2*Math.sqrt(Math.PI))}
AmbientLightProbe$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(LightProbe$$module$node_modules$three$build$three_module.prototype),{constructor:AmbientLightProbe$$module$node_modules$three$build$three_module,isAmbientLightProbe:!0,copy:function(a){LightProbe$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);return this},toJSON:function(a){return LightProbe$$module$node_modules$three$build$three_module.prototype.toJSON.call(this,a)}});
const _eyeRight$$module$node_modules$three$build$three_module=new Matrix4$$module$node_modules$three$build$three_module,_eyeLeft$$module$node_modules$three$build$three_module=new Matrix4$$module$node_modules$three$build$three_module;
function StereoCamera$$module$node_modules$three$build$three_module(){this.type="StereoCamera";this.aspect=1;this.eyeSep=.064;this.cameraL=new PerspectiveCamera$$module$node_modules$three$build$three_module;this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=!1;this.cameraR=new PerspectiveCamera$$module$node_modules$three$build$three_module;this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=!1;this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}
Object.assign(StereoCamera$$module$node_modules$three$build$three_module.prototype,{update:function(a){const b=this._cache;if(b.focus!==a.focus||b.fov!==a.fov||b.aspect!==a.aspect*this.aspect||b.near!==a.near||b.far!==a.far||b.zoom!==a.zoom||b.eyeSep!==this.eyeSep){b.focus=a.focus;b.fov=a.fov;b.aspect=a.aspect*this.aspect;b.near=a.near;b.far=a.far;b.zoom=a.zoom;b.eyeSep=this.eyeSep;const d=a.projectionMatrix.clone();var c=b.eyeSep/2;const e=c*b.near/b.focus,f=b.near*Math.tan(MathUtils$$module$node_modules$three$build$three_module.DEG2RAD*
b.fov*.5)/b.zoom;let h;_eyeLeft$$module$node_modules$three$build$three_module.elements[12]=-c;_eyeRight$$module$node_modules$three$build$three_module.elements[12]=c;c=-f*b.aspect+e;h=f*b.aspect+e;d.elements[0]=2*b.near/(h-c);d.elements[8]=(h+c)/(h-c);this.cameraL.projectionMatrix.copy(d);c=-f*b.aspect-e;h=f*b.aspect-e;d.elements[0]=2*b.near/(h-c);d.elements[8]=(h+c)/(h-c);this.cameraR.projectionMatrix.copy(d)}this.cameraL.matrixWorld.copy(a.matrixWorld).multiply(_eyeLeft$$module$node_modules$three$build$three_module);
this.cameraR.matrixWorld.copy(a.matrixWorld).multiply(_eyeRight$$module$node_modules$three$build$three_module)}});
class Clock$$module$node_modules$three$build$three_module{constructor(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1}start(){this.oldTime=this.startTime=("undefined"===typeof performance?Date:performance).now();this.elapsedTime=0;this.running=!0}stop(){this.getElapsedTime();this.autoStart=this.running=!1}getElapsedTime(){this.getDelta();return this.elapsedTime}getDelta(){let a=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const b=
("undefined"===typeof performance?Date:performance).now();a=(b-this.oldTime)/1E3;this.oldTime=b;this.elapsedTime+=a}return a}}
const _position$2$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_quaternion$3$$module$node_modules$three$build$three_module=new Quaternion$$module$node_modules$three$build$three_module,_scale$1$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_orientation$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module;
class AudioListener$$module$node_modules$three$build$three_module extends Object3D$$module$node_modules$three$build$three_module{constructor(){super();this.type="AudioListener";this.context=AudioContext$$module$node_modules$three$build$three_module.getContext();this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.filter=null;this.timeDelta=0;this._clock=new Clock$$module$node_modules$three$build$three_module}getInput(){return this.gain}removeFilter(){null!==this.filter&&
(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null);return this}getFilter(){return this.filter}setFilter(a){null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination);this.filter=a;this.gain.connect(this.filter);this.filter.connect(this.context.destination);return this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(a){this.gain.gain.setTargetAtTime(a,
this.context.currentTime,.01);return this}updateMatrixWorld(a){super.updateMatrixWorld(a);a=this.context.listener;const b=this.up;this.timeDelta=this._clock.getDelta();this.matrixWorld.decompose(_position$2$$module$node_modules$three$build$three_module,_quaternion$3$$module$node_modules$three$build$three_module,_scale$1$$module$node_modules$three$build$three_module);_orientation$$module$node_modules$three$build$three_module.set(0,0,-1).applyQuaternion(_quaternion$3$$module$node_modules$three$build$three_module);
if(a.positionX){const c=this.context.currentTime+this.timeDelta;a.positionX.linearRampToValueAtTime(_position$2$$module$node_modules$three$build$three_module.x,c);a.positionY.linearRampToValueAtTime(_position$2$$module$node_modules$three$build$three_module.y,c);a.positionZ.linearRampToValueAtTime(_position$2$$module$node_modules$three$build$three_module.z,c);a.forwardX.linearRampToValueAtTime(_orientation$$module$node_modules$three$build$three_module.x,c);a.forwardY.linearRampToValueAtTime(_orientation$$module$node_modules$three$build$three_module.y,
c);a.forwardZ.linearRampToValueAtTime(_orientation$$module$node_modules$three$build$three_module.z,c);a.upX.linearRampToValueAtTime(b.x,c);a.upY.linearRampToValueAtTime(b.y,c);a.upZ.linearRampToValueAtTime(b.z,c)}else a.setPosition(_position$2$$module$node_modules$three$build$three_module.x,_position$2$$module$node_modules$three$build$three_module.y,_position$2$$module$node_modules$three$build$three_module.z),a.setOrientation(_orientation$$module$node_modules$three$build$three_module.x,_orientation$$module$node_modules$three$build$three_module.y,
_orientation$$module$node_modules$three$build$three_module.z,b.x,b.y,b.z)}}
class Audio$$module$node_modules$three$build$three_module extends Object3D$$module$node_modules$three$build$three_module{constructor(a){super();this.type="Audio";this.listener=a;this.context=a.context;this.gain=this.context.createGain();this.gain.connect(a.getInput());this.autoplay=!1;this.buffer=null;this.detune=0;this.loop=!1;this.offset=this.loopEnd=this.loopStart=0;this.duration=void 0;this.playbackRate=1;this.isPlaying=!1;this.hasPlaybackControl=!0;this.source=null;this.sourceType="empty";this._progress=
this._startedAt=0;this._connected=!1;this.filters=[]}getOutput(){return this.gain}setNodeSource(a){this.hasPlaybackControl=!1;this.sourceType="audioNode";this.source=a;this.connect();return this}setMediaElementSource(a){this.hasPlaybackControl=!1;this.sourceType="mediaNode";this.source=this.context.createMediaElementSource(a);this.connect();return this}setMediaStreamSource(a){this.hasPlaybackControl=!1;this.sourceType="mediaStreamNode";this.source=this.context.createMediaStreamSource(a);this.connect();
return this}setBuffer(a){this.buffer=a;this.sourceType="buffer";this.autoplay&&this.play();return this}play(a){void 0===a&&(a=0);if(!0===this.isPlaying)console.warn("THREE.Audio: Audio is already playing.");else if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this._startedAt=this.context.currentTime+a,a=this.context.createBufferSource(),a.buffer=this.buffer,a.loop=this.loop,a.loopStart=this.loopStart,a.loopEnd=this.loopEnd,a.onended=this.onEnded.bind(this),
a.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=a,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress%=this.duration||this.buffer.duration),this.source.stop(),this.source.onended=
null,this.isPlaying=!1),this}stop(){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(let a=1,b=this.filters.length;a<b;a++)this.filters[a-1].connect(this.filters[a]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());this._connected=
!0;return this}disconnect(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(let a=1,b=this.filters.length;a<b;a++)this.filters[a-1].disconnect(this.filters[a]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());this._connected=!1;return this}getFilters(){return this.filters}setFilters(a){a||(a=[]);!0===this._connected?(this.disconnect(),this.filters=a,this.connect()):this.filters=a;return this}setDetune(a){this.detune=
a;if(void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(a){return this.setFilters(a?[a]:[])}setPlaybackRate(a){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this.playbackRate=a,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,
.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(a){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this.loop=a,!0===this.isPlaying&&(this.source.loop=this.loop),this}setLoopStart(a){this.loopStart=a;return this}setLoopEnd(a){this.loopEnd=a;return this}getVolume(){return this.gain.gain.value}setVolume(a){this.gain.gain.setTargetAtTime(a,
this.context.currentTime,.01);return this}}const _position$3$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_quaternion$4$$module$node_modules$three$build$three_module=new Quaternion$$module$node_modules$three$build$three_module,_scale$2$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_orientation$1$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module;
class PositionalAudio$$module$node_modules$three$build$three_module extends Audio$$module$node_modules$three$build$three_module{constructor(a){super(a);this.panner=this.context.createPanner();this.panner.panningModel="HRTF";this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(a){this.panner.refDistance=a;return this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(a){this.panner.rolloffFactor=a;return this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(a){this.panner.distanceModel=
a;return this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(a){this.panner.maxDistance=a;return this}setDirectionalCone(a,b,c){this.panner.coneInnerAngle=a;this.panner.coneOuterAngle=b;this.panner.coneOuterGain=c;return this}updateMatrixWorld(a){super.updateMatrixWorld(a);if(!0!==this.hasPlaybackControl||!1!==this.isPlaying)if(this.matrixWorld.decompose(_position$3$$module$node_modules$three$build$three_module,_quaternion$4$$module$node_modules$three$build$three_module,_scale$2$$module$node_modules$three$build$three_module),
_orientation$1$$module$node_modules$three$build$three_module.set(0,0,1).applyQuaternion(_quaternion$4$$module$node_modules$three$build$three_module),a=this.panner,a.positionX){const b=this.context.currentTime+this.listener.timeDelta;a.positionX.linearRampToValueAtTime(_position$3$$module$node_modules$three$build$three_module.x,b);a.positionY.linearRampToValueAtTime(_position$3$$module$node_modules$three$build$three_module.y,b);a.positionZ.linearRampToValueAtTime(_position$3$$module$node_modules$three$build$three_module.z,
b);a.orientationX.linearRampToValueAtTime(_orientation$1$$module$node_modules$three$build$three_module.x,b);a.orientationY.linearRampToValueAtTime(_orientation$1$$module$node_modules$three$build$three_module.y,b);a.orientationZ.linearRampToValueAtTime(_orientation$1$$module$node_modules$three$build$three_module.z,b)}else a.setPosition(_position$3$$module$node_modules$three$build$three_module.x,_position$3$$module$node_modules$three$build$three_module.y,_position$3$$module$node_modules$three$build$three_module.z),
a.setOrientation(_orientation$1$$module$node_modules$three$build$three_module.x,_orientation$1$$module$node_modules$three$build$three_module.y,_orientation$1$$module$node_modules$three$build$three_module.z)}}
class AudioAnalyser$$module$node_modules$three$build$three_module{constructor(a,b){this.analyser=a.context.createAnalyser();this.analyser.fftSize=void 0!==b?b:2048;this.data=new Uint8Array(this.analyser.frequencyBinCount);a.getOutput().connect(this.analyser)}getFrequencyData(){this.analyser.getByteFrequencyData(this.data);return this.data}getAverageFrequency(){let a=0;const b=this.getFrequencyData();for(let c=0;c<b.length;c++)a+=b[c];return a/b.length}}
function PropertyMixer$$module$node_modules$three$build$three_module(a,b,c){this.binding=a;this.valueSize=c;let d;switch(b){case "quaternion":a=this._slerp;b=this._slerpAdditive;d=this._setAdditiveIdentityQuaternion;this.buffer=new Float64Array(6*c);this._workIndex=5;break;case "string":case "bool":b=a=this._select;d=this._setAdditiveIdentityOther;this.buffer=Array(5*c);break;default:a=this._lerp,b=this._lerpAdditive,d=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*c)}this._mixBufferRegion=
a;this._mixBufferRegionAdditive=b;this._setIdentity=d;this._origIndex=3;this._addIndex=4;this.referenceCount=this.useCount=this.cumulativeWeightAdditive=this.cumulativeWeight=0}
Object.assign(PropertyMixer$$module$node_modules$three$build$three_module.prototype,{accumulate:function(a,b){const c=this.buffer,d=this.valueSize;a=a*d+d;var e=this.cumulativeWeight;if(0===e){for(e=0;e!==d;++e)c[a+e]=c[e];e=b}else e+=b,this._mixBufferRegion(c,a,0,b/e,d);this.cumulativeWeight=e},accumulateAdditive:function(a){const b=this.buffer,c=this.valueSize,d=c*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity();this._mixBufferRegionAdditive(b,d,0,a,c);this.cumulativeWeightAdditive+=
a},apply:function(a){const b=this.valueSize,c=this.buffer;a=a*b+b;const d=this.cumulativeWeight,e=this.cumulativeWeightAdditive,f=this.binding;this.cumulativeWeightAdditive=this.cumulativeWeight=0;1>d&&this._mixBufferRegion(c,a,b*this._origIndex,1-d,b);0<e&&this._mixBufferRegionAdditive(c,a,this._addIndex*b,1,b);for(let h=b,g=b+b;h!==g;++h)if(c[h]!==c[h+b]){f.setValue(c,a);break}},saveOriginalState:function(){const a=this.buffer,b=this.valueSize,c=b*this._origIndex;this.binding.getValue(a,c);for(let d=
b,e=c;d!==e;++d)a[d]=a[c+d%b];this._setIdentity();this.cumulativeWeightAdditive=this.cumulativeWeight=0},restoreOriginalState:function(){this.binding.setValue(this.buffer,3*this.valueSize)},_setAdditiveIdentityNumeric:function(){var a=this._addIndex*this.valueSize;const b=a+this.valueSize;for(;a<b;a++)this.buffer[a]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric();this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){const a=this._origIndex*
this.valueSize,b=this._addIndex*this.valueSize;for(let c=0;c<this.valueSize;c++)this.buffer[b+c]=this.buffer[a+c]},_select:function(a,b,c,d,e){if(.5<=d)for(d=0;d!==e;++d)a[b+d]=a[c+d]},_slerp:function(a,b,c,d){Quaternion$$module$node_modules$three$build$three_module.slerpFlat(a,b,a,b,a,c,d)},_slerpAdditive:function(a,b,c,d,e){e*=this._workIndex;Quaternion$$module$node_modules$three$build$three_module.multiplyQuaternionsFlat(a,e,a,b,a,c);Quaternion$$module$node_modules$three$build$three_module.slerpFlat(a,
b,a,b,a,e,d)},_lerp:function(a,b,c,d,e){const f=1-d;for(let h=0;h!==e;++h){const g=b+h;a[g]=a[g]*f+a[c+h]*d}},_lerpAdditive:function(a,b,c,d,e){for(let f=0;f!==e;++f){const h=b+f;a[h]+=a[c+f]*d}}});
const _RESERVED_CHARS_RE$$module$node_modules$three$build$three_module="\\[\\]\\.:\\/",_reservedRe$$module$node_modules$three$build$three_module=new RegExp("["+_RESERVED_CHARS_RE$$module$node_modules$three$build$three_module+"]","g"),_wordChar$$module$node_modules$three$build$three_module="[^"+_RESERVED_CHARS_RE$$module$node_modules$three$build$three_module+"]",_wordCharOrDot$$module$node_modules$three$build$three_module="[^"+_RESERVED_CHARS_RE$$module$node_modules$three$build$three_module.replace("\\.",
"")+"]",_directoryRe$$module$node_modules$three$build$three_module=/((?:WC+[\/:])*)/.source.replace("WC",_wordChar$$module$node_modules$three$build$three_module),_nodeRe$$module$node_modules$three$build$three_module=/(WCOD+)?/.source.replace("WCOD",_wordCharOrDot$$module$node_modules$three$build$three_module),_objectRe$$module$node_modules$three$build$three_module=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",_wordChar$$module$node_modules$three$build$three_module),_propertyRe$$module$node_modules$three$build$three_module=
/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",_wordChar$$module$node_modules$three$build$three_module),_trackRe$$module$node_modules$three$build$three_module=new RegExp("^"+_directoryRe$$module$node_modules$three$build$three_module+_nodeRe$$module$node_modules$three$build$three_module+_objectRe$$module$node_modules$three$build$three_module+_propertyRe$$module$node_modules$three$build$three_module+"$"),_supportedObjectNames$$module$node_modules$three$build$three_module=["material","materials","bones"];
function Composite$$module$node_modules$three$build$three_module(a,b,c){c=c||PropertyBinding$$module$node_modules$three$build$three_module.parseTrackName(b);this._targetGroup=a;this._bindings=a.subscribe_(b,c)}
Object.assign(Composite$$module$node_modules$three$build$three_module.prototype,{getValue:function(a,b){this.bind();const c=this._bindings[this._targetGroup.nCachedObjects_];void 0!==c&&c.getValue(a,b)},setValue:function(a,b){const c=this._bindings;for(let d=this._targetGroup.nCachedObjects_,e=c.length;d!==e;++d)c[d].setValue(a,b)},bind:function(){const a=this._bindings;for(let b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].bind()},unbind:function(){const a=this._bindings;for(let b=
this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].unbind()}});function PropertyBinding$$module$node_modules$three$build$three_module(a,b,c){this.path=b;this.parsedPath=c||PropertyBinding$$module$node_modules$three$build$three_module.parseTrackName(b);this.node=PropertyBinding$$module$node_modules$three$build$three_module.findNode(a,this.parsedPath.nodeName)||a;this.rootNode=a}
Object.assign(PropertyBinding$$module$node_modules$three$build$three_module,{Composite:Composite$$module$node_modules$three$build$three_module,create:function(a,b,c){return a&&a.isAnimationObjectGroup?new PropertyBinding$$module$node_modules$three$build$three_module.Composite(a,b,c):new PropertyBinding$$module$node_modules$three$build$three_module(a,b,c)},sanitizeNodeName:function(a){return a.replace(/\s/g,"_").replace(_reservedRe$$module$node_modules$three$build$three_module,"")},parseTrackName:function(a){var b=
_trackRe$$module$node_modules$three$build$three_module.exec(a);if(!b)throw Error("PropertyBinding: Cannot parse trackName: "+a);b={nodeName:b[2],objectName:b[3],objectIndex:b[4],propertyName:b[5],propertyIndex:b[6]};const c=b.nodeName&&b.nodeName.lastIndexOf(".");if(void 0!==c&&-1!==c){const d=b.nodeName.substring(c+1);-1!==_supportedObjectNames$$module$node_modules$three$build$three_module.indexOf(d)&&(b.nodeName=b.nodeName.substring(0,c),b.objectName=d)}if(null===b.propertyName||0===b.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+
a);return b},findNode:function(a,b){if(!b||""===b||"."===b||-1===b||b===a.name||b===a.uuid)return a;if(a.skeleton){const c=a.skeleton.getBoneByName(b);if(void 0!==c)return c}if(a.children){const c=function(d){for(let f=0;f<d.length;f++){var e=d[f];if(e.name===b||e.uuid===b||(e=c(e.children)))return e}return null};if(a=c(a.children))return a}return null}});
Object.assign(PropertyBinding$$module$node_modules$three$build$three_module.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(a,b){a[b]=this.node[this.propertyName]},function(a,b){const c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)a[b++]=c[d]},function(a,b){a[b]=this.resolvedProperty[this.propertyIndex]},
function(a,b){this.resolvedProperty.toArray(a,b)}],SetterByBindingTypeAndVersioning:[[function(a,b){this.targetObject[this.propertyName]=a[b]},function(a,b){this.targetObject[this.propertyName]=a[b];this.targetObject.needsUpdate=!0},function(a,b){this.targetObject[this.propertyName]=a[b];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,b){const c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)c[d]=a[b++]},function(a,b){const c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)c[d]=
a[b++];this.targetObject.needsUpdate=!0},function(a,b){const c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,b){this.resolvedProperty[this.propertyIndex]=a[b]},function(a,b){this.resolvedProperty[this.propertyIndex]=a[b];this.targetObject.needsUpdate=!0},function(a,b){this.resolvedProperty[this.propertyIndex]=a[b];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,b){this.resolvedProperty.fromArray(a,b)},function(a,
b){this.resolvedProperty.fromArray(a,b);this.targetObject.needsUpdate=!0},function(a,b){this.resolvedProperty.fromArray(a,b);this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(a,b){this.bind();this.getValue(a,b)},setValue:function(a,b){this.bind();this.setValue(a,b)},bind:function(){let a=this.node;var b=this.parsedPath,c=b.objectName;const d=b.propertyName;let e=b.propertyIndex;a||(this.node=a=PropertyBinding$$module$node_modules$three$build$three_module.findNode(this.rootNode,b.nodeName)||
this.rootNode);this.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;if(a){if(c){var f=b.objectIndex;switch(c){case "materials":if(!a.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!a.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}a=a.material.materials;break;case "bones":if(!a.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",
this);return}a=a.skeleton.bones;for(c=0;c<a.length;c++)if(a[c].name===f){f=c;break}break;default:if(void 0===a[c]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}a=a[c]}if(void 0!==f){if(void 0===a[f]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,a);return}a=a[f]}}f=a[d];if(void 0===f)console.error("THREE.PropertyBinding: Trying to update property for track: "+b.nodeName+"."+d+" but it wasn't found.",
a);else{b=this.Versioning.None;this.targetObject=a;void 0!==a.needsUpdate?b=this.Versioning.NeedsUpdate:void 0!==a.matrixWorldNeedsUpdate&&(b=this.Versioning.MatrixWorldNeedsUpdate);c=this.BindingType.Direct;if(void 0!==e){if("morphTargetInfluences"===d){if(!a.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(a.geometry.isBufferGeometry){if(!a.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",
this);return}void 0!==a.morphTargetDictionary[e]&&(e=a.morphTargetDictionary[e])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}c=this.BindingType.ArrayElement;this.resolvedProperty=f;this.propertyIndex=e}else void 0!==f.fromArray&&void 0!==f.toArray?(c=this.BindingType.HasFromToArray,this.resolvedProperty=f):Array.isArray(f)?(c=this.BindingType.EntireArray,this.resolvedProperty=f):this.propertyName=
d;this.getValue=this.GetterByBindingType[c];this.setValue=this.SetterByBindingTypeAndVersioning[c][b]}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")},unbind:function(){this.node=null;this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound}});
Object.assign(PropertyBinding$$module$node_modules$three$build$three_module.prototype,{_getValue_unbound:PropertyBinding$$module$node_modules$three$build$three_module.prototype.getValue,_setValue_unbound:PropertyBinding$$module$node_modules$three$build$three_module.prototype.setValue});
function AnimationObjectGroup$$module$node_modules$three$build$three_module(){this.uuid=MathUtils$$module$node_modules$three$build$three_module.generateUUID();this._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;const a={};this._indicesByUUID=a;for(let c=0,d=arguments.length;c!==d;++c)a[arguments[c].uuid]=c;this._paths=[];this._parsedPaths=[];this._bindings=[];this._bindingsIndicesByPath={};const b=this;this.stats={objects:{get total(){return b._objects.length},get inUse(){return this.total-
b.nCachedObjects_}},get bindingsPerObject(){return b._bindings.length}}}
Object.assign(AnimationObjectGroup$$module$node_modules$three$build$three_module.prototype,{isAnimationObjectGroup:!0,add:function(){const a=this._objects,b=this._indicesByUUID,c=this._paths,d=this._parsedPaths,e=this._bindings,f=e.length;let h=void 0,g=a.length,k=this.nCachedObjects_;for(let v=0,x=arguments.length;v!==x;++v){const z=arguments[v];var n=z.uuid;let F=b[n];if(void 0===F){F=g++;b[n]=F;a.push(z);for(let N=0,p=f;N!==p;++N)e[N].push(new PropertyBinding$$module$node_modules$three$build$three_module(z,
c[N],d[N]))}else if(F<k){h=a[F];const N=--k;var w=a[N];b[w.uuid]=F;a[F]=w;b[n]=N;a[N]=z;for(let p=0,A=f;p!==A;++p)n=e[p],w=n[F],n[F]=n[N],void 0===w&&(w=new PropertyBinding$$module$node_modules$three$build$three_module(z,c[p],d[p])),n[N]=w}else a[F]!==h&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=k},remove:function(){const a=this._objects,b=this._indicesByUUID,
c=this._bindings,d=c.length;let e=this.nCachedObjects_;for(let g=0,k=arguments.length;g!==k;++g){var f=arguments[g],h=f.uuid;const n=b[h];if(void 0!==n&&n>=e){const w=e++,v=a[w];b[v.uuid]=n;a[n]=v;b[h]=w;a[w]=f;for(let x=0,z=d;x!==z;++x)f=c[x],h=f[n],f[n]=f[w],f[w]=h}}this.nCachedObjects_=e},uncache:function(){const a=this._objects,b=this._indicesByUUID,c=this._bindings,d=c.length;let e=this.nCachedObjects_,f=a.length;for(let w=0,v=arguments.length;w!==v;++w){var h=arguments[w].uuid;const x=b[h];
if(void 0!==x)if(delete b[h],x<e){h=--e;var g=a[h],k=--f,n=a[k];b[g.uuid]=x;a[x]=g;b[n.uuid]=h;a[h]=n;a.pop();for(let z=0,F=d;z!==F;++z)g=c[z],n=g[k],g[x]=g[h],g[h]=n,g.pop()}else{h=--f;k=a[h];b[k.uuid]=x;a[x]=k;a.pop();for(let z=0,F=d;z!==F;++z)k=c[z],k[x]=k[h],k.pop()}}this.nCachedObjects_=e},subscribe_:function(a,b){const c=this._bindingsIndicesByPath;let d=c[a];const e=this._bindings;if(void 0!==d)return e[d];const f=this._paths,h=this._parsedPaths,g=this._objects,k=this.nCachedObjects_,n=Array(g.length);
d=e.length;c[a]=d;f.push(a);h.push(b);e.push(n);for(let w=k,v=g.length;w!==v;++w)n[w]=new PropertyBinding$$module$node_modules$three$build$three_module(g[w],a,b);return n},unsubscribe_:function(a){const b=this._bindingsIndicesByPath,c=b[a];if(void 0!==c){const d=this._paths,e=this._parsedPaths,f=this._bindings,h=f.length-1,g=f[h];b[a[h]]=c;f[c]=g;f.pop();e[c]=e[h];e.pop();d[c]=d[h];d.pop()}}});
class AnimationAction$$module$node_modules$three$build$three_module{constructor(a,b,c,d){this._mixer=a;this._clip=b;this._localRoot=c||null;this.blendMode=d||b.blendMode;a=b.tracks;b=a.length;c=Array(b);d={endingStart:ZeroCurvatureEnding$$module$node_modules$three$build$three_module,endingEnd:ZeroCurvatureEnding$$module$node_modules$three$build$three_module};for(let e=0;e!==b;++e){const f=a[e].createInterpolant(null);c[e]=f;f.settings=d}this._interpolantSettings=d;this._interpolants=c;this._propertyBindings=
Array(b);this._weightInterpolant=this._timeScaleInterpolant=this._byClipCacheIndex=this._cacheIndex=null;this.loop=LoopRepeat$$module$node_modules$three$build$three_module;this._loopCount=-1;this._startTime=null;this.time=0;this._effectiveWeight=this.weight=this._effectiveTimeScale=this.timeScale=1;this.repetitions=Infinity;this.paused=!1;this.enabled=!0;this.clampWhenFinished=!1;this.zeroSlopeAtEnd=this.zeroSlopeAtStart=!0}play(){this._mixer._activateAction(this);return this}stop(){this._mixer._deactivateAction(this);
return this.reset()}reset(){this.paused=!1;this.enabled=!0;this.time=0;this._loopCount=-1;this._startTime=null;return this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(a){this._startTime=a;return this}setLoop(a,b){this.loop=a;this.repetitions=b;return this}setEffectiveWeight(a){this.weight=a;this._effectiveWeight=this.enabled?a:0;
return this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(a){return this._scheduleFading(a,0,1)}fadeOut(a){return this._scheduleFading(a,1,0)}crossFadeFrom(a,b,c){a.fadeOut(b);this.fadeIn(b);if(c){c=this._clip.duration;const d=a._clip.duration,e=c/d;a.warp(1,d/c,b);this.warp(e,1,b)}return this}crossFadeTo(a,b,c){return a.crossFadeFrom(this,b,c)}stopFading(){const a=this._weightInterpolant;null!==a&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(a));return this}setEffectiveTimeScale(a){this.timeScale=
a;this._effectiveTimeScale=this.paused?0:a;return this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(a){this.timeScale=this._clip.duration/a;return this.stopWarping()}syncWith(a){this.time=a.time;this.timeScale=a.timeScale;return this.stopWarping()}halt(a){return this.warp(this._effectiveTimeScale,0,a)}warp(a,b,c){var d=this._mixer;const e=d.time,f=this.timeScale;var h=this._timeScaleInterpolant;null===h&&(this._timeScaleInterpolant=h=d._lendControlInterpolant());
d=h.parameterPositions;h=h.sampleValues;d[0]=e;d[1]=e+c;h[0]=a/f;h[1]=b/f;return this}stopWarping(){const a=this._timeScaleInterpolant;null!==a&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(a));return this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(a,b,c,d){if(this.enabled){var e=this._startTime;if(null!==e){b=(a-e)*c;if(0>b||0===c)return;this._startTime=null;b*=c}b*=this._updateTimeScale(a);c=this._updateTime(b);
a=this._updateWeight(a);if(0<a)switch(b=this._interpolants,e=this._propertyBindings,this.blendMode){case AdditiveAnimationBlendMode$$module$node_modules$three$build$three_module:for(let f=0,h=b.length;f!==h;++f)b[f].evaluate(c),e[f].accumulateAdditive(a);break;default:for(let f=0,h=b.length;f!==h;++f)b[f].evaluate(c),e[f].accumulate(d,a)}}else this._updateWeight(a)}_updateWeight(a){let b=0;if(this.enabled){b=this.weight;const c=this._weightInterpolant;if(null!==c){const d=c.evaluate(a)[0];b*=d;a>
c.parameterPositions[1]&&(this.stopFading(),0===d&&(this.enabled=!1))}}return this._effectiveWeight=b}_updateTimeScale(a){let b=0;if(!this.paused){b=this.timeScale;const c=this._timeScaleInterpolant;if(null!==c){const d=c.evaluate(a)[0];b*=d;a>c.parameterPositions[1]&&(this.stopWarping(),0===b?this.paused=!0:this.timeScale=b)}}return this._effectiveTimeScale=b}_updateTime(a){const b=this._clip.duration;var c=this.loop;let d=this.time+a,e=this._loopCount;const f=c===LoopPingPong$$module$node_modules$three$build$three_module;
if(0===a)return-1===e?d:f&&1===(e&1)?b-d:d;if(c===LoopOnce$$module$node_modules$three$build$three_module)a:{if(-1===e&&(this._loopCount=0,this._setEndings(!0,!0,!1)),d>=b)d=b;else if(0>d)d=0;else{this.time=d;break a}this.clampWhenFinished?this.paused=!0:this.enabled=!1;this.time=d;this._mixer.dispatchEvent({type:"finished",action:this,direction:0>a?-1:1})}else{-1===e&&(0<=a?(e=0,this._setEndings(!0,0===this.repetitions,f)):this._setEndings(0===this.repetitions,!0,f));if(d>=b||0>d){c=Math.floor(d/
b);d-=b*c;e+=Math.abs(c);const h=this.repetitions-e;0>=h?(this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=d=0<a?b:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:0<a?1:-1})):(1===h?(a=0>a,this._setEndings(a,!a,f)):this._setEndings(!1,!1,f),this._loopCount=e,this.time=d,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c}))}else this.time=d;if(f&&1===(e&1))return b-d}return d}_setEndings(a,b,c){const d=this._interpolantSettings;c?(d.endingStart=ZeroSlopeEnding$$module$node_modules$three$build$three_module,
d.endingEnd=ZeroSlopeEnding$$module$node_modules$three$build$three_module):(d.endingStart=a?this.zeroSlopeAtStart?ZeroSlopeEnding$$module$node_modules$three$build$three_module:ZeroCurvatureEnding$$module$node_modules$three$build$three_module:WrapAroundEnding$$module$node_modules$three$build$three_module,d.endingEnd=b?this.zeroSlopeAtEnd?ZeroSlopeEnding$$module$node_modules$three$build$three_module:ZeroCurvatureEnding$$module$node_modules$three$build$three_module:WrapAroundEnding$$module$node_modules$three$build$three_module)}_scheduleFading(a,
b,c){var d=this._mixer;const e=d.time;var f=this._weightInterpolant;null===f&&(this._weightInterpolant=f=d._lendControlInterpolant());d=f.parameterPositions;f=f.sampleValues;d[0]=e;f[0]=b;d[1]=e+a;f[1]=c;return this}}function AnimationMixer$$module$node_modules$three$build$three_module(a){this._root=a;this._initMemoryManager();this.time=this._accuIndex=0;this.timeScale=1}
AnimationMixer$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(EventDispatcher$$module$node_modules$three$build$three_module.prototype),{constructor:AnimationMixer$$module$node_modules$three$build$three_module,_bindAction:function(a,b){const c=a._localRoot||this._root,d=a._clip.tracks,e=d.length,f=a._propertyBindings;a=a._interpolants;const h=c.uuid;var g=this._bindingsByRootAndName;let k=g[h];void 0===k&&(k={},g[h]=k);for(g=0;g!==e;++g){const n=d[g],w=n.name;let v=
k[w];if(void 0===v){v=f[g];if(void 0!==v){null===v._cacheIndex&&(++v.referenceCount,this._addInactiveBinding(v,h,w));continue}v=new PropertyMixer$$module$node_modules$three$build$three_module(PropertyBinding$$module$node_modules$three$build$three_module.create(c,w,b&&b._propertyBindings[g].binding.parsedPath),n.ValueTypeName,n.getValueSize());++v.referenceCount;this._addInactiveBinding(v,h,w)}f[g]=v;a[g].resultBuffer=v.buffer}},_activateAction:function(a){if(!this._isActiveAction(a)){if(null===a._cacheIndex){var b=
(a._localRoot||this._root).uuid,c=a._clip.uuid;const d=this._actionsByClip[c];this._bindAction(a,d&&d.knownActions[0]);this._addInactiveAction(a,c,b)}b=a._propertyBindings;for(let d=0,e=b.length;d!==e;++d)c=b[d],0===c.useCount++&&(this._lendBinding(c),c.saveOriginalState());this._lendAction(a)}},_deactivateAction:function(a){if(this._isActiveAction(a)){const b=a._propertyBindings;for(let c=0,d=b.length;c!==d;++c){const e=b[c];0===--e.useCount&&(e.restoreOriginalState(),this._takeBackBinding(e))}this._takeBackAction(a)}},
_initMemoryManager:function(){this._actions=[];this._nActiveActions=0;this._actionsByClip={};this._bindings=[];this._nActiveBindings=0;this._bindingsByRootAndName={};this._controlInterpolants=[];this._nActiveControlInterpolants=0;const a=this;this.stats={actions:{get total(){return a._actions.length},get inUse(){return a._nActiveActions}},bindings:{get total(){return a._bindings.length},get inUse(){return a._nActiveBindings}},controlInterpolants:{get total(){return a._controlInterpolants.length},
get inUse(){return a._nActiveControlInterpolants}}}},_isActiveAction:function(a){a=a._cacheIndex;return null!==a&&a<this._nActiveActions},_addInactiveAction:function(a,b,c){const d=this._actions,e=this._actionsByClip;let f=e[b];void 0===f?(f={knownActions:[a],actionByRoot:{}},a._byClipCacheIndex=0,e[b]=f):(b=f.knownActions,a._byClipCacheIndex=b.length,b.push(a));a._cacheIndex=d.length;d.push(a);f.actionByRoot[c]=a},_removeInactiveAction:function(a){var b=this._actions,c=b[b.length-1],d=a._cacheIndex;
c._cacheIndex=d;b[d]=c;b.pop();a._cacheIndex=null;b=a._clip.uuid;c=this._actionsByClip;d=c[b];const e=d.knownActions,f=e[e.length-1],h=a._byClipCacheIndex;f._byClipCacheIndex=h;e[h]=f;e.pop();a._byClipCacheIndex=null;delete d.actionByRoot[(a._localRoot||this._root).uuid];0===e.length&&delete c[b];this._removeInactiveBindingsForAction(a)},_removeInactiveBindingsForAction:function(a){a=a._propertyBindings;for(let b=0,c=a.length;b!==c;++b){const d=a[b];0===--d.referenceCount&&this._removeInactiveBinding(d)}},
_lendAction:function(a){const b=this._actions,c=a._cacheIndex,d=this._nActiveActions++,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_takeBackAction:function(a){const b=this._actions,c=a._cacheIndex,d=--this._nActiveActions,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_addInactiveBinding:function(a,b,c){const d=this._bindingsByRootAndName,e=this._bindings;let f=d[b];void 0===f&&(f={},d[b]=f);f[c]=a;a._cacheIndex=e.length;e.push(a)},_removeInactiveBinding:function(a){const b=this._bindings;
var c=a.binding;const d=c.rootNode.uuid;c=c.path;const e=this._bindingsByRootAndName,f=e[d],h=b[b.length-1];a=a._cacheIndex;h._cacheIndex=a;b[a]=h;b.pop();delete f[c];0===Object.keys(f).length&&delete e[d]},_lendBinding:function(a){const b=this._bindings,c=a._cacheIndex,d=this._nActiveBindings++,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_takeBackBinding:function(a){const b=this._bindings,c=a._cacheIndex,d=--this._nActiveBindings,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_lendControlInterpolant:function(){const a=
this._controlInterpolants,b=this._nActiveControlInterpolants++;let c=a[b];void 0===c&&(c=new LinearInterpolant$$module$node_modules$three$build$three_module(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),c.__cacheIndex=b,a[b]=c);return c},_takeBackControlInterpolant:function(a){const b=this._controlInterpolants,c=a.__cacheIndex,d=--this._nActiveControlInterpolants,e=b[d];a.__cacheIndex=d;b[d]=a;e.__cacheIndex=c;b[c]=e},_controlInterpolantsResultBuffer:new Float32Array(1),
clipAction:function(a,b,c){var d=b||this._root;const e=d.uuid;d="string"===typeof a?AnimationClip$$module$node_modules$three$build$three_module.findByName(d,a):a;a=null!==d?d.uuid:a;const f=this._actionsByClip[a];var h=null;void 0===c&&(c=null!==d?d.blendMode:NormalAnimationBlendMode$$module$node_modules$three$build$three_module);if(void 0!==f){h=f.actionByRoot[e];if(void 0!==h&&h.blendMode===c)return h;h=f.knownActions[0];null===d&&(d=h._clip)}if(null===d)return null;b=new AnimationAction$$module$node_modules$three$build$three_module(this,
d,b,c);this._bindAction(b,h);this._addInactiveAction(b,a,e);return b},existingAction:function(a,b){var c=b||this._root;b=c.uuid;c="string"===typeof a?AnimationClip$$module$node_modules$three$build$three_module.findByName(c,a):a;a=this._actionsByClip[c?c.uuid:a];return void 0!==a?a.actionByRoot[b]||null:null},stopAllAction:function(){const a=this._actions;var b=this._nActiveActions;for(--b;0<=b;--b)a[b].stop();return this},update:function(a){a*=this.timeScale;var b=this._actions,c=this._nActiveActions;
const d=this.time+=a,e=Math.sign(a),f=this._accuIndex^=1;for(let h=0;h!==c;++h)b[h]._update(d,a,e,f);a=this._bindings;b=this._nActiveBindings;for(c=0;c!==b;++c)a[c].apply(f);return this},setTime:function(a){this.time=0;for(let b=0;b<this._actions.length;b++)this._actions[b].time=0;return this.update(a)},getRoot:function(){return this._root},uncacheClip:function(a){const b=this._actions;a=a.uuid;const c=this._actionsByClip;var d=c[a];if(void 0!==d){d=d.knownActions;for(let e=0,f=d.length;e!==f;++e){const h=
d[e];this._deactivateAction(h);const g=h._cacheIndex,k=b[b.length-1];h._cacheIndex=null;h._byClipCacheIndex=null;k._cacheIndex=g;b[g]=k;b.pop();this._removeInactiveBindingsForAction(h)}delete c[a]}},uncacheRoot:function(a){a=a.uuid;const b=this._actionsByClip;for(var c in b){const d=b[c].actionByRoot[a];void 0!==d&&(this._deactivateAction(d),this._removeInactiveAction(d))}c=this._bindingsByRootAndName[a];if(void 0!==c)for(const d in c)a=c[d],a.restoreOriginalState(),this._removeInactiveBinding(a)},
uncacheAction:function(a,b){a=this.existingAction(a,b);null!==a&&(this._deactivateAction(a),this._removeInactiveAction(a))}});class Uniform$$module$node_modules$three$build$three_module{constructor(a,b){"string"===typeof a&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),a=b);this.value=a}clone(){return new Uniform$$module$node_modules$three$build$three_module(void 0===this.value.clone?this.value:this.value.clone())}}
function InstancedInterleavedBuffer$$module$node_modules$three$build$three_module(a,b,c){InterleavedBuffer$$module$node_modules$three$build$three_module.call(this,a,b);this.meshPerAttribute=c||1}
InstancedInterleavedBuffer$$module$node_modules$three$build$three_module.prototype=Object.assign(Object.create(InterleavedBuffer$$module$node_modules$three$build$three_module.prototype),{constructor:InstancedInterleavedBuffer$$module$node_modules$three$build$three_module,isInstancedInterleavedBuffer:!0,copy:function(a){InterleavedBuffer$$module$node_modules$three$build$three_module.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this},clone:function(a){a=InterleavedBuffer$$module$node_modules$three$build$three_module.prototype.clone.call(this,
a);a.meshPerAttribute=this.meshPerAttribute;return a},toJSON:function(a){a=InterleavedBuffer$$module$node_modules$three$build$three_module.prototype.toJSON.call(this,a);a.isInstancedInterleavedBuffer=!0;a.meshPerAttribute=this.meshPerAttribute;return a}});function GLBufferAttribute$$module$node_modules$three$build$three_module(a,b,c,d,e){this.buffer=a;this.type=b;this.itemSize=c;this.elementSize=d;this.count=e;this.version=0}
Object.defineProperty(GLBufferAttribute$$module$node_modules$three$build$three_module.prototype,"needsUpdate",{set:function(a){!0===a&&this.version++}});Object.assign(GLBufferAttribute$$module$node_modules$three$build$three_module.prototype,{isGLBufferAttribute:!0,setBuffer:function(a){this.buffer=a;return this},setType:function(a,b){this.type=a;this.elementSize=b;return this},setItemSize:function(a){this.itemSize=a;return this},setCount:function(a){this.count=a;return this}});
function Raycaster$$module$node_modules$three$build$three_module(a,b,c,d){this.ray=new Ray$$module$node_modules$three$build$three_module(a,b);this.near=c||0;this.far=d||Infinity;this.camera=null;this.layers=new Layers$$module$node_modules$three$build$three_module;this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points.");return this.Points}}})}
function ascSort$$module$node_modules$three$build$three_module(a,b){return a.distance-b.distance}function intersectObject$$module$node_modules$three$build$three_module(a,b,c,d){a.layers.test(b.layers)&&a.raycast(b,c);if(!0===d){a=a.children;for(let e=0,f=a.length;e<f;e++)intersectObject$$module$node_modules$three$build$three_module(a[e],b,c,!0)}}
Object.assign(Raycaster$$module$node_modules$three$build$three_module.prototype,{set:function(a,b){this.ray.set(a,b)},setFromCamera:function(a,b){b&&b.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(b.matrixWorld),this.ray.direction.set(a.x,a.y,.5).unproject(b).sub(this.ray.origin).normalize(),this.camera=b):b&&b.isOrthographicCamera?(this.ray.origin.set(a.x,a.y,(b.near+b.far)/(b.near-b.far)).unproject(b),this.ray.direction.set(0,0,-1).transformDirection(b.matrixWorld),this.camera=b):console.error("THREE.Raycaster: Unsupported camera type.")},
intersectObject:function(a,b,c){c=c||[];intersectObject$$module$node_modules$three$build$three_module(a,this,c,b);c.sort(ascSort$$module$node_modules$three$build$three_module);return c},intersectObjects:function(a,b,c){c=c||[];if(!1===Array.isArray(a))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),c;for(let d=0,e=a.length;d<e;d++)intersectObject$$module$node_modules$three$build$three_module(a[d],this,c,b);c.sort(ascSort$$module$node_modules$three$build$three_module);
return c}});
class Spherical$$module$node_modules$three$build$three_module{constructor(a=1,b=0,c=0){this.radius=a;this.phi=b;this.theta=c;return this}set(a,b,c){this.radius=a;this.phi=b;this.theta=c;return this}clone(){return(new this.constructor).copy(this)}copy(a){this.radius=a.radius;this.phi=a.phi;this.theta=a.theta;return this}makeSafe(){this.phi=Math.max(1E-6,Math.min(Math.PI-1E-6,this.phi));return this}setFromVector3(a){return this.setFromCartesianCoords(a.x,a.y,a.z)}setFromCartesianCoords(a,b,c){this.radius=
Math.sqrt(a*a+b*b+c*c);0===this.radius?this.phi=this.theta=0:(this.theta=Math.atan2(a,c),this.phi=Math.acos(MathUtils$$module$node_modules$three$build$three_module.clamp(b/this.radius,-1,1)));return this}}
class Cylindrical$$module$node_modules$three$build$three_module{constructor(a,b,c){this.radius=void 0!==a?a:1;this.theta=void 0!==b?b:0;this.y=void 0!==c?c:0;return this}set(a,b,c){this.radius=a;this.theta=b;this.y=c;return this}clone(){return(new this.constructor).copy(this)}copy(a){this.radius=a.radius;this.theta=a.theta;this.y=a.y;return this}setFromVector3(a){return this.setFromCartesianCoords(a.x,a.y,a.z)}setFromCartesianCoords(a,b,c){this.radius=Math.sqrt(a*a+c*c);this.theta=Math.atan2(a,c);
this.y=b;return this}}const _vector$7$$module$node_modules$three$build$three_module=new Vector2$$module$node_modules$three$build$three_module;
class Box2$$module$node_modules$three$build$three_module{constructor(a,b){Object.defineProperty(this,"isBox2",{value:!0});this.min=void 0!==a?a:new Vector2$$module$node_modules$three$build$three_module(Infinity,Infinity);this.max=void 0!==b?b:new Vector2$$module$node_modules$three$build$three_module(-Infinity,-Infinity)}set(a,b){this.min.copy(a);this.max.copy(b);return this}setFromPoints(a){this.makeEmpty();for(let b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this}setFromCenterAndSize(a,
b){b=_vector$7$$module$node_modules$three$build$three_module.copy(b).multiplyScalar(.5);this.min.copy(a).sub(b);this.max.copy(a).add(b);return this}clone(){return(new this.constructor).copy(this)}copy(a){this.min.copy(a.min);this.max.copy(a.max);return this}makeEmpty(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(a){void 0===a&&(console.warn("THREE.Box2: .getCenter() target is now required"),a=new Vector2$$module$node_modules$three$build$three_module);
return this.isEmpty()?a.set(0,0):a.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(a){void 0===a&&(console.warn("THREE.Box2: .getSize() target is now required"),a=new Vector2$$module$node_modules$three$build$three_module);return this.isEmpty()?a.set(0,0):a.subVectors(this.max,this.min)}expandByPoint(a){this.min.min(a);this.max.max(a);return this}expandByVector(a){this.min.sub(a);this.max.add(a);return this}expandByScalar(a){this.min.addScalar(-a);this.max.addScalar(a);return this}containsPoint(a){return a.x<
this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0}containsBox(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y}getParameter(a,b){void 0===b&&(console.warn("THREE.Box2: .getParameter() target is now required"),b=new Vector2$$module$node_modules$three$build$three_module);return b.set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||
a.min.y>this.max.y?!1:!0}clampPoint(a,b){void 0===b&&(console.warn("THREE.Box2: .clampPoint() target is now required"),b=new Vector2$$module$node_modules$three$build$three_module);return b.copy(a).clamp(this.min,this.max)}distanceToPoint(a){return _vector$7$$module$node_modules$three$build$three_module.copy(a).clamp(this.min,this.max).sub(a).length()}intersect(a){this.min.max(a.min);this.max.min(a.max);return this}union(a){this.min.min(a.min);this.max.max(a.max);return this}translate(a){this.min.add(a);
this.max.add(a);return this}equals(a){return a.min.equals(this.min)&&a.max.equals(this.max)}}const _startP$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_startEnd$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module;
class Line3$$module$node_modules$three$build$three_module{constructor(a,b){this.start=void 0!==a?a:new Vector3$$module$node_modules$three$build$three_module;this.end=void 0!==b?b:new Vector3$$module$node_modules$three$build$three_module}set(a,b){this.start.copy(a);this.end.copy(b);return this}clone(){return(new this.constructor).copy(this)}copy(a){this.start.copy(a.start);this.end.copy(a.end);return this}getCenter(a){void 0===a&&(console.warn("THREE.Line3: .getCenter() target is now required"),a=
new Vector3$$module$node_modules$three$build$three_module);return a.addVectors(this.start,this.end).multiplyScalar(.5)}delta(a){void 0===a&&(console.warn("THREE.Line3: .delta() target is now required"),a=new Vector3$$module$node_modules$three$build$three_module);return a.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(a,b){void 0===b&&(console.warn("THREE.Line3: .at() target is now required"),b=new Vector3$$module$node_modules$three$build$three_module);
return this.delta(b).multiplyScalar(a).add(this.start)}closestPointToPointParameter(a,b){_startP$$module$node_modules$three$build$three_module.subVectors(a,this.start);_startEnd$$module$node_modules$three$build$three_module.subVectors(this.end,this.start);a=_startEnd$$module$node_modules$three$build$three_module.dot(_startEnd$$module$node_modules$three$build$three_module);a=_startEnd$$module$node_modules$three$build$three_module.dot(_startP$$module$node_modules$three$build$three_module)/a;b&&(a=MathUtils$$module$node_modules$three$build$three_module.clamp(a,
0,1));return a}closestPointToPoint(a,b,c){a=this.closestPointToPointParameter(a,b);void 0===c&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),c=new Vector3$$module$node_modules$three$build$three_module);return this.delta(c).multiplyScalar(a).add(this.start)}applyMatrix4(a){this.start.applyMatrix4(a);this.end.applyMatrix4(a);return this}equals(a){return a.start.equals(this.start)&&a.end.equals(this.end)}}
function ImmediateRenderObject$$module$node_modules$three$build$three_module(a){Object3D$$module$node_modules$three$build$three_module.call(this);this.material=a;this.render=function(){};this.hasUvs=this.hasColors=this.hasNormals=this.hasPositions=!1;this.uvArray=this.colorArray=this.normalArray=this.positionArray=null;this.count=0}ImmediateRenderObject$$module$node_modules$three$build$three_module.prototype=Object.create(Object3D$$module$node_modules$three$build$three_module.prototype);
ImmediateRenderObject$$module$node_modules$three$build$three_module.prototype.constructor=ImmediateRenderObject$$module$node_modules$three$build$three_module;ImmediateRenderObject$$module$node_modules$three$build$three_module.prototype.isImmediateRenderObject=!0;const _vector$8$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module;
class SpotLightHelper$$module$node_modules$three$build$three_module extends Object3D$$module$node_modules$three$build$three_module{constructor(a,b){super();this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.color=b;a=new BufferGeometry$$module$node_modules$three$build$three_module;b=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let c=0,d=1,e=32;c<e;c++,d++){const f=c/e*Math.PI*2,h=d/e*Math.PI*2;b.push(Math.cos(f),Math.sin(f),1,
Math.cos(h),Math.sin(h),1)}a.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(b,3));b=new LineBasicMaterial$$module$node_modules$three$build$three_module({fog:!1,toneMapped:!1});this.cone=new LineSegments$$module$node_modules$three$build$three_module(a,b);this.add(this.cone);this.update()}dispose(){this.cone.geometry.dispose();this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const a=this.light.distance?this.light.distance:1E3,b=a*
Math.tan(this.light.angle);this.cone.scale.set(b,b,a);_vector$8$$module$node_modules$three$build$three_module.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(_vector$8$$module$node_modules$three$build$three_module);void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}
const _vector$9$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_boneMatrix$$module$node_modules$three$build$three_module=new Matrix4$$module$node_modules$three$build$three_module,_matrixWorldInv$$module$node_modules$three$build$three_module=new Matrix4$$module$node_modules$three$build$three_module;
class SkeletonHelper$$module$node_modules$three$build$three_module extends LineSegments$$module$node_modules$three$build$three_module{constructor(a){const b=getBoneList$$module$node_modules$three$build$three_module(a),c=new BufferGeometry$$module$node_modules$three$build$three_module;var d=[];const e=[],f=new Color$$module$node_modules$three$build$three_module(0,0,1),h=new Color$$module$node_modules$three$build$three_module(0,1,0);for(let g=0;g<b.length;g++){const k=b[g];k.parent&&k.parent.isBone&&
(d.push(0,0,0),d.push(0,0,0),e.push(f.r,f.g,f.b),e.push(h.r,h.g,h.b))}c.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(d,3));c.setAttribute("color",new Float32BufferAttribute$$module$node_modules$three$build$three_module(e,3));d=new LineBasicMaterial$$module$node_modules$three$build$three_module({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(c,d);this.type="SkeletonHelper";this.isSkeletonHelper=!0;this.root=a;this.bones=
b;this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1}updateMatrixWorld(a){const b=this.bones,c=this.geometry,d=c.getAttribute("position");_matrixWorldInv$$module$node_modules$three$build$three_module.getInverse(this.root.matrixWorld);for(let e=0,f=0;e<b.length;e++){const h=b[e];h.parent&&h.parent.isBone&&(_boneMatrix$$module$node_modules$three$build$three_module.multiplyMatrices(_matrixWorldInv$$module$node_modules$three$build$three_module,h.matrixWorld),_vector$9$$module$node_modules$three$build$three_module.setFromMatrixPosition(_boneMatrix$$module$node_modules$three$build$three_module),
d.setXYZ(f,_vector$9$$module$node_modules$three$build$three_module.x,_vector$9$$module$node_modules$three$build$three_module.y,_vector$9$$module$node_modules$three$build$three_module.z),_boneMatrix$$module$node_modules$three$build$three_module.multiplyMatrices(_matrixWorldInv$$module$node_modules$three$build$three_module,h.parent.matrixWorld),_vector$9$$module$node_modules$three$build$three_module.setFromMatrixPosition(_boneMatrix$$module$node_modules$three$build$three_module),d.setXYZ(f+1,_vector$9$$module$node_modules$three$build$three_module.x,
_vector$9$$module$node_modules$three$build$three_module.y,_vector$9$$module$node_modules$three$build$three_module.z),f+=2)}c.getAttribute("position").needsUpdate=!0;super.updateMatrixWorld(a)}}function getBoneList$$module$node_modules$three$build$three_module(a){const b=[];a&&a.isBone&&b.push(a);for(let c=0;c<a.children.length;c++)b.push.apply(b,getBoneList$$module$node_modules$three$build$three_module(a.children[c]));return b}
class PointLightHelper$$module$node_modules$three$build$three_module extends Mesh$$module$node_modules$three$build$three_module{constructor(a,b,c){b=new SphereBufferGeometry$$module$node_modules$three$build$three_module(b,4,2);const d=new MeshBasicMaterial$$module$node_modules$three$build$three_module({wireframe:!0,fog:!1,toneMapped:!1});super(b,d);this.light=a;this.light.updateMatrixWorld();this.color=c;this.type="PointLightHelper";this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=!1;this.update()}dispose(){this.geometry.dispose();
this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const _vector$a$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_color1$$module$node_modules$three$build$three_module=new Color$$module$node_modules$three$build$three_module,_color2$$module$node_modules$three$build$three_module=new Color$$module$node_modules$three$build$three_module;
class HemisphereLightHelper$$module$node_modules$three$build$three_module extends Object3D$$module$node_modules$three$build$three_module{constructor(a,b,c){super();this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.color=c;a=new OctahedronBufferGeometry$$module$node_modules$three$build$three_module(b);a.rotateY(.5*Math.PI);this.material=new MeshBasicMaterial$$module$node_modules$three$build$three_module({wireframe:!0,fog:!1,toneMapped:!1});void 0===
this.color&&(this.material.vertexColors=!0);b=a.getAttribute("position");b=new Float32Array(3*b.count);a.setAttribute("color",new BufferAttribute$$module$node_modules$three$build$three_module(b,3));this.add(new Mesh$$module$node_modules$three$build$three_module(a,this.material));this.update()}dispose(){this.children[0].geometry.dispose();this.children[0].material.dispose()}update(){const a=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const b=a.geometry.getAttribute("color");
_color1$$module$node_modules$three$build$three_module.copy(this.light.color);_color2$$module$node_modules$three$build$three_module.copy(this.light.groundColor);for(let c=0,d=b.count;c<d;c++){const e=c<d/2?_color1$$module$node_modules$three$build$three_module:_color2$$module$node_modules$three$build$three_module;b.setXYZ(c,e.r,e.g,e.b)}b.needsUpdate=!0}a.lookAt(_vector$a$$module$node_modules$three$build$three_module.setFromMatrixPosition(this.light.matrixWorld).negate())}}
class GridHelper$$module$node_modules$three$build$three_module extends LineSegments$$module$node_modules$three$build$three_module{constructor(a,b,c,d){a=a||10;b=b||10;c=new Color$$module$node_modules$three$build$three_module(void 0!==c?c:4473924);d=new Color$$module$node_modules$three$build$three_module(void 0!==d?d:8947848);const e=b/2,f=a/b,h=a/2;a=[];const g=[];for(let k=0,n=0,w=-h;k<=b;k++,w+=f){a.push(-h,0,w,h,0,w);a.push(w,0,-h,w,0,h);const v=k===e?c:d;v.toArray(g,n);n+=3;v.toArray(g,n);n+=
3;v.toArray(g,n);n+=3;v.toArray(g,n);n+=3}b=new BufferGeometry$$module$node_modules$three$build$three_module;b.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(a,3));b.setAttribute("color",new Float32BufferAttribute$$module$node_modules$three$build$three_module(g,3));c=new LineBasicMaterial$$module$node_modules$three$build$three_module({vertexColors:!0,toneMapped:!1});super(b,c);this.type="GridHelper"}}
class PolarGridHelper$$module$node_modules$three$build$three_module extends LineSegments$$module$node_modules$three$build$three_module{constructor(a,b,c,d,e,f){a=a||10;b=b||16;c=c||8;d=d||64;e=new Color$$module$node_modules$three$build$three_module(void 0!==e?e:4473924);f=new Color$$module$node_modules$three$build$three_module(void 0!==f?f:8947848);var h=[];const g=[];for(var k=0;k<=b;k++){var n=k/b*2*Math.PI,w=Math.sin(n)*a;n=Math.cos(n)*a;h.push(0,0,0);h.push(w,0,n);w=k&1?e:f;g.push(w.r,w.g,w.b);
g.push(w.r,w.g,w.b)}for(b=0;b<=c;b++)for(k=b&1?e:f,w=a-a/c*b,n=0;n<d;n++){var v=n/d*2*Math.PI;let x=Math.sin(v)*w;v=Math.cos(v)*w;h.push(x,0,v);g.push(k.r,k.g,k.b);v=(n+1)/d*2*Math.PI;x=Math.sin(v)*w;v=Math.cos(v)*w;h.push(x,0,v);g.push(k.r,k.g,k.b)}a=new BufferGeometry$$module$node_modules$three$build$three_module;a.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(h,3));a.setAttribute("color",new Float32BufferAttribute$$module$node_modules$three$build$three_module(g,
3));h=new LineBasicMaterial$$module$node_modules$three$build$three_module({vertexColors:!0,toneMapped:!1});super(a,h);this.type="PolarGridHelper"}}const _v1$5$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_v2$3$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_v3$1$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module;
class DirectionalLightHelper$$module$node_modules$three$build$three_module extends Object3D$$module$node_modules$three$build$three_module{constructor(a,b,c){super();this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.color=c;void 0===b&&(b=1);a=new BufferGeometry$$module$node_modules$three$build$three_module;a.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module([-b,b,0,b,b,0,b,-b,0,-b,-b,0,-b,b,0],3));b=new LineBasicMaterial$$module$node_modules$three$build$three_module({fog:!1,
toneMapped:!1});this.lightPlane=new Line$$module$node_modules$three$build$three_module(a,b);this.add(this.lightPlane);a=new BufferGeometry$$module$node_modules$three$build$three_module;a.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module([0,0,0,0,0,1],3));this.targetLine=new Line$$module$node_modules$three$build$three_module(a,b);this.add(this.targetLine);this.update()}dispose(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();
this.targetLine.material.dispose()}update(){_v1$5$$module$node_modules$three$build$three_module.setFromMatrixPosition(this.light.matrixWorld);_v2$3$$module$node_modules$three$build$three_module.setFromMatrixPosition(this.light.target.matrixWorld);_v3$1$$module$node_modules$three$build$three_module.subVectors(_v2$3$$module$node_modules$three$build$three_module,_v1$5$$module$node_modules$three$build$three_module);this.lightPlane.lookAt(_v2$3$$module$node_modules$three$build$three_module);void 0!==this.color?
(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color));this.targetLine.lookAt(_v2$3$$module$node_modules$three$build$three_module);this.targetLine.scale.z=_v3$1$$module$node_modules$three$build$three_module.length()}}
const _vector$b$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module,_camera$$module$node_modules$three$build$three_module=new Camera$$module$node_modules$three$build$three_module;
class CameraHelper$$module$node_modules$three$build$three_module extends LineSegments$$module$node_modules$three$build$three_module{constructor(a){function b(z,F,N){c(z,N);c(F,N)}function c(z,F){f.push(0,0,0);h.push(F.r,F.g,F.b);void 0===g[z]&&(g[z]=[]);g[z].push(f.length/3-1)}const d=new BufferGeometry$$module$node_modules$three$build$three_module,e=new LineBasicMaterial$$module$node_modules$three$build$three_module({color:16777215,vertexColors:!0,toneMapped:!1}),f=[],h=[],g={},k=new Color$$module$node_modules$three$build$three_module(16755200),
n=new Color$$module$node_modules$three$build$three_module(16711680),w=new Color$$module$node_modules$three$build$three_module(43775),v=new Color$$module$node_modules$three$build$three_module(16777215),x=new Color$$module$node_modules$three$build$three_module(3355443);b("n1","n2",k);b("n2","n4",k);b("n4","n3",k);b("n3","n1",k);b("f1","f2",k);b("f2","f4",k);b("f4","f3",k);b("f3","f1",k);b("n1","f1",k);b("n2","f2",k);b("n3","f3",k);b("n4","f4",k);b("p","n1",n);b("p","n2",n);b("p","n3",n);b("p","n4",
n);b("u1","u2",w);b("u2","u3",w);b("u3","u1",w);b("c","t",v);b("p","c",x);b("cn1","cn2",x);b("cn3","cn4",x);b("cf1","cf2",x);b("cf3","cf4",x);d.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(f,3));d.setAttribute("color",new Float32BufferAttribute$$module$node_modules$three$build$three_module(h,3));super(d,e);this.type="CameraHelper";this.camera=a;this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix();this.matrix=a.matrixWorld;this.matrixAutoUpdate=
!1;this.pointMap=g;this.update()}update(){const a=this.geometry,b=this.pointMap;_camera$$module$node_modules$three$build$three_module.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);setPoint$$module$node_modules$three$build$three_module("c",b,a,_camera$$module$node_modules$three$build$three_module,0,0,-1);setPoint$$module$node_modules$three$build$three_module("t",b,a,_camera$$module$node_modules$three$build$three_module,0,0,1);setPoint$$module$node_modules$three$build$three_module("n1",
b,a,_camera$$module$node_modules$three$build$three_module,-1,-1,-1);setPoint$$module$node_modules$three$build$three_module("n2",b,a,_camera$$module$node_modules$three$build$three_module,1,-1,-1);setPoint$$module$node_modules$three$build$three_module("n3",b,a,_camera$$module$node_modules$three$build$three_module,-1,1,-1);setPoint$$module$node_modules$three$build$three_module("n4",b,a,_camera$$module$node_modules$three$build$three_module,1,1,-1);setPoint$$module$node_modules$three$build$three_module("f1",
b,a,_camera$$module$node_modules$three$build$three_module,-1,-1,1);setPoint$$module$node_modules$three$build$three_module("f2",b,a,_camera$$module$node_modules$three$build$three_module,1,-1,1);setPoint$$module$node_modules$three$build$three_module("f3",b,a,_camera$$module$node_modules$three$build$three_module,-1,1,1);setPoint$$module$node_modules$three$build$three_module("f4",b,a,_camera$$module$node_modules$three$build$three_module,1,1,1);setPoint$$module$node_modules$three$build$three_module("u1",
b,a,_camera$$module$node_modules$three$build$three_module,.7,1.1,-1);setPoint$$module$node_modules$three$build$three_module("u2",b,a,_camera$$module$node_modules$three$build$three_module,-.7,1.1,-1);setPoint$$module$node_modules$three$build$three_module("u3",b,a,_camera$$module$node_modules$three$build$three_module,0,2,-1);setPoint$$module$node_modules$three$build$three_module("cf1",b,a,_camera$$module$node_modules$three$build$three_module,-1,0,1);setPoint$$module$node_modules$three$build$three_module("cf2",
b,a,_camera$$module$node_modules$three$build$three_module,1,0,1);setPoint$$module$node_modules$three$build$three_module("cf3",b,a,_camera$$module$node_modules$three$build$three_module,0,-1,1);setPoint$$module$node_modules$three$build$three_module("cf4",b,a,_camera$$module$node_modules$three$build$three_module,0,1,1);setPoint$$module$node_modules$three$build$three_module("cn1",b,a,_camera$$module$node_modules$three$build$three_module,-1,0,-1);setPoint$$module$node_modules$three$build$three_module("cn2",
b,a,_camera$$module$node_modules$three$build$three_module,1,0,-1);setPoint$$module$node_modules$three$build$three_module("cn3",b,a,_camera$$module$node_modules$three$build$three_module,0,-1,-1);setPoint$$module$node_modules$three$build$three_module("cn4",b,a,_camera$$module$node_modules$three$build$three_module,0,1,-1);a.getAttribute("position").needsUpdate=!0}}
function setPoint$$module$node_modules$three$build$three_module(a,b,c,d,e,f,h){_vector$b$$module$node_modules$three$build$three_module.set(e,f,h).unproject(d);a=b[a];if(void 0!==a){c=c.getAttribute("position");for(let g=0,k=a.length;g<k;g++)c.setXYZ(a[g],_vector$b$$module$node_modules$three$build$three_module.x,_vector$b$$module$node_modules$three$build$three_module.y,_vector$b$$module$node_modules$three$build$three_module.z)}}const _box$3$$module$node_modules$three$build$three_module=new Box3$$module$node_modules$three$build$three_module;
class BoxHelper$$module$node_modules$three$build$three_module extends LineSegments$$module$node_modules$three$build$three_module{constructor(a,b=16776960){const c=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),d=new Float32Array(24),e=new BufferGeometry$$module$node_modules$three$build$three_module;e.setIndex(new BufferAttribute$$module$node_modules$three$build$three_module(c,1));e.setAttribute("position",new BufferAttribute$$module$node_modules$three$build$three_module(d,3));
super(e,new LineBasicMaterial$$module$node_modules$three$build$three_module({color:b,toneMapped:!1}));this.object=a;this.type="BoxHelper";this.matrixAutoUpdate=!1;this.update()}update(a){void 0!==a&&console.warn("THREE.BoxHelper: .update() has no longer arguments.");void 0!==this.object&&_box$3$$module$node_modules$three$build$three_module.setFromObject(this.object);if(!_box$3$$module$node_modules$three$build$three_module.isEmpty()){a=_box$3$$module$node_modules$three$build$three_module.min;var b=
_box$3$$module$node_modules$three$build$three_module.max,c=this.geometry.attributes.position,d=c.array;d[0]=b.x;d[1]=b.y;d[2]=b.z;d[3]=a.x;d[4]=b.y;d[5]=b.z;d[6]=a.x;d[7]=a.y;d[8]=b.z;d[9]=b.x;d[10]=a.y;d[11]=b.z;d[12]=b.x;d[13]=b.y;d[14]=a.z;d[15]=a.x;d[16]=b.y;d[17]=a.z;d[18]=a.x;d[19]=a.y;d[20]=a.z;d[21]=b.x;d[22]=a.y;d[23]=a.z;c.needsUpdate=!0;this.geometry.computeBoundingSphere()}}setFromObject(a){this.object=a;this.update();return this}copy(a){LineSegments$$module$node_modules$three$build$three_module.prototype.copy.call(this,
a);this.object=a.object;return this}}
class Box3Helper$$module$node_modules$three$build$three_module extends LineSegments$$module$node_modules$three$build$three_module{constructor(a,b=16776960){const c=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),d=new BufferGeometry$$module$node_modules$three$build$three_module;d.setIndex(new BufferAttribute$$module$node_modules$three$build$three_module(c,1));d.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module([1,1,1,-1,1,1,-1,-1,1,
1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3));super(d,new LineBasicMaterial$$module$node_modules$three$build$three_module({color:b,toneMapped:!1}));this.box=a;this.type="Box3Helper";this.geometry.computeBoundingSphere()}updateMatrixWorld(a){const b=this.box;b.isEmpty()||(b.getCenter(this.position),b.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(a))}}
class PlaneHelper$$module$node_modules$three$build$three_module extends Line$$module$node_modules$three$build$three_module{constructor(a,b,c){c=void 0!==c?c:16776960;const d=new BufferGeometry$$module$node_modules$three$build$three_module;d.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3));d.computeBoundingSphere();super(d,new LineBasicMaterial$$module$node_modules$three$build$three_module({color:c,
toneMapped:!1}));this.type="PlaneHelper";this.plane=a;this.size=void 0===b?1:b;a=new BufferGeometry$$module$node_modules$three$build$three_module;a.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3));a.computeBoundingSphere();this.add(new Mesh$$module$node_modules$three$build$three_module(a,new MeshBasicMaterial$$module$node_modules$three$build$three_module({color:c,opacity:.2,transparent:!0,depthWrite:!1,
toneMapped:!1})))}updateMatrixWorld(a){let b=-this.plane.constant;1E-8>Math.abs(b)&&(b=1E-8);this.scale.set(.5*this.size,.5*this.size,b);this.children[0].material.side=0>b?BackSide$$module$node_modules$three$build$three_module:FrontSide$$module$node_modules$three$build$three_module;this.lookAt(this.plane.normal);super.updateMatrixWorld(a)}}const _axis$$module$node_modules$three$build$three_module=new Vector3$$module$node_modules$three$build$three_module;
let _lineGeometry$$module$node_modules$three$build$three_module,_coneGeometry$$module$node_modules$three$build$three_module;
class ArrowHelper$$module$node_modules$three$build$three_module extends Object3D$$module$node_modules$three$build$three_module{constructor(a,b,c,d,e,f){super();this.type="ArrowHelper";void 0===a&&(a=new Vector3$$module$node_modules$three$build$three_module(0,0,1));void 0===b&&(b=new Vector3$$module$node_modules$three$build$three_module(0,0,0));void 0===c&&(c=1);void 0===d&&(d=16776960);void 0===e&&(e=.2*c);void 0===f&&(f=.2*e);void 0===_lineGeometry$$module$node_modules$three$build$three_module&&
(_lineGeometry$$module$node_modules$three$build$three_module=new BufferGeometry$$module$node_modules$three$build$three_module,_lineGeometry$$module$node_modules$three$build$three_module.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module([0,0,0,0,1,0],3)),_coneGeometry$$module$node_modules$three$build$three_module=new CylinderBufferGeometry$$module$node_modules$three$build$three_module(0,.5,1,5,1),_coneGeometry$$module$node_modules$three$build$three_module.translate(0,
-.5,0));this.position.copy(b);this.line=new Line$$module$node_modules$three$build$three_module(_lineGeometry$$module$node_modules$three$build$three_module,new LineBasicMaterial$$module$node_modules$three$build$three_module({color:d,toneMapped:!1}));this.line.matrixAutoUpdate=!1;this.add(this.line);this.cone=new Mesh$$module$node_modules$three$build$three_module(_coneGeometry$$module$node_modules$three$build$three_module,new MeshBasicMaterial$$module$node_modules$three$build$three_module({color:d,
toneMapped:!1}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(a);this.setLength(c,e,f)}setDirection(a){.99999<a.y?this.quaternion.set(0,0,0,1):-.99999>a.y?this.quaternion.set(1,0,0,0):(_axis$$module$node_modules$three$build$three_module.set(a.z,0,-a.x).normalize(),this.quaternion.setFromAxisAngle(_axis$$module$node_modules$three$build$three_module,Math.acos(a.y)))}setLength(a,b,c){void 0===b&&(b=.2*a);void 0===c&&(c=.2*b);this.line.scale.set(1,Math.max(1E-4,a-b),1);this.line.updateMatrix();
this.cone.scale.set(c,b,c);this.cone.position.y=a;this.cone.updateMatrix()}setColor(a){this.line.material.color.set(a);this.cone.material.color.set(a)}copy(a){super.copy(a,!1);this.line.copy(a.line);this.cone.copy(a.cone);return this}}
class AxesHelper$$module$node_modules$three$build$three_module extends LineSegments$$module$node_modules$three$build$three_module{constructor(a=1){var b=[0,0,0,a,0,0,0,0,0,0,a,0,0,0,0,0,0,a];a=new BufferGeometry$$module$node_modules$three$build$three_module;a.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(b,3));a.setAttribute("color",new Float32BufferAttribute$$module$node_modules$three$build$three_module([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));
b=new LineBasicMaterial$$module$node_modules$three$build$three_module({vertexColors:!0,toneMapped:!1});super(a,b);this.type="AxesHelper"}}
const LOD_MIN$$module$node_modules$three$build$three_module=4,LOD_MAX$$module$node_modules$three$build$three_module=8,SIZE_MAX$$module$node_modules$three$build$three_module=Math.pow(2,LOD_MAX$$module$node_modules$three$build$three_module),EXTRA_LOD_SIGMA$$module$node_modules$three$build$three_module=[.125,.215,.35,.446,.526,.582],TOTAL_LODS$$module$node_modules$three$build$three_module=LOD_MAX$$module$node_modules$three$build$three_module-LOD_MIN$$module$node_modules$three$build$three_module+1+EXTRA_LOD_SIGMA$$module$node_modules$three$build$three_module.length,
MAX_SAMPLES$$module$node_modules$three$build$three_module=20,ENCODINGS$$module$node_modules$three$build$three_module={[LinearEncoding$$module$node_modules$three$build$three_module]:0,[sRGBEncoding$$module$node_modules$three$build$three_module]:1,[RGBEEncoding$$module$node_modules$three$build$three_module]:2,[RGBM7Encoding$$module$node_modules$three$build$three_module]:3,[RGBM16Encoding$$module$node_modules$three$build$three_module]:4,[RGBDEncoding$$module$node_modules$three$build$three_module]:5,
[GammaEncoding$$module$node_modules$three$build$three_module]:6},_flatCamera$$module$node_modules$three$build$three_module=new OrthographicCamera$$module$node_modules$three$build$three_module,{_lodPlanes:_lodPlanes$$module$node_modules$three$build$three_module,_sizeLods:_sizeLods$$module$node_modules$three$build$three_module,_sigmas:_sigmas$$module$node_modules$three$build$three_module}=_createPlanes$$module$node_modules$three$build$three_module();
let _oldTarget$$module$node_modules$three$build$three_module=null;
const PHI$$module$node_modules$three$build$three_module=(1+Math.sqrt(5))/2,INV_PHI$$module$node_modules$three$build$three_module=1/PHI$$module$node_modules$three$build$three_module,_axisDirections$$module$node_modules$three$build$three_module=[new Vector3$$module$node_modules$three$build$three_module(1,1,1),new Vector3$$module$node_modules$three$build$three_module(-1,1,1),new Vector3$$module$node_modules$three$build$three_module(1,1,-1),new Vector3$$module$node_modules$three$build$three_module(-1,
1,-1),new Vector3$$module$node_modules$three$build$three_module(0,PHI$$module$node_modules$three$build$three_module,INV_PHI$$module$node_modules$three$build$three_module),new Vector3$$module$node_modules$three$build$three_module(0,PHI$$module$node_modules$three$build$three_module,-INV_PHI$$module$node_modules$three$build$three_module),new Vector3$$module$node_modules$three$build$three_module(INV_PHI$$module$node_modules$three$build$three_module,0,PHI$$module$node_modules$three$build$three_module),
new Vector3$$module$node_modules$three$build$three_module(-INV_PHI$$module$node_modules$three$build$three_module,0,PHI$$module$node_modules$three$build$three_module),new Vector3$$module$node_modules$three$build$three_module(PHI$$module$node_modules$three$build$three_module,INV_PHI$$module$node_modules$three$build$three_module,0),new Vector3$$module$node_modules$three$build$three_module(-PHI$$module$node_modules$three$build$three_module,INV_PHI$$module$node_modules$three$build$three_module,0)];
class PMREMGenerator$$module$node_modules$three$build$three_module{constructor(a){this._renderer=a;this._pingPongRenderTarget=null;this._blurMaterial=_getBlurShader$$module$node_modules$three$build$three_module(MAX_SAMPLES$$module$node_modules$three$build$three_module);this._cubemapShader=this._equirectShader=null;this._compileMaterial(this._blurMaterial)}fromScene(a,b=0,c=.1,d=100){_oldTarget$$module$node_modules$three$build$three_module=this._renderer.getRenderTarget();const e=this._allocateTargets();
this._sceneToCubeUV(a,c,d,e);0<b&&this._blur(e,0,0,b);this._applyPMREM(e);this._cleanup(e);return e}fromEquirectangular(a){return this._fromTexture(a)}fromCubemap(a){return this._fromTexture(a)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=_getCubemapShader$$module$node_modules$three$build$three_module(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=_getEquirectShader$$module$node_modules$three$build$three_module(),
this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose();null!==this._cubemapShader&&this._cubemapShader.dispose();null!==this._equirectShader&&this._equirectShader.dispose();for(let a=0;a<_lodPlanes$$module$node_modules$three$build$three_module.length;a++)_lodPlanes$$module$node_modules$three$build$three_module[a].dispose()}_cleanup(a){this._pingPongRenderTarget.dispose();this._renderer.setRenderTarget(_oldTarget$$module$node_modules$three$build$three_module);a.scissorTest=
!1;_setViewport$$module$node_modules$three$build$three_module(a,0,0,a.width,a.height)}_fromTexture(a){_oldTarget$$module$node_modules$three$build$three_module=this._renderer.getRenderTarget();const b=this._allocateTargets(a);this._textureToCubeUV(a,b);this._applyPMREM(b);this._cleanup(b);return b}_allocateTargets(a){const b={magFilter:NearestFilter$$module$node_modules$three$build$three_module,minFilter:NearestFilter$$module$node_modules$three$build$three_module,generateMipmaps:!1,type:UnsignedByteType$$module$node_modules$three$build$three_module,
format:RGBAFormat$$module$node_modules$three$build$three_module,encoding:_isLDR$$module$node_modules$three$build$three_module(a)?a.encoding:RGBEEncoding$$module$node_modules$three$build$three_module,depthBuffer:!1},c=_createRenderTarget$$module$node_modules$three$build$three_module(b);c.depthBuffer=a?!1:!0;this._pingPongRenderTarget=_createRenderTarget$$module$node_modules$three$build$three_module(b);return c}_compileMaterial(a){a=new Mesh$$module$node_modules$three$build$three_module(_lodPlanes$$module$node_modules$three$build$three_module[0],
a);this._renderer.compile(a,_flatCamera$$module$node_modules$three$build$three_module)}_sceneToCubeUV(a,b,c,d){b=new PerspectiveCamera$$module$node_modules$three$build$three_module(90,1,b,c);c=[1,-1,1,1,1,1];const e=[1,1,1,-1,-1,-1],f=this._renderer,h=f.outputEncoding,g=f.toneMapping,k=f.getClearColor(),n=f.getClearAlpha();f.toneMapping=NoToneMapping$$module$node_modules$three$build$three_module;f.outputEncoding=LinearEncoding$$module$node_modules$three$build$three_module;var w=a.background;if(w&&
w.isColor){w.convertSRGBToLinear();var v=Math.min(Math.max(Math.ceil(Math.log2(Math.max(w.r,w.g,w.b))),-128),127);w=w.multiplyScalar(Math.pow(2,-v));f.setClearColor(w,(v+128)/255);a.background=null}for(w=0;6>w;w++)v=w%3,0==v?(b.up.set(0,c[w],0),b.lookAt(e[w],0,0)):1==v?(b.up.set(0,0,c[w]),b.lookAt(0,e[w],0)):(b.up.set(0,c[w],0),b.lookAt(0,0,e[w])),_setViewport$$module$node_modules$three$build$three_module(d,v*SIZE_MAX$$module$node_modules$three$build$three_module,2<w?SIZE_MAX$$module$node_modules$three$build$three_module:
0,SIZE_MAX$$module$node_modules$three$build$three_module,SIZE_MAX$$module$node_modules$three$build$three_module),f.setRenderTarget(d),f.render(a,b);f.toneMapping=g;f.outputEncoding=h;f.setClearColor(k,n)}_textureToCubeUV(a,b){const c=this._renderer;a.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=_getCubemapShader$$module$node_modules$three$build$three_module()):null==this._equirectShader&&(this._equirectShader=_getEquirectShader$$module$node_modules$three$build$three_module());var d=
a.isCubeTexture?this._cubemapShader:this._equirectShader;const e=new Mesh$$module$node_modules$three$build$three_module(_lodPlanes$$module$node_modules$three$build$three_module[0],d);d=d.uniforms;d.envMap.value=a;a.isCubeTexture||d.texelSize.value.set(1/a.image.width,1/a.image.height);d.inputEncoding.value=ENCODINGS$$module$node_modules$three$build$three_module[a.encoding];d.outputEncoding.value=ENCODINGS$$module$node_modules$three$build$three_module[b.texture.encoding];_setViewport$$module$node_modules$three$build$three_module(b,
0,0,3*SIZE_MAX$$module$node_modules$three$build$three_module,2*SIZE_MAX$$module$node_modules$three$build$three_module);c.setRenderTarget(b);c.render(e,_flatCamera$$module$node_modules$three$build$three_module)}_applyPMREM(a){const b=this._renderer,c=b.autoClear;b.autoClear=!1;for(let d=1;d<TOTAL_LODS$$module$node_modules$three$build$three_module;d++)this._blur(a,d-1,d,Math.sqrt(_sigmas$$module$node_modules$three$build$three_module[d]*_sigmas$$module$node_modules$three$build$three_module[d]-_sigmas$$module$node_modules$three$build$three_module[d-
1]*_sigmas$$module$node_modules$three$build$three_module[d-1]),_axisDirections$$module$node_modules$three$build$three_module[(d-1)%_axisDirections$$module$node_modules$three$build$three_module.length]);b.autoClear=c}_blur(a,b,c,d,e){const f=this._pingPongRenderTarget;this._halfBlur(a,f,b,c,d,"latitudinal",e);this._halfBlur(f,a,c,c,d,"longitudinal",e)}_halfBlur(a,b,c,d,e,f,h){const g=this._renderer;var k=this._blurMaterial;"latitudinal"!==f&&"longitudinal"!==f&&console.error("blur direction must be either latitudinal or longitudinal!");
const n=new Mesh$$module$node_modules$three$build$three_module(_lodPlanes$$module$node_modules$three$build$three_module[d],k);k=k.uniforms;var w=_sizeLods$$module$node_modules$three$build$three_module[c]-1;w=isFinite(e)?Math.PI/(2*w):2*Math.PI/(2*MAX_SAMPLES$$module$node_modules$three$build$three_module-1);var v=e/w;const x=isFinite(e)?1+Math.floor(3*v):MAX_SAMPLES$$module$node_modules$three$build$three_module;x>MAX_SAMPLES$$module$node_modules$three$build$three_module&&console.warn(`sigmaRadians, ${e}, is too large and will clip, as it requested ${x} samples when the maximum is set to ${MAX_SAMPLES$$module$node_modules$three$build$three_module}`);
e=[];let z=0;for(let N=0;N<MAX_SAMPLES$$module$node_modules$three$build$three_module;++N){var F=N/v;F=Math.exp(-F*F/2);e.push(F);0==N?z+=F:N<x&&(z+=2*F)}for(v=0;v<e.length;v++)e[v]/=z;k.envMap.value=a.texture;k.samples.value=x;k.weights.value=e;k.latitudinal.value="latitudinal"===f;h&&(k.poleAxis.value=h);k.dTheta.value=w;k.mipInt.value=LOD_MAX$$module$node_modules$three$build$three_module-c;k.inputEncoding.value=ENCODINGS$$module$node_modules$three$build$three_module[a.texture.encoding];k.outputEncoding.value=
ENCODINGS$$module$node_modules$three$build$three_module[a.texture.encoding];a=_sizeLods$$module$node_modules$three$build$three_module[d];_setViewport$$module$node_modules$three$build$three_module(b,3*Math.max(0,SIZE_MAX$$module$node_modules$three$build$three_module-2*a),(0===d?0:2*SIZE_MAX$$module$node_modules$three$build$three_module)+2*a*(d>LOD_MAX$$module$node_modules$three$build$three_module-LOD_MIN$$module$node_modules$three$build$three_module?d-LOD_MAX$$module$node_modules$three$build$three_module+
LOD_MIN$$module$node_modules$three$build$three_module:0),3*a,2*a);g.setRenderTarget(b);g.render(n,_flatCamera$$module$node_modules$three$build$three_module)}}
function _isLDR$$module$node_modules$three$build$three_module(a){return void 0===a||a.type!==UnsignedByteType$$module$node_modules$three$build$three_module?!1:a.encoding===LinearEncoding$$module$node_modules$three$build$three_module||a.encoding===sRGBEncoding$$module$node_modules$three$build$three_module||a.encoding===GammaEncoding$$module$node_modules$three$build$three_module}
function _createPlanes$$module$node_modules$three$build$three_module(){const a=[],b=[],c=[];let d=LOD_MAX$$module$node_modules$three$build$three_module;for(let g=0;g<TOTAL_LODS$$module$node_modules$three$build$three_module;g++){var e=Math.pow(2,d);b.push(e);var f=1/e;g>LOD_MAX$$module$node_modules$three$build$three_module-LOD_MIN$$module$node_modules$three$build$three_module?f=EXTRA_LOD_SIGMA$$module$node_modules$three$build$three_module[g-LOD_MAX$$module$node_modules$three$build$three_module+LOD_MIN$$module$node_modules$three$build$three_module-
1]:0==g&&(f=0);c.push(f);f=1/(e-1);e=-f/2;f=1+f/2;var h=[e,e,f,e,f,f,e,e,f,f,e,f];e=new Float32Array(108);f=new Float32Array(72);const k=new Float32Array(36);for(let n=0;6>n;n++){const w=n%3*2/3-1,v=2<n?0:-1;e.set([w,v,0,w+2/3,v,0,w+2/3,v+1,0,w,v,0,w+2/3,v+1,0,w,v+1,0],18*n);f.set(h,12*n);k.set([n,n,n,n,n,n],6*n)}h=new BufferGeometry$$module$node_modules$three$build$three_module;h.setAttribute("position",new BufferAttribute$$module$node_modules$three$build$three_module(e,3));h.setAttribute("uv",new BufferAttribute$$module$node_modules$three$build$three_module(f,
2));h.setAttribute("faceIndex",new BufferAttribute$$module$node_modules$three$build$three_module(k,1));a.push(h);d>LOD_MIN$$module$node_modules$three$build$three_module&&d--}return{_lodPlanes:a,_sizeLods:b,_sigmas:c}}
function _createRenderTarget$$module$node_modules$three$build$three_module(a){a=new WebGLRenderTarget$$module$node_modules$three$build$three_module(3*SIZE_MAX$$module$node_modules$three$build$three_module,3*SIZE_MAX$$module$node_modules$three$build$three_module,a);a.texture.mapping=CubeUVReflectionMapping$$module$node_modules$three$build$three_module;a.texture.name="PMREM.cubeUv";a.scissorTest=!0;return a}
function _setViewport$$module$node_modules$three$build$three_module(a,b,c,d,e){a.viewport.set(b,c,d,e);a.scissor.set(b,c,d,e)}
function _getBlurShader$$module$node_modules$three$build$three_module(a){const b=new Float32Array(a),c=new Vector3$$module$node_modules$three$build$three_module(0,1,0);return new RawShaderMaterial$$module$node_modules$three$build$three_module({name:"SphericalGaussianBlur",defines:{n:a},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:b},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:c},inputEncoding:{value:ENCODINGS$$module$node_modules$three$build$three_module[LinearEncoding$$module$node_modules$three$build$three_module]},
outputEncoding:{value:ENCODINGS$$module$node_modules$three$build$three_module[LinearEncoding$$module$node_modules$three$build$three_module]}},vertexShader:_getCommonVertexShader$$module$node_modules$three$build$three_module(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${_getEncodings$$module$node_modules$three$build$three_module()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:NoBlending$$module$node_modules$three$build$three_module,depthTest:!1,depthWrite:!1})}
function _getEquirectShader$$module$node_modules$three$build$three_module(){const a=new Vector2$$module$node_modules$three$build$three_module(1,1);return new RawShaderMaterial$$module$node_modules$three$build$three_module({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:a},inputEncoding:{value:ENCODINGS$$module$node_modules$three$build$three_module[LinearEncoding$$module$node_modules$three$build$three_module]},outputEncoding:{value:ENCODINGS$$module$node_modules$three$build$three_module[LinearEncoding$$module$node_modules$three$build$three_module]}},
vertexShader:_getCommonVertexShader$$module$node_modules$three$build$three_module(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${_getEncodings$$module$node_modules$three$build$three_module()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:NoBlending$$module$node_modules$three$build$three_module,depthTest:!1,depthWrite:!1})}
function _getCubemapShader$$module$node_modules$three$build$three_module(){return new RawShaderMaterial$$module$node_modules$three$build$three_module({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:ENCODINGS$$module$node_modules$three$build$three_module[LinearEncoding$$module$node_modules$three$build$three_module]},outputEncoding:{value:ENCODINGS$$module$node_modules$three$build$three_module[LinearEncoding$$module$node_modules$three$build$three_module]}},vertexShader:_getCommonVertexShader$$module$node_modules$three$build$three_module(),
fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${_getEncodings$$module$node_modules$three$build$three_module()}

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;
				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:NoBlending$$module$node_modules$three$build$three_module,depthTest:!1,depthWrite:!1})}
function _getCommonVertexShader$$module$node_modules$three$build$three_module(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}
function _getEncodings$$module$node_modules$three$build$three_module(){return"\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t"}
function Face4$$module$node_modules$three$build$three_module(a,b,c,d,e,f,h){console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");return new Face3$$module$node_modules$three$build$three_module(a,b,c,e,f,h)}
const LineStrip$$module$node_modules$three$build$three_module=0,LinePieces$$module$node_modules$three$build$three_module=1,NoColors$$module$node_modules$three$build$three_module=0,FaceColors$$module$node_modules$three$build$three_module=1,VertexColors$$module$node_modules$three$build$three_module=2;function MeshFaceMaterial$$module$node_modules$three$build$three_module(a){console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead.");return a}
function MultiMaterial$$module$node_modules$three$build$three_module(a){void 0===a&&(a=[]);console.warn("THREE.MultiMaterial has been removed. Use an Array instead.");a.isMultiMaterial=!0;a.materials=a;a.clone=function(){return a.slice()};return a}function PointCloud$$module$node_modules$three$build$three_module(a,b){console.warn("THREE.PointCloud has been renamed to THREE.Points.");return new Points$$module$node_modules$three$build$three_module(a,b)}
function Particle$$module$node_modules$three$build$three_module(a){console.warn("THREE.Particle has been renamed to THREE.Sprite.");return new Sprite$$module$node_modules$three$build$three_module(a)}function ParticleSystem$$module$node_modules$three$build$three_module(a,b){console.warn("THREE.ParticleSystem has been renamed to THREE.Points.");return new Points$$module$node_modules$three$build$three_module(a,b)}
function PointCloudMaterial$$module$node_modules$three$build$three_module(a){console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.");return new PointsMaterial$$module$node_modules$three$build$three_module(a)}function ParticleBasicMaterial$$module$node_modules$three$build$three_module(a){console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.");return new PointsMaterial$$module$node_modules$three$build$three_module(a)}
function ParticleSystemMaterial$$module$node_modules$three$build$three_module(a){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.");return new PointsMaterial$$module$node_modules$three$build$three_module(a)}function Vertex$$module$node_modules$three$build$three_module(a,b,c){console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead.");return new Vector3$$module$node_modules$three$build$three_module(a,b,c)}
function DynamicBufferAttribute$$module$node_modules$three$build$three_module(a,b){console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.");return(new BufferAttribute$$module$node_modules$three$build$three_module(a,b)).setUsage(DynamicDrawUsage$$module$node_modules$three$build$three_module)}
function Int8Attribute$$module$node_modules$three$build$three_module(a,b){console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.");return new Int8BufferAttribute$$module$node_modules$three$build$three_module(a,b)}
function Uint8Attribute$$module$node_modules$three$build$three_module(a,b){console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.");return new Uint8BufferAttribute$$module$node_modules$three$build$three_module(a,b)}
function Uint8ClampedAttribute$$module$node_modules$three$build$three_module(a,b){console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.");return new Uint8ClampedBufferAttribute$$module$node_modules$three$build$three_module(a,b)}
function Int16Attribute$$module$node_modules$three$build$three_module(a,b){console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.");return new Int16BufferAttribute$$module$node_modules$three$build$three_module(a,b)}
function Uint16Attribute$$module$node_modules$three$build$three_module(a,b){console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.");return new Uint16BufferAttribute$$module$node_modules$three$build$three_module(a,b)}
function Int32Attribute$$module$node_modules$three$build$three_module(a,b){console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.");return new Int32BufferAttribute$$module$node_modules$three$build$three_module(a,b)}
function Uint32Attribute$$module$node_modules$three$build$three_module(a,b){console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.");return new Uint32BufferAttribute$$module$node_modules$three$build$three_module(a,b)}
function Float32Attribute$$module$node_modules$three$build$three_module(a,b){console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.");return new Float32BufferAttribute$$module$node_modules$three$build$three_module(a,b)}
function Float64Attribute$$module$node_modules$three$build$three_module(a,b){console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.");return new Float64BufferAttribute$$module$node_modules$three$build$three_module(a,b)}
Curve$$module$node_modules$three$build$three_module.create=function(a,b){console.log("THREE.Curve.create() has been deprecated");a.prototype=Object.create(Curve$$module$node_modules$three$build$three_module.prototype);a.prototype.constructor=a;a.prototype.getPoint=b;return a};
Object.assign(CurvePath$$module$node_modules$three$build$three_module.prototype,{createPointsGeometry:function(a){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");a=this.getPoints(a);return this.createGeometry(a)},createSpacedPointsGeometry:function(a){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");a=this.getSpacedPoints(a);
return this.createGeometry(a)},createGeometry:function(a){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const b=new Geometry$$module$node_modules$three$build$three_module;for(let c=0,d=a.length;c<d;c++){const e=a[c];b.vertices.push(new Vector3$$module$node_modules$three$build$three_module(e.x,e.y,e.z||0))}return b}});
Object.assign(Path$$module$node_modules$three$build$three_module.prototype,{fromPoints:function(a){console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints().");return this.setFromPoints(a)}});function ClosedSplineCurve3$$module$node_modules$three$build$three_module(a){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.");CatmullRomCurve3$$module$node_modules$three$build$three_module.call(this,a);this.type="catmullrom";this.closed=!0}
ClosedSplineCurve3$$module$node_modules$three$build$three_module.prototype=Object.create(CatmullRomCurve3$$module$node_modules$three$build$three_module.prototype);function SplineCurve3$$module$node_modules$three$build$three_module(a){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.");CatmullRomCurve3$$module$node_modules$three$build$three_module.call(this,a);this.type="catmullrom"}SplineCurve3$$module$node_modules$three$build$three_module.prototype=Object.create(CatmullRomCurve3$$module$node_modules$three$build$three_module.prototype);
function Spline$$module$node_modules$three$build$three_module(a){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.");CatmullRomCurve3$$module$node_modules$three$build$three_module.call(this,a);this.type="catmullrom"}Spline$$module$node_modules$three$build$three_module.prototype=Object.create(CatmullRomCurve3$$module$node_modules$three$build$three_module.prototype);
Object.assign(Spline$$module$node_modules$three$build$three_module.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});
function AxisHelper$$module$node_modules$three$build$three_module(a){console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper.");return new AxesHelper$$module$node_modules$three$build$three_module(a)}function BoundingBoxHelper$$module$node_modules$three$build$three_module(a,b){console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.");return new BoxHelper$$module$node_modules$three$build$three_module(a,b)}
function EdgesHelper$$module$node_modules$three$build$three_module(a,b){console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.");return new LineSegments$$module$node_modules$three$build$three_module(new EdgesGeometry$$module$node_modules$three$build$three_module(a.geometry),new LineBasicMaterial$$module$node_modules$three$build$three_module({color:void 0!==b?b:16777215}))}GridHelper$$module$node_modules$three$build$three_module.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};
SkeletonHelper$$module$node_modules$three$build$three_module.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};
function WireframeHelper$$module$node_modules$three$build$three_module(a,b){console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.");return new LineSegments$$module$node_modules$three$build$three_module(new WireframeGeometry$$module$node_modules$three$build$three_module(a.geometry),new LineBasicMaterial$$module$node_modules$three$build$three_module({color:void 0!==b?b:16777215}))}
Object.assign(Loader$$module$node_modules$three$build$three_module.prototype,{extractUrlBase:function(a){console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.");return LoaderUtils$$module$node_modules$three$build$three_module.extractUrlBase(a)}});Loader$$module$node_modules$three$build$three_module.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};
function XHRLoader$$module$node_modules$three$build$three_module(a){console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader.");return new FileLoader$$module$node_modules$three$build$three_module(a)}function BinaryTextureLoader$$module$node_modules$three$build$three_module(a){console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.");return new DataTextureLoader$$module$node_modules$three$build$three_module(a)}
Object.assign(ObjectLoader$$module$node_modules$three$build$three_module.prototype,{setTexturePath:function(a){console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().");return this.setResourcePath(a)}});
Object.assign(Box2$$module$node_modules$three$build$three_module.prototype,{center:function(a){console.warn("THREE.Box2: .center() has been renamed to .getCenter().");return this.getCenter(a)},empty:function(){console.warn("THREE.Box2: .empty() has been renamed to .isEmpty().");return this.isEmpty()},isIntersectionBox:function(a){console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(a)},size:function(a){console.warn("THREE.Box2: .size() has been renamed to .getSize().");
return this.getSize(a)}});
Object.assign(Box3$$module$node_modules$three$build$three_module.prototype,{center:function(a){console.warn("THREE.Box3: .center() has been renamed to .getCenter().");return this.getCenter(a)},empty:function(){console.warn("THREE.Box3: .empty() has been renamed to .isEmpty().");return this.isEmpty()},isIntersectionBox:function(a){console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(a)},isIntersectionSphere:function(a){console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().");return this.intersectsSphere(a)},
size:function(a){console.warn("THREE.Box3: .size() has been renamed to .getSize().");return this.getSize(a)}});Object.assign(Sphere$$module$node_modules$three$build$three_module.prototype,{empty:function(){console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty().");return this.isEmpty()}});Frustum$$module$node_modules$three$build$three_module.prototype.setFromMatrix=function(a){console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().");return this.setFromProjectionMatrix(a)};
Line3$$module$node_modules$three$build$three_module.prototype.center=function(a){console.warn("THREE.Line3: .center() has been renamed to .getCenter().");return this.getCenter(a)};
Object.assign(MathUtils$$module$node_modules$three$build$three_module,{random16:function(){console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead.");return Math.random()},nearestPowerOfTwo:function(a){console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().");return MathUtils$$module$node_modules$three$build$three_module.floorPowerOfTwo(a)},nextPowerOfTwo:function(a){console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().");
return MathUtils$$module$node_modules$three$build$three_module.ceilPowerOfTwo(a)}});
Object.assign(Matrix3$$module$node_modules$three$build$three_module.prototype,{flattenToArrayOffset:function(a,b){console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.");return this.toArray(a,b)},multiplyVector3:function(a){console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return a.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(a){console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.");
return a.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}});
Object.assign(Matrix4$$module$node_modules$three$build$three_module.prototype,{extractPosition:function(a){console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().");return this.copyPosition(a)},flattenToArrayOffset:function(a,b){console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.");return this.toArray(a,b)},getPosition:function(){console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");
return(new Vector3$$module$node_modules$three$build$three_module).setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(a){console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().");return this.makeRotationFromQuaternion(a)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(a){console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.");
return a.applyMatrix4(this)},multiplyVector4:function(a){console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(a){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");a.transformDirection(this)},crossVector:function(a){console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");
return a.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(a){console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.");
return a.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(a,b,c,d,e,f){console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.");return this.makePerspective(a,b,d,c,e,f)}});
Plane$$module$node_modules$three$build$three_module.prototype.isIntersectionLine=function(a){console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().");return this.intersectsLine(a)};Quaternion$$module$node_modules$three$build$three_module.prototype.multiplyVector3=function(a){console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return a.applyQuaternion(this)};
Object.assign(Ray$$module$node_modules$three$build$three_module.prototype,{isIntersectionBox:function(a){console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(a)},isIntersectionPlane:function(a){console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().");return this.intersectsPlane(a)},isIntersectionSphere:function(a){console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().");return this.intersectsSphere(a)}});
Object.assign(Triangle$$module$node_modules$three$build$three_module.prototype,{area:function(){console.warn("THREE.Triangle: .area() has been renamed to .getArea().");return this.getArea()},barycoordFromPoint:function(a,b){console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().");return this.getBarycoord(a,b)},midpoint:function(a){console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint().");return this.getMidpoint(a)},normal:function(a){console.warn("THREE.Triangle: .normal() has been renamed to .getNormal().");
return this.getNormal(a)},plane:function(a){console.warn("THREE.Triangle: .plane() has been renamed to .getPlane().");return this.getPlane(a)}});
Object.assign(Triangle$$module$node_modules$three$build$three_module,{barycoordFromPoint:function(a,b,c,d,e){console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().");return Triangle$$module$node_modules$three$build$three_module.getBarycoord(a,b,c,d,e)},normal:function(a,b,c,d){console.warn("THREE.Triangle: .normal() has been renamed to .getNormal().");return Triangle$$module$node_modules$three$build$three_module.getNormal(a,b,c,d)}});
Object.assign(Shape$$module$node_modules$three$build$three_module.prototype,{extractAllPoints:function(a){console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.");return this.extractPoints(a)},extrude:function(a){console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.");return new ExtrudeGeometry$$module$node_modules$three$build$three_module(this,a)},makeGeometry:function(a){console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.");
return new ShapeGeometry$$module$node_modules$three$build$three_module(this,a)}});
Object.assign(Vector2$$module$node_modules$three$build$three_module.prototype,{fromAttribute:function(a,b,c){console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().");return this.fromBufferAttribute(a,b,c)},distanceToManhattan:function(a){console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().");return this.manhattanDistanceTo(a)},lengthManhattan:function(){console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().");return this.manhattanLength()}});
Object.assign(Vector3$$module$node_modules$three$build$three_module.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(a){console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().");
return this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().");return this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,b){console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");return this.setFromMatrixColumn(b,a)},applyProjection:function(a){console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.");return this.applyMatrix4(a)},
fromAttribute:function(a,b,c){console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().");return this.fromBufferAttribute(a,b,c)},distanceToManhattan:function(a){console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().");return this.manhattanDistanceTo(a)},lengthManhattan:function(){console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().");return this.manhattanLength()}});
Object.assign(Vector4$$module$node_modules$three$build$three_module.prototype,{fromAttribute:function(a,b,c){console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().");return this.fromBufferAttribute(a,b,c)},lengthManhattan:function(){console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().");return this.manhattanLength()}});
Object.assign(Geometry$$module$node_modules$three$build$three_module.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(a){console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4().");return this.applyMatrix4(a)}});
Object.assign(Object3D$$module$node_modules$three$build$three_module.prototype,{getChildByName:function(a){console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(a)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(a,b){console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.");return this.translateOnAxis(b,
a)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(a){console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().");return this.applyMatrix4(a)}});
Object.defineProperties(Object3D$$module$node_modules$three$build$three_module.prototype,{eulerOrder:{get:function(){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");return this.rotation.order},set:function(a){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");this.rotation.order=a}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});
Object.assign(Mesh$$module$node_modules$three$build$three_module.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}});
Object.defineProperties(Mesh$$module$node_modules$three$build$three_module.prototype,{drawMode:{get:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.");return TrianglesDrawMode$$module$node_modules$three$build$three_module},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});
Object.defineProperties(LOD$$module$node_modules$three$build$three_module.prototype,{objects:{get:function(){console.warn("THREE.LOD: .objects has been renamed to .levels.");return this.levels}}});Object.defineProperty(Skeleton$$module$node_modules$three$build$three_module.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}});
SkinnedMesh$$module$node_modules$three$build$three_module.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};
Object.defineProperty(Curve$$module$node_modules$three$build$three_module.prototype,"__arcLengthDivisions",{get:function(){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.");return this.arcLengthDivisions},set:function(a){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.");this.arcLengthDivisions=a}});
PerspectiveCamera$$module$node_modules$three$build$three_module.prototype.setLens=function(a,b){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup.");void 0!==b&&(this.filmGauge=b);this.setFocalLength(a)};
Object.defineProperties(Light$$module$node_modules$three$build$three_module.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(a){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov.");this.shadow.camera.fov=a}},shadowCameraLeft:{set:function(a){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left.");this.shadow.camera.left=a}},shadowCameraRight:{set:function(a){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right.");
this.shadow.camera.right=a}},shadowCameraTop:{set:function(a){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top.");this.shadow.camera.top=a}},shadowCameraBottom:{set:function(a){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.");this.shadow.camera.bottom=a}},shadowCameraNear:{set:function(a){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near.");this.shadow.camera.near=a}},shadowCameraFar:{set:function(a){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far.");
this.shadow.camera.far=a}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(a){console.warn("THREE.Light: .shadowBias is now .shadow.bias.");this.shadow.bias=a}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(a){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.");
this.shadow.mapSize.width=a}},shadowMapHeight:{set:function(a){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.");this.shadow.mapSize.height=a}}});
Object.defineProperties(BufferAttribute$$module$node_modules$three$build$three_module.prototype,{length:{get:function(){console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead.");return this.array.length}},dynamic:{get:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.");return this.usage===DynamicDrawUsage$$module$node_modules$three$build$three_module},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.");
this.setUsage(DynamicDrawUsage$$module$node_modules$three$build$three_module)}}});
Object.assign(BufferAttribute$$module$node_modules$three$build$three_module.prototype,{setDynamic:function(a){console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.");this.setUsage(!0===a?DynamicDrawUsage$$module$node_modules$three$build$three_module:StaticDrawUsage$$module$node_modules$three$build$three_module);return this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});
Object.assign(BufferGeometry$$module$node_modules$three$build$three_module.prototype,{addIndex:function(a){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().");this.setIndex(a)},addAttribute:function(a,b,c){console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().");return b&&b.isBufferAttribute||b&&b.isInterleavedBufferAttribute?"index"===a?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(b),
this):this.setAttribute(a,b):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(a,new BufferAttribute$$module$node_modules$three$build$three_module(b,c)))},addDrawCall:function(a,b,c){void 0!==c&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.");console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup().");this.addGroup(a,b)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().");
this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(a){console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().");return this.deleteAttribute(a)},applyMatrix:function(a){console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().");return this.applyMatrix4(a)}});
Object.defineProperties(BufferGeometry$$module$node_modules$three$build$three_module.prototype,{drawcalls:{get:function(){console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups.");return this.groups}},offsets:{get:function(){console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups.");return this.groups}}});
Object.defineProperties(InstancedBufferGeometry$$module$node_modules$three$build$three_module.prototype,{maxInstancedCount:{get:function(){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.");return this.instanceCount},set:function(a){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.");this.instanceCount=a}}});
Object.defineProperties(Raycaster$$module$node_modules$three$build$three_module.prototype,{linePrecision:{get:function(){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.");return this.params.Line.threshold},set:function(a){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.");this.params.Line.threshold=a}}});
Object.defineProperties(InterleavedBuffer$$module$node_modules$three$build$three_module.prototype,{dynamic:{get:function(){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.");return this.usage===DynamicDrawUsage$$module$node_modules$three$build$three_module},set:function(a){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.");this.setUsage(a)}}});
Object.assign(InterleavedBuffer$$module$node_modules$three$build$three_module.prototype,{setDynamic:function(a){console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.");this.setUsage(!0===a?DynamicDrawUsage$$module$node_modules$three$build$three_module:StaticDrawUsage$$module$node_modules$three$build$three_module);return this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});
Object.assign(ExtrudeBufferGeometry$$module$node_modules$three$build$three_module.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}});Object.assign(Scene$$module$node_modules$three$build$three_module.prototype,{dispose:function(){console.error("THREE.Scene: .dispose() has been removed.")}});
Object.defineProperties(Uniform$$module$node_modules$three$build$three_module.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.");return this}}});
Object.defineProperties(Material$$module$node_modules$three$build$three_module.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){console.warn("THREE.Material: .wrapRGB has been removed.");
return new Color$$module$node_modules$three$build$three_module}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(a){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.");this.flatShading=a===FlatShading$$module$node_modules$three$build$three_module}},stencilMask:{get:function(){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead.");
return this.stencilFuncMask},set:function(a){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead.");this.stencilFuncMask=a}}});Object.defineProperties(MeshPhongMaterial$$module$node_modules$three$build$three_module.prototype,{metal:{get:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.");return!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});
Object.defineProperties(MeshPhysicalMaterial$$module$node_modules$three$build$three_module.prototype,{transparency:{get:function(){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.");return this.transmission},set:function(a){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.");this.transmission=a}}});
Object.defineProperties(ShaderMaterial$$module$node_modules$three$build$three_module.prototype,{derivatives:{get:function(){console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.");return this.extensions.derivatives},set:function(a){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.");this.extensions.derivatives=a}}});
Object.assign(WebGLRenderer$$module$node_modules$three$build$three_module.prototype,{clearTarget:function(a,b,c,d){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.");this.setRenderTarget(a);this.clear(b,c,d)},animate:function(a){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop().");this.setAnimationLoop(a)},getCurrentRenderTarget:function(){console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().");
return this.getRenderTarget()},getMaxAnisotropy:function(){console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().");return this.capabilities.getMaxAnisotropy()},getPrecision:function(){console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.");return this.capabilities.precision},resetGLState:function(){console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset().");return this.state.reset()},supportsFloatTextures:function(){console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).");
return this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).");return this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).");return this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).");
return this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).");return this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).");return this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.");
return this.capabilities.vertexTextures},supportsInstancedArrays:function(){console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).");return this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(a){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().");this.setScissorTest(a)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},
addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},
setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().");return this.getActiveMipmapLevel()}});
Object.defineProperties(WebGLRenderer$$module$node_modules$three$build$three_module.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.");this.shadowMap.enabled=a}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.");this.shadowMap.type=a}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},
set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.");return this.getContext()}},vr:{get:function(){console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr");return this.xr}},gammaInput:{get:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.");
return!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.");return!1},set:function(a){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.");this.outputEncoding=!0===a?sRGBEncoding$$module$node_modules$three$build$three_module:
LinearEncoding$$module$node_modules$three$build$three_module}},toneMappingWhitePoint:{get:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.");return 1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}});
Object.defineProperties(WebGLShadowMap$$module$node_modules$three$build$three_module.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},
set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});
function WebGLRenderTargetCube$$module$node_modules$three$build$three_module(a,b,c){console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).");return new WebGLCubeRenderTarget$$module$node_modules$three$build$three_module(a,c)}
Object.defineProperties(WebGLRenderTarget$$module$node_modules$three$build$three_module.prototype,{wrapS:{get:function(){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");return this.texture.wrapS},set:function(a){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");this.texture.wrapS=a}},wrapT:{get:function(){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");return this.texture.wrapT},set:function(a){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");
this.texture.wrapT=a}},magFilter:{get:function(){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");return this.texture.magFilter},set:function(a){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");this.texture.magFilter=a}},minFilter:{get:function(){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");return this.texture.minFilter},set:function(a){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");
this.texture.minFilter=a}},anisotropy:{get:function(){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");return this.texture.anisotropy},set:function(a){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");this.texture.anisotropy=a}},offset:{get:function(){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");return this.texture.offset},set:function(a){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");
this.texture.offset=a}},repeat:{get:function(){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");return this.texture.repeat},set:function(a){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");this.texture.repeat=a}},format:{get:function(){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");return this.texture.format},set:function(a){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");this.texture.format=a}},type:{get:function(){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");
return this.texture.type},set:function(a){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");this.texture.type=a}},generateMipmaps:{get:function(){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");return this.texture.generateMipmaps},set:function(a){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");this.texture.generateMipmaps=a}}});
Object.defineProperties(Audio$$module$node_modules$three$build$three_module.prototype,{load:{value:function(a){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const b=this;(new AudioLoader$$module$node_modules$three$build$three_module).load(a,function(c){b.setBuffer(c)});return this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}});
AudioAnalyser$$module$node_modules$three$build$three_module.prototype.getData=function(){console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData().");return this.getFrequencyData()};CubeCamera$$module$node_modules$three$build$three_module.prototype.updateCubeMap=function(a,b){console.warn("THREE.CubeCamera: .updateCubeMap() is now .update().");return this.update(a,b)};
const GeometryUtils$$module$node_modules$three$build$three_module={merge:function(a,b,c){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");let d;b.isMesh&&(b.matrixAutoUpdate&&b.updateMatrix(),d=b.matrix,b=b.geometry);a.merge(b,d,c)},center:function(a){console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.");return a.center()}};
ImageUtils$$module$node_modules$three$build$three_module.crossOrigin=void 0;ImageUtils$$module$node_modules$three$build$three_module.loadTexture=function(a,b,c,d){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const e=new TextureLoader$$module$node_modules$three$build$three_module;e.setCrossOrigin(this.crossOrigin);a=e.load(a,c,void 0,d);b&&(a.mapping=b);return a};
ImageUtils$$module$node_modules$three$build$three_module.loadTextureCube=function(a,b,c,d){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const e=new CubeTextureLoader$$module$node_modules$three$build$three_module;e.setCrossOrigin(this.crossOrigin);a=e.load(a,c,void 0,d);b&&(a.mapping=b);return a};ImageUtils$$module$node_modules$three$build$three_module.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};
ImageUtils$$module$node_modules$three$build$three_module.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};function CanvasRenderer$$module$node_modules$three$build$three_module(){console.error("THREE.CanvasRenderer has been removed")}function JSONLoader$$module$node_modules$three$build$three_module(){console.error("THREE.JSONLoader has been removed.")}
const SceneUtils$$module$node_modules$three$build$three_module={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};
function LensFlare$$module$node_modules$three$build$three_module(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:REVISION$$module$node_modules$three$build$three_module}}));var module$node_modules$three$build$three_module={};module$node_modules$three$build$three_module.ACESFilmicToneMapping=ACESFilmicToneMapping$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.AddEquation=AddEquation$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.AddOperation=AddOperation$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.AdditiveAnimationBlendMode=AdditiveAnimationBlendMode$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.AdditiveBlending=AdditiveBlending$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.AlphaFormat=AlphaFormat$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.AlwaysDepth=AlwaysDepth$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.AlwaysStencilFunc=AlwaysStencilFunc$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.AmbientLight=AmbientLight$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.AmbientLightProbe=AmbientLightProbe$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.AnimationClip=AnimationClip$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.AnimationLoader=AnimationLoader$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.AnimationMixer=AnimationMixer$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.AnimationObjectGroup=AnimationObjectGroup$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.AnimationUtils=AnimationUtils$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ArcCurve=ArcCurve$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ArrayCamera=ArrayCamera$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.ArrowHelper=ArrowHelper$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Audio=Audio$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.AudioAnalyser=AudioAnalyser$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.AudioContext=AudioContext$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.AudioListener=AudioListener$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.AudioLoader=AudioLoader$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.AxesHelper=AxesHelper$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.AxisHelper=AxisHelper$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.BackSide=BackSide$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.BasicDepthPacking=BasicDepthPacking$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.BasicShadowMap=BasicShadowMap$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.BinaryTextureLoader=BinaryTextureLoader$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.Bone=Bone$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.BooleanKeyframeTrack=BooleanKeyframeTrack$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.BoundingBoxHelper=BoundingBoxHelper$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Box2=Box2$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.Box3=Box3$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Box3Helper=Box3Helper$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.BoxBufferGeometry=BoxBufferGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.BoxGeometry=BoxGeometry$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.BoxHelper=BoxHelper$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.BufferAttribute=BufferAttribute$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.BufferGeometry=BufferGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.BufferGeometryLoader=BufferGeometryLoader$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.ByteType=ByteType$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Cache=Cache$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Camera=Camera$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.CameraHelper=CameraHelper$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.CanvasRenderer=CanvasRenderer$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.CanvasTexture=CanvasTexture$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.CatmullRomCurve3=CatmullRomCurve3$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.CineonToneMapping=CineonToneMapping$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.CircleBufferGeometry=CircleBufferGeometry$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.CircleGeometry=CircleGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ClampToEdgeWrapping=ClampToEdgeWrapping$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Clock=Clock$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ClosedSplineCurve3=ClosedSplineCurve3$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.Color=Color$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ColorKeyframeTrack=ColorKeyframeTrack$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.CompressedTexture=CompressedTexture$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.CompressedTextureLoader=CompressedTextureLoader$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.ConeBufferGeometry=ConeBufferGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ConeGeometry=ConeGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.CubeCamera=CubeCamera$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.CubeGeometry=BoxGeometry$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.CubeReflectionMapping=CubeReflectionMapping$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.CubeRefractionMapping=CubeRefractionMapping$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.CubeTexture=CubeTexture$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.CubeTextureLoader=CubeTextureLoader$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.CubeUVReflectionMapping=CubeUVReflectionMapping$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.CubeUVRefractionMapping=CubeUVRefractionMapping$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.CubicBezierCurve=CubicBezierCurve$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.CubicBezierCurve3=CubicBezierCurve3$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.CubicInterpolant=CubicInterpolant$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.CullFaceBack=CullFaceBack$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.CullFaceFront=CullFaceFront$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.CullFaceFrontBack=CullFaceFrontBack$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.CullFaceNone=CullFaceNone$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Curve=Curve$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.CurvePath=CurvePath$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.CustomBlending=CustomBlending$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.CustomToneMapping=CustomToneMapping$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.CylinderBufferGeometry=CylinderBufferGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.CylinderGeometry=CylinderGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Cylindrical=Cylindrical$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.DataTexture=DataTexture$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.DataTexture2DArray=DataTexture2DArray$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.DataTexture3D=DataTexture3D$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.DataTextureLoader=DataTextureLoader$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.DecrementStencilOp=DecrementStencilOp$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.DecrementWrapStencilOp=DecrementWrapStencilOp$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.DefaultLoadingManager=DefaultLoadingManager$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.DepthFormat=DepthFormat$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.DepthStencilFormat=DepthStencilFormat$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.DepthTexture=DepthTexture$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.DirectionalLight=DirectionalLight$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.DirectionalLightHelper=DirectionalLightHelper$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.DiscreteInterpolant=DiscreteInterpolant$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.DodecahedronBufferGeometry=DodecahedronBufferGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.DodecahedronGeometry=DodecahedronGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.DoubleSide=DoubleSide$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.DstAlphaFactor=DstAlphaFactor$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.DstColorFactor=DstColorFactor$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.DynamicBufferAttribute=DynamicBufferAttribute$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.DynamicCopyUsage=DynamicCopyUsage$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.DynamicDrawUsage=DynamicDrawUsage$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.DynamicReadUsage=DynamicReadUsage$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.EdgesGeometry=EdgesGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.EdgesHelper=EdgesHelper$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.EllipseCurve=EllipseCurve$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.EqualDepth=EqualDepth$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.EqualStencilFunc=EqualStencilFunc$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.EquirectangularReflectionMapping=EquirectangularReflectionMapping$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.EquirectangularRefractionMapping=EquirectangularRefractionMapping$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Euler=Euler$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.EventDispatcher=EventDispatcher$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ExtrudeBufferGeometry=ExtrudeBufferGeometry$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.ExtrudeGeometry=ExtrudeGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Face3=Face3$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Face4=Face4$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.FaceColors=FaceColors$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.FileLoader=FileLoader$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.FlatShading=FlatShading$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Float32Attribute=Float32Attribute$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Float32BufferAttribute=Float32BufferAttribute$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Float64Attribute=Float64Attribute$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.Float64BufferAttribute=Float64BufferAttribute$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.FloatType=FloatType$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Fog=Fog$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.FogExp2=FogExp2$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.Font=Font$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.FontLoader=FontLoader$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.FrontSide=FrontSide$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Frustum=Frustum$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.GLBufferAttribute=GLBufferAttribute$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.GLSL1=GLSL1$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.GLSL3=GLSL3$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.GammaEncoding=GammaEncoding$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Geometry=Geometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.GeometryUtils=GeometryUtils$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.GreaterDepth=GreaterDepth$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.GreaterEqualDepth=GreaterEqualDepth$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.GreaterEqualStencilFunc=GreaterEqualStencilFunc$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.GreaterStencilFunc=GreaterStencilFunc$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.GridHelper=GridHelper$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Group=Group$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.HalfFloatType=HalfFloatType$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.HemisphereLight=HemisphereLight$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.HemisphereLightHelper=HemisphereLightHelper$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.HemisphereLightProbe=HemisphereLightProbe$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.IcosahedronBufferGeometry=IcosahedronBufferGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.IcosahedronGeometry=IcosahedronGeometry$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.ImageBitmapLoader=ImageBitmapLoader$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ImageLoader=ImageLoader$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ImageUtils=ImageUtils$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ImmediateRenderObject=ImmediateRenderObject$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.IncrementStencilOp=IncrementStencilOp$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.IncrementWrapStencilOp=IncrementWrapStencilOp$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.InstancedBufferAttribute=InstancedBufferAttribute$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.InstancedBufferGeometry=InstancedBufferGeometry$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.InstancedInterleavedBuffer=InstancedInterleavedBuffer$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.InstancedMesh=InstancedMesh$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Int16Attribute=Int16Attribute$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Int16BufferAttribute=Int16BufferAttribute$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.Int32Attribute=Int32Attribute$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Int32BufferAttribute=Int32BufferAttribute$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Int8Attribute=Int8Attribute$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Int8BufferAttribute=Int8BufferAttribute$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.IntType=IntType$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.InterleavedBuffer=InterleavedBuffer$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.InterleavedBufferAttribute=InterleavedBufferAttribute$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Interpolant=Interpolant$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.InterpolateDiscrete=InterpolateDiscrete$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.InterpolateLinear=InterpolateLinear$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.InterpolateSmooth=InterpolateSmooth$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.InvertStencilOp=InvertStencilOp$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.JSONLoader=JSONLoader$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.KeepStencilOp=KeepStencilOp$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.KeyframeTrack=KeyframeTrack$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LOD=LOD$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.LatheBufferGeometry=LatheBufferGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LatheGeometry=LatheGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Layers=Layers$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LensFlare=LensFlare$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.LessDepth=LessDepth$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LessEqualDepth=LessEqualDepth$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LessEqualStencilFunc=LessEqualStencilFunc$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LessStencilFunc=LessStencilFunc$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.Light=Light$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LightProbe=LightProbe$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LightShadow=LightShadow$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Line=Line$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Line3=Line3$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.LineBasicMaterial=LineBasicMaterial$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LineCurve=LineCurve$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LineCurve3=LineCurve3$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LineDashedMaterial=LineDashedMaterial$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.LineLoop=LineLoop$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LinePieces=LinePieces$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LineSegments=LineSegments$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LineStrip=LineStrip$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.LinearEncoding=LinearEncoding$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LinearFilter=LinearFilter$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LinearInterpolant=LinearInterpolant$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LinearMipMapLinearFilter=LinearMipMapLinearFilter$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.LinearMipMapNearestFilter=LinearMipMapNearestFilter$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LinearMipmapLinearFilter=LinearMipmapLinearFilter$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LinearMipmapNearestFilter=LinearMipmapNearestFilter$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LinearToneMapping=LinearToneMapping$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.Loader=Loader$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LoaderUtils=LoaderUtils$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LoadingManager=LoadingManager$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LogLuvEncoding=LogLuvEncoding$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.LoopOnce=LoopOnce$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LoopPingPong=LoopPingPong$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LoopRepeat=LoopRepeat$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.LuminanceAlphaFormat=LuminanceAlphaFormat$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.LuminanceFormat=LuminanceFormat$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.MOUSE=MOUSE$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Material=Material$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.MaterialLoader=MaterialLoader$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.Math=MathUtils$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.MathUtils=MathUtils$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Matrix3=Matrix3$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Matrix4=Matrix4$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.MaxEquation=MaxEquation$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.Mesh=Mesh$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.MeshBasicMaterial=MeshBasicMaterial$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.MeshDepthMaterial=MeshDepthMaterial$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.MeshDistanceMaterial=MeshDistanceMaterial$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.MeshFaceMaterial=MeshFaceMaterial$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.MeshLambertMaterial=MeshLambertMaterial$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.MeshMatcapMaterial=MeshMatcapMaterial$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.MeshNormalMaterial=MeshNormalMaterial$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.MeshPhongMaterial=MeshPhongMaterial$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.MeshPhysicalMaterial=MeshPhysicalMaterial$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.MeshStandardMaterial=MeshStandardMaterial$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.MeshToonMaterial=MeshToonMaterial$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.MinEquation=MinEquation$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.MirroredRepeatWrapping=MirroredRepeatWrapping$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.MixOperation=MixOperation$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.MultiMaterial=MultiMaterial$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.MultiplyBlending=MultiplyBlending$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.MultiplyOperation=MultiplyOperation$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.NearestFilter=NearestFilter$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.NearestMipMapLinearFilter=NearestMipMapLinearFilter$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.NearestMipMapNearestFilter=NearestMipMapNearestFilter$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.NearestMipmapLinearFilter=NearestMipmapLinearFilter$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.NearestMipmapNearestFilter=NearestMipmapNearestFilter$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.NeverDepth=NeverDepth$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.NeverStencilFunc=NeverStencilFunc$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.NoBlending=NoBlending$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.NoColors=NoColors$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.NoToneMapping=NoToneMapping$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.NormalAnimationBlendMode=NormalAnimationBlendMode$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.NormalBlending=NormalBlending$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.NotEqualDepth=NotEqualDepth$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.NotEqualStencilFunc=NotEqualStencilFunc$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.NumberKeyframeTrack=NumberKeyframeTrack$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Object3D=Object3D$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ObjectLoader=ObjectLoader$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ObjectSpaceNormalMap=ObjectSpaceNormalMap$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.OctahedronBufferGeometry=OctahedronBufferGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.OctahedronGeometry=OctahedronGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.OneFactor=OneFactor$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.OneMinusDstAlphaFactor=OneMinusDstAlphaFactor$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.OneMinusDstColorFactor=OneMinusDstColorFactor$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.OneMinusSrcAlphaFactor=OneMinusSrcAlphaFactor$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.OneMinusSrcColorFactor=OneMinusSrcColorFactor$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.OrthographicCamera=OrthographicCamera$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.PCFShadowMap=PCFShadowMap$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.PCFSoftShadowMap=PCFSoftShadowMap$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.PMREMGenerator=PMREMGenerator$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ParametricBufferGeometry=ParametricBufferGeometry$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.ParametricGeometry=ParametricGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Particle=Particle$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ParticleBasicMaterial=ParticleBasicMaterial$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ParticleSystem=ParticleSystem$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.ParticleSystemMaterial=ParticleSystemMaterial$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Path=Path$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.PerspectiveCamera=PerspectiveCamera$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Plane=Plane$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.PlaneBufferGeometry=PlaneBufferGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.PlaneGeometry=PlaneGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.PlaneHelper=PlaneHelper$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.PointCloud=PointCloud$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.PointCloudMaterial=PointCloudMaterial$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.PointLight=PointLight$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.PointLightHelper=PointLightHelper$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Points=Points$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.PointsMaterial=PointsMaterial$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.PolarGridHelper=PolarGridHelper$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.PolyhedronBufferGeometry=PolyhedronBufferGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.PolyhedronGeometry=PolyhedronGeometry$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.PositionalAudio=PositionalAudio$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.PropertyBinding=PropertyBinding$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.PropertyMixer=PropertyMixer$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.QuadraticBezierCurve=QuadraticBezierCurve$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.QuadraticBezierCurve3=QuadraticBezierCurve3$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Quaternion=Quaternion$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.QuaternionKeyframeTrack=QuaternionKeyframeTrack$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.QuaternionLinearInterpolant=QuaternionLinearInterpolant$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.REVISION=REVISION$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBADepthPacking=RGBADepthPacking$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBAFormat=RGBAFormat$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBAIntegerFormat=RGBAIntegerFormat$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.RGBA_ASTC_10x10_Format=RGBA_ASTC_10x10_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBA_ASTC_10x5_Format=RGBA_ASTC_10x5_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBA_ASTC_10x6_Format=RGBA_ASTC_10x6_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBA_ASTC_10x8_Format=RGBA_ASTC_10x8_Format$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.RGBA_ASTC_12x10_Format=RGBA_ASTC_12x10_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBA_ASTC_12x12_Format=RGBA_ASTC_12x12_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBA_ASTC_4x4_Format=RGBA_ASTC_4x4_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBA_ASTC_5x4_Format=RGBA_ASTC_5x4_Format$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.RGBA_ASTC_5x5_Format=RGBA_ASTC_5x5_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBA_ASTC_6x5_Format=RGBA_ASTC_6x5_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBA_ASTC_6x6_Format=RGBA_ASTC_6x6_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBA_ASTC_8x5_Format=RGBA_ASTC_8x5_Format$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.RGBA_ASTC_8x6_Format=RGBA_ASTC_8x6_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBA_ASTC_8x8_Format=RGBA_ASTC_8x8_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBA_BPTC_Format=RGBA_BPTC_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBA_ETC2_EAC_Format=RGBA_ETC2_EAC_Format$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.RGBA_PVRTC_2BPPV1_Format=RGBA_PVRTC_2BPPV1_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBA_PVRTC_4BPPV1_Format=RGBA_PVRTC_4BPPV1_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBA_S3TC_DXT1_Format=RGBA_S3TC_DXT1_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBA_S3TC_DXT3_Format=RGBA_S3TC_DXT3_Format$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.RGBA_S3TC_DXT5_Format=RGBA_S3TC_DXT5_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBDEncoding=RGBDEncoding$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBEEncoding=RGBEEncoding$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBEFormat=RGBAFormat$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.RGBFormat=RGBFormat$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBIntegerFormat=RGBIntegerFormat$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBM16Encoding=RGBM16Encoding$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGBM7Encoding=RGBM7Encoding$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.RGB_ETC1_Format=RGB_ETC1_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGB_ETC2_Format=RGB_ETC2_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGB_PVRTC_2BPPV1_Format=RGB_PVRTC_2BPPV1_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGB_PVRTC_4BPPV1_Format=RGB_PVRTC_4BPPV1_Format$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.RGB_S3TC_DXT1_Format=RGB_S3TC_DXT1_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGFormat=RGFormat$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RGIntegerFormat=RGIntegerFormat$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RawShaderMaterial=RawShaderMaterial$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.Ray=Ray$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Raycaster=Raycaster$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RectAreaLight=RectAreaLight$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RedFormat=RedFormat$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.RedIntegerFormat=RedIntegerFormat$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ReinhardToneMapping=ReinhardToneMapping$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RepeatWrapping=RepeatWrapping$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ReplaceStencilOp=ReplaceStencilOp$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.ReverseSubtractEquation=ReverseSubtractEquation$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RingBufferGeometry=RingBufferGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.RingGeometry=RingGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.SRGB8_ALPHA8_ASTC_10x10_Format=SRGB8_ALPHA8_ASTC_10x10_Format$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.SRGB8_ALPHA8_ASTC_10x5_Format=SRGB8_ALPHA8_ASTC_10x5_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.SRGB8_ALPHA8_ASTC_10x6_Format=SRGB8_ALPHA8_ASTC_10x6_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.SRGB8_ALPHA8_ASTC_10x8_Format=SRGB8_ALPHA8_ASTC_10x8_Format$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.SRGB8_ALPHA8_ASTC_12x10_Format=SRGB8_ALPHA8_ASTC_12x10_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.SRGB8_ALPHA8_ASTC_12x12_Format=SRGB8_ALPHA8_ASTC_12x12_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.SRGB8_ALPHA8_ASTC_4x4_Format=SRGB8_ALPHA8_ASTC_4x4_Format$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.SRGB8_ALPHA8_ASTC_5x4_Format=SRGB8_ALPHA8_ASTC_5x4_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.SRGB8_ALPHA8_ASTC_5x5_Format=SRGB8_ALPHA8_ASTC_5x5_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.SRGB8_ALPHA8_ASTC_6x5_Format=SRGB8_ALPHA8_ASTC_6x5_Format$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.SRGB8_ALPHA8_ASTC_6x6_Format=SRGB8_ALPHA8_ASTC_6x6_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.SRGB8_ALPHA8_ASTC_8x5_Format=SRGB8_ALPHA8_ASTC_8x5_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.SRGB8_ALPHA8_ASTC_8x6_Format=SRGB8_ALPHA8_ASTC_8x6_Format$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.SRGB8_ALPHA8_ASTC_8x8_Format=SRGB8_ALPHA8_ASTC_8x8_Format$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Scene=Scene$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.SceneUtils=SceneUtils$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ShaderChunk=ShaderChunk$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.ShaderLib=ShaderLib$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ShaderMaterial=ShaderMaterial$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ShadowMaterial=ShadowMaterial$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Shape=Shape$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.ShapeBufferGeometry=ShapeBufferGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ShapeGeometry=ShapeGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ShapePath=ShapePath$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ShapeUtils=ShapeUtils$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.ShortType=ShortType$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Skeleton=Skeleton$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.SkeletonHelper=SkeletonHelper$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.SkinnedMesh=SkinnedMesh$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.SmoothShading=SmoothShading$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Sphere=Sphere$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.SphereBufferGeometry=SphereBufferGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.SphereGeometry=SphereGeometry$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.Spherical=Spherical$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.SphericalHarmonics3=SphericalHarmonics3$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Spline=Spline$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.SplineCurve=SplineCurve$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.SplineCurve3=SplineCurve3$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.SpotLight=SpotLight$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.SpotLightHelper=SpotLightHelper$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Sprite=Sprite$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.SpriteMaterial=SpriteMaterial$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.SrcAlphaFactor=SrcAlphaFactor$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.SrcAlphaSaturateFactor=SrcAlphaSaturateFactor$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.SrcColorFactor=SrcColorFactor$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.StaticCopyUsage=StaticCopyUsage$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.StaticDrawUsage=StaticDrawUsage$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.StaticReadUsage=StaticReadUsage$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.StereoCamera=StereoCamera$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.StreamCopyUsage=StreamCopyUsage$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.StreamDrawUsage=StreamDrawUsage$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.StreamReadUsage=StreamReadUsage$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.StringKeyframeTrack=StringKeyframeTrack$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.SubtractEquation=SubtractEquation$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.SubtractiveBlending=SubtractiveBlending$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.TOUCH=TOUCH$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.TangentSpaceNormalMap=TangentSpaceNormalMap$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.TetrahedronBufferGeometry=TetrahedronBufferGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.TetrahedronGeometry=TetrahedronGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.TextBufferGeometry=TextBufferGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.TextGeometry=TextGeometry$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.Texture=Texture$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.TextureLoader=TextureLoader$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.TorusBufferGeometry=TorusBufferGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.TorusGeometry=TorusGeometry$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.TorusKnotBufferGeometry=TorusKnotBufferGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.TorusKnotGeometry=TorusKnotGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Triangle=Triangle$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.TriangleFanDrawMode=TriangleFanDrawMode$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.TriangleStripDrawMode=TriangleStripDrawMode$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.TrianglesDrawMode=TrianglesDrawMode$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.TubeBufferGeometry=TubeBufferGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.TubeGeometry=TubeGeometry$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.UVMapping=UVMapping$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Uint16Attribute=Uint16Attribute$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Uint16BufferAttribute=Uint16BufferAttribute$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Uint32Attribute=Uint32Attribute$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.Uint32BufferAttribute=Uint32BufferAttribute$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Uint8Attribute=Uint8Attribute$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Uint8BufferAttribute=Uint8BufferAttribute$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Uint8ClampedAttribute=Uint8ClampedAttribute$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.Uint8ClampedBufferAttribute=Uint8ClampedBufferAttribute$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Uniform=Uniform$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.UniformsLib=UniformsLib$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.UniformsUtils=UniformsUtils$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.UnsignedByteType=UnsignedByteType$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.UnsignedInt248Type=UnsignedInt248Type$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.UnsignedIntType=UnsignedIntType$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.UnsignedShort4444Type=UnsignedShort4444Type$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.UnsignedShort5551Type=UnsignedShort5551Type$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.UnsignedShort565Type=UnsignedShort565Type$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.UnsignedShortType=UnsignedShortType$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.VSMShadowMap=VSMShadowMap$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.Vector2=Vector2$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Vector3=Vector3$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.Vector4=Vector4$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.VectorKeyframeTrack=VectorKeyframeTrack$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.Vertex=Vertex$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.VertexColors=VertexColors$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.VideoTexture=VideoTexture$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.WebGL1Renderer=WebGL1Renderer$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.WebGLCubeRenderTarget=WebGLCubeRenderTarget$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.WebGLMultisampleRenderTarget=WebGLMultisampleRenderTarget$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.WebGLRenderTarget=WebGLRenderTarget$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.WebGLRenderTargetCube=WebGLRenderTargetCube$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.WebGLRenderer=WebGLRenderer$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.WebGLUtils=WebGLUtils$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.WireframeGeometry=WireframeGeometry$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.WireframeHelper=WireframeHelper$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.WrapAroundEnding=WrapAroundEnding$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.XHRLoader=XHRLoader$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ZeroCurvatureEnding=ZeroCurvatureEnding$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ZeroFactor=ZeroFactor$$module$node_modules$three$build$three_module;
module$node_modules$three$build$three_module.ZeroSlopeEnding=ZeroSlopeEnding$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.ZeroStencilOp=ZeroStencilOp$$module$node_modules$three$build$three_module;module$node_modules$three$build$three_module.sRGBEncoding=sRGBEncoding$$module$node_modules$three$build$three_module;var TDSLoader$$module$node_modules$three$examples$jsm$loaders$TDSLoader=function(a){Loader$$module$node_modules$three$build$three_module.call(this,a);this.debug=!1;this.group=null;this.position=0;this.materials=[];this.meshes=[]};
TDSLoader$$module$node_modules$three$examples$jsm$loaders$TDSLoader.prototype=Object.assign(Object.create(Loader$$module$node_modules$three$build$three_module.prototype),{constructor:TDSLoader$$module$node_modules$three$examples$jsm$loaders$TDSLoader,load:function(a,b,c,d){var e=this,f=""===e.path?LoaderUtils$$module$node_modules$three$build$three_module.extractUrlBase(a):e.path,h=new FileLoader$$module$node_modules$three$build$three_module(this.manager);h.setPath(this.path);h.setResponseType("arraybuffer");
h.setRequestHeader(this.requestHeader);h.load(a,function(g){try{b(e.parse(g,f))}catch(k){d?d(k):console.error(k),e.manager.itemError(a)}},c,d)},parse:function(a,b){this.group=new Group$$module$node_modules$three$build$three_module;this.position=0;this.materials=[];this.meshes=[];this.readFile(a,b);for(a=0;a<this.meshes.length;a++)this.group.add(this.meshes[a]);return this.group},readFile:function(a,b){a=new DataView(a);var c=this.readChunk(a);if(c.id===MLIBMAGIC$$module$node_modules$three$examples$jsm$loaders$TDSLoader||
c.id===CMAGIC$$module$node_modules$three$examples$jsm$loaders$TDSLoader||c.id===M3DMAGIC$$module$node_modules$three$examples$jsm$loaders$TDSLoader)for(var d=this.nextChunk(a,c);0!==d;)d===M3D_VERSION$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(d=this.readDWord(a),this.debugMessage("3DS file version: "+d)):d===MDATA$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(this.resetPosition(a),this.readMeshData(a,b)):this.debugMessage("Unknown main chunk: "+d.toString(16)),d=this.nextChunk(a,
c);this.debugMessage("Parsed "+this.meshes.length+" meshes")},readMeshData:function(a,b){for(var c=this.readChunk(a),d=this.nextChunk(a,c);0!==d;)d===MESH_VERSION$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(d=+this.readDWord(a),this.debugMessage("Mesh Version: "+d)):d===MASTER_SCALE$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(d=this.readFloat(a),this.debugMessage("Master scale: "+d),this.group.scale.set(d,d,d)):d===NAMED_OBJECT$$module$node_modules$three$examples$jsm$loaders$TDSLoader?
(this.debugMessage("Named Object"),this.resetPosition(a),this.readNamedObject(a)):d===MAT_ENTRY$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(this.debugMessage("Material"),this.resetPosition(a),this.readMaterialEntry(a,b)):this.debugMessage("Unknown MDATA chunk: "+d.toString(16)),d=this.nextChunk(a,c)},readNamedObject:function(a){var b=this.readChunk(a),c=this.readString(a,64);b.cur=this.position;for(var d=this.nextChunk(a,b);0!==d;)d===N_TRI_OBJECT$$module$node_modules$three$examples$jsm$loaders$TDSLoader?
(this.resetPosition(a),d=this.readMesh(a),d.name=c,this.meshes.push(d)):this.debugMessage("Unknown named object chunk: "+d.toString(16)),d=this.nextChunk(a,b);this.endChunk(b)},readMaterialEntry:function(a,b){for(var c=this.readChunk(a),d=this.nextChunk(a,c),e=new MeshPhongMaterial$$module$node_modules$three$build$three_module;0!==d;)d===MAT_NAME$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(e.name=this.readString(a,64),this.debugMessage("   Name: "+e.name)):d===MAT_WIRE$$module$node_modules$three$examples$jsm$loaders$TDSLoader?
(this.debugMessage("   Wireframe"),e.wireframe=!0):d===MAT_WIRE_SIZE$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(d=this.readByte(a),e.wireframeLinewidth=d,this.debugMessage("   Wireframe Thickness: "+d)):d===MAT_TWO_SIDE$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(e.side=DoubleSide$$module$node_modules$three$build$three_module,this.debugMessage("   DoubleSided")):d===MAT_ADDITIVE$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(this.debugMessage("   Additive Blending"),
e.blending=AdditiveBlending$$module$node_modules$three$build$three_module):d===MAT_DIFFUSE$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(this.debugMessage("   Diffuse Color"),e.color=this.readColor(a)):d===MAT_SPECULAR$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(this.debugMessage("   Specular Color"),e.specular=this.readColor(a)):d===MAT_AMBIENT$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(this.debugMessage("   Ambient color"),e.color=this.readColor(a)):d===
MAT_SHININESS$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(d=this.readWord(a),e.shininess=d,this.debugMessage("   Shininess : "+d)):d===MAT_TRANSPARENCY$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(d=this.readWord(a),e.opacity=.01*d,this.debugMessage("  Opacity : "+d),e.transparent=100>d?!0:!1):d===MAT_TEXMAP$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(this.debugMessage("   ColorMap"),this.resetPosition(a),e.map=this.readMap(a,b)):d===MAT_BUMPMAP$$module$node_modules$three$examples$jsm$loaders$TDSLoader?
(this.debugMessage("   BumpMap"),this.resetPosition(a),e.bumpMap=this.readMap(a,b)):d===MAT_OPACMAP$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(this.debugMessage("   OpacityMap"),this.resetPosition(a),e.alphaMap=this.readMap(a,b)):d===MAT_SPECMAP$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(this.debugMessage("   SpecularMap"),this.resetPosition(a),e.specularMap=this.readMap(a,b)):this.debugMessage("   Unknown material chunk: "+d.toString(16)),d=this.nextChunk(a,c);this.endChunk(c);
this.materials[e.name]=e},readMesh:function(a){var b=this.readChunk(a),c=this.nextChunk(a,b),d=new BufferGeometry$$module$node_modules$three$build$three_module,e=new MeshPhongMaterial$$module$node_modules$three$build$three_module;e=new Mesh$$module$node_modules$three$build$three_module(d,e);for(e.name="mesh";0!==c;){if(c===POINT_ARRAY$$module$node_modules$three$examples$jsm$loaders$TDSLoader){var f=this.readWord(a);this.debugMessage("   Vertex: "+f);var h=[];for(c=0;c<f;c++)h.push(this.readFloat(a)),
h.push(this.readFloat(a)),h.push(this.readFloat(a));d.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(h,3))}else if(c===FACE_ARRAY$$module$node_modules$three$examples$jsm$loaders$TDSLoader)this.resetPosition(a),this.readFaceArray(a,e);else if(c===TEX_VERTS$$module$node_modules$three$examples$jsm$loaders$TDSLoader){h=this.readWord(a);this.debugMessage("   UV: "+h);f=[];for(c=0;c<h;c++)f.push(this.readFloat(a)),f.push(this.readFloat(a));d.setAttribute("uv",
new Float32BufferAttribute$$module$node_modules$three$build$three_module(f,2))}else if(c===MESH_MATRIX$$module$node_modules$three$examples$jsm$loaders$TDSLoader){this.debugMessage("   Tranformation Matrix (TODO)");f=[];for(c=0;12>c;c++)f[c]=this.readFloat(a);c=new Matrix4$$module$node_modules$three$build$three_module;c.elements[0]=f[0];c.elements[1]=f[6];c.elements[2]=f[3];c.elements[3]=f[9];c.elements[4]=f[2];c.elements[5]=f[8];c.elements[6]=f[5];c.elements[7]=f[11];c.elements[8]=f[1];c.elements[9]=
f[7];c.elements[10]=f[4];c.elements[11]=f[10];c.elements[12]=0;c.elements[13]=0;c.elements[14]=0;c.elements[15]=1;c.transpose();f=new Matrix4$$module$node_modules$three$build$three_module;f.getInverse(c);d.applyMatrix4(f);c.decompose(e.position,e.quaternion,e.scale)}else this.debugMessage("   Unknown mesh chunk: "+c.toString(16));c=this.nextChunk(a,b)}this.endChunk(b);d.computeVertexNormals();return e},readFaceArray:function(a,b){var c=this.readChunk(a),d=this.readWord(a);this.debugMessage("   Faces: "+
d);for(var e=[],f=0;f<d;++f)e.push(this.readWord(a),this.readWord(a),this.readWord(a)),this.readWord(a);for(b.geometry.setIndex(e);this.position<c.end;)c=this.readChunk(a),c.id===MSH_MAT_GROUP$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(this.debugMessage("      Material Group"),this.resetPosition(a),d=this.readMaterialGroup(a),d=this.materials[d.name],void 0!==d&&(b.material=d,""===d.name&&(d.name=b.name))):this.debugMessage("      Unknown face array chunk: "+c.toString(16)),this.endChunk(c);
this.endChunk(c)},readMap:function(a,b){var c=this.readChunk(a),d=this.nextChunk(a,c),e={},f=new TextureLoader$$module$node_modules$three$build$three_module(this.manager);for(f.setPath(this.resourcePath||b).setCrossOrigin(this.crossOrigin);0!==d;)d===MAT_MAPNAME$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(d=this.readString(a,128),e=f.load(d),this.debugMessage("      File: "+b+d)):d===MAT_MAP_UOFFSET$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(e.offset.x=this.readFloat(a),
this.debugMessage("      OffsetX: "+e.offset.x)):d===MAT_MAP_VOFFSET$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(e.offset.y=this.readFloat(a),this.debugMessage("      OffsetY: "+e.offset.y)):d===MAT_MAP_USCALE$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(e.repeat.x=this.readFloat(a),this.debugMessage("      RepeatX: "+e.repeat.x)):d===MAT_MAP_VSCALE$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(e.repeat.y=this.readFloat(a),this.debugMessage("      RepeatY: "+
e.repeat.y)):this.debugMessage("      Unknown map chunk: "+d.toString(16)),d=this.nextChunk(a,c);this.endChunk(c);return e},readMaterialGroup:function(a){this.readChunk(a);var b=this.readString(a,64),c=this.readWord(a);this.debugMessage("         Name: "+b);this.debugMessage("         Faces: "+c);for(var d=[],e=0;e<c;++e)d.push(this.readWord(a));return{name:b,index:d}},readColor:function(a){var b=this.readChunk(a),c=new Color$$module$node_modules$three$build$three_module;if(b.id===COLOR_24$$module$node_modules$three$examples$jsm$loaders$TDSLoader||
b.id===LIN_COLOR_24$$module$node_modules$three$examples$jsm$loaders$TDSLoader){var d=this.readByte(a),e=this.readByte(a);a=this.readByte(a);c.setRGB(d/255,e/255,a/255);this.debugMessage("      Color: "+c.r+", "+c.g+", "+c.b)}else b.id===COLOR_F$$module$node_modules$three$examples$jsm$loaders$TDSLoader||b.id===LIN_COLOR_F$$module$node_modules$three$examples$jsm$loaders$TDSLoader?(d=this.readFloat(a),e=this.readFloat(a),a=this.readFloat(a),c.setRGB(d,e,a),this.debugMessage("      Color: "+c.r+", "+
c.g+", "+c.b)):this.debugMessage("      Unknown color chunk: "+b.toString(16));this.endChunk(b);return c},readChunk:function(a){var b={};b.cur=this.position;b.id=this.readWord(a);b.size=this.readDWord(a);b.end=b.cur+b.size;b.cur+=6;return b},endChunk:function(a){this.position=a.end},nextChunk:function(a,b){if(b.cur>=b.end)return 0;this.position=b.cur;try{var c=this.readChunk(a);b.cur+=c.size;return c.id}catch(d){return this.debugMessage("Unable to read chunk at "+this.position),0}},resetPosition:function(){this.position-=
6},readByte:function(a){a=a.getUint8(this.position,!0);this.position+=1;return a},readFloat:function(a){try{var b=a.getFloat32(this.position,!0);this.position+=4;return b}catch(c){this.debugMessage(c+" "+this.position+" "+a.byteLength)}},readInt:function(a){a=a.getInt32(this.position,!0);this.position+=4;return a},readShort:function(a){a=a.getInt16(this.position,!0);this.position+=2;return a},readDWord:function(a){a=a.getUint32(this.position,!0);this.position+=4;return a},readWord:function(a){a=a.getUint16(this.position,
!0);this.position+=2;return a},readString:function(a,b){for(var c="",d=0;d<b;d++){var e=this.readByte(a);if(!e)break;c+=String.fromCharCode(e)}return c},debugMessage:function(a){this.debug&&console.log(a)}});
var M3DMAGIC$$module$node_modules$three$examples$jsm$loaders$TDSLoader=19789,MLIBMAGIC$$module$node_modules$three$examples$jsm$loaders$TDSLoader=15786,CMAGIC$$module$node_modules$three$examples$jsm$loaders$TDSLoader=49725,M3D_VERSION$$module$node_modules$three$examples$jsm$loaders$TDSLoader=2,COLOR_F$$module$node_modules$three$examples$jsm$loaders$TDSLoader=16,COLOR_24$$module$node_modules$three$examples$jsm$loaders$TDSLoader=17,LIN_COLOR_24$$module$node_modules$three$examples$jsm$loaders$TDSLoader=
18,LIN_COLOR_F$$module$node_modules$three$examples$jsm$loaders$TDSLoader=19,MDATA$$module$node_modules$three$examples$jsm$loaders$TDSLoader=15677,MESH_VERSION$$module$node_modules$three$examples$jsm$loaders$TDSLoader=15678,MASTER_SCALE$$module$node_modules$three$examples$jsm$loaders$TDSLoader=256,MAT_ENTRY$$module$node_modules$three$examples$jsm$loaders$TDSLoader=45055,MAT_NAME$$module$node_modules$three$examples$jsm$loaders$TDSLoader=40960,MAT_AMBIENT$$module$node_modules$three$examples$jsm$loaders$TDSLoader=
40976,MAT_DIFFUSE$$module$node_modules$three$examples$jsm$loaders$TDSLoader=40992,MAT_SPECULAR$$module$node_modules$three$examples$jsm$loaders$TDSLoader=41008,MAT_SHININESS$$module$node_modules$three$examples$jsm$loaders$TDSLoader=41024,MAT_TRANSPARENCY$$module$node_modules$three$examples$jsm$loaders$TDSLoader=41040,MAT_TWO_SIDE$$module$node_modules$three$examples$jsm$loaders$TDSLoader=41089,MAT_ADDITIVE$$module$node_modules$three$examples$jsm$loaders$TDSLoader=41091,MAT_WIRE$$module$node_modules$three$examples$jsm$loaders$TDSLoader=
41093,MAT_WIRE_SIZE$$module$node_modules$three$examples$jsm$loaders$TDSLoader=41095,MAT_TEXMAP$$module$node_modules$three$examples$jsm$loaders$TDSLoader=41472,MAT_OPACMAP$$module$node_modules$three$examples$jsm$loaders$TDSLoader=41488,MAT_BUMPMAP$$module$node_modules$three$examples$jsm$loaders$TDSLoader=41520,MAT_SPECMAP$$module$node_modules$three$examples$jsm$loaders$TDSLoader=41476,MAT_MAPNAME$$module$node_modules$three$examples$jsm$loaders$TDSLoader=41728,MAT_MAP_USCALE$$module$node_modules$three$examples$jsm$loaders$TDSLoader=
41812,MAT_MAP_VSCALE$$module$node_modules$three$examples$jsm$loaders$TDSLoader=41814,MAT_MAP_UOFFSET$$module$node_modules$three$examples$jsm$loaders$TDSLoader=41816,MAT_MAP_VOFFSET$$module$node_modules$three$examples$jsm$loaders$TDSLoader=41818,NAMED_OBJECT$$module$node_modules$three$examples$jsm$loaders$TDSLoader=16384,N_TRI_OBJECT$$module$node_modules$three$examples$jsm$loaders$TDSLoader=16640,POINT_ARRAY$$module$node_modules$three$examples$jsm$loaders$TDSLoader=16656,FACE_ARRAY$$module$node_modules$three$examples$jsm$loaders$TDSLoader=
16672,MSH_MAT_GROUP$$module$node_modules$three$examples$jsm$loaders$TDSLoader=16688,TEX_VERTS$$module$node_modules$three$examples$jsm$loaders$TDSLoader=16704,MESH_MATRIX$$module$node_modules$three$examples$jsm$loaders$TDSLoader=16736,module$node_modules$three$examples$jsm$loaders$TDSLoader={};module$node_modules$three$examples$jsm$loaders$TDSLoader.TDSLoader=TDSLoader$$module$node_modules$three$examples$jsm$loaders$TDSLoader;var OBJLoader$$module$node_modules$three$examples$jsm$loaders$OBJLoader=function(){function a(){var v={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(x,z){if(this.object&&!1===this.object.fromDeclaration)this.object.name=x,this.object.fromDeclaration=!1!==z;else{var F=this.object&&"function"===typeof this.object.currentMaterial?this.object.currentMaterial():void 0;this.object&&"function"===typeof this.object._finalize&&this.object._finalize(!0);
this.object={name:x||"",fromDeclaration:!1!==z,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasNormalIndices:!1,hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(N,p){var A=this._finalize(!1);A&&(A.inherited||0>=A.groupCount)&&this.materials.splice(A.index,1);N={index:this.materials.length,name:N||"",mtllib:Array.isArray(p)&&0<p.length?p[p.length-1]:"",smooth:void 0!==A?A.smooth:this.smooth,groupStart:void 0!==A?A.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(G){G=
{index:"number"===typeof G?G:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};G.clone=this.clone.bind(G);return G}};this.materials.push(N);return N},currentMaterial:function(){if(0<this.materials.length)return this.materials[this.materials.length-1]},_finalize:function(N){var p=this.currentMaterial();p&&-1===p.groupEnd&&(p.groupEnd=this.geometry.vertices.length/3,p.groupCount=p.groupEnd-p.groupStart,p.inherited=!1);if(N&&1<this.materials.length)for(var A=
this.materials.length-1;0<=A;A--)0>=this.materials[A].groupCount&&this.materials.splice(A,1);N&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth});return p}};F&&F.name&&"function"===typeof F.clone&&(x=F.clone(0),x.inherited=!0,this.object.materials.push(x));this.objects.push(this.object)}},finalize:function(){this.object&&"function"===typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(x,z){x=parseInt(x,10);return 3*(0<=x?x-1:x+z/3)},parseNormalIndex:function(x,
z){x=parseInt(x,10);return 3*(0<=x?x-1:x+z/3)},parseUVIndex:function(x,z){x=parseInt(x,10);return 2*(0<=x?x-1:x+z/2)},addVertex:function(x,z,F){var N=this.vertices,p=this.object.geometry.vertices;p.push(N[x+0],N[x+1],N[x+2]);p.push(N[z+0],N[z+1],N[z+2]);p.push(N[F+0],N[F+1],N[F+2])},addVertexPoint:function(x){var z=this.vertices;this.object.geometry.vertices.push(z[x+0],z[x+1],z[x+2])},addVertexLine:function(x){var z=this.vertices;this.object.geometry.vertices.push(z[x+0],z[x+1],z[x+2])},addNormal:function(x,
z,F){var N=this.normals,p=this.object.geometry.normals;p.push(N[x+0],N[x+1],N[x+2]);p.push(N[z+0],N[z+1],N[z+2]);p.push(N[F+0],N[F+1],N[F+2])},addFaceNormal:function(x,z,F){var N=this.vertices,p=this.object.geometry.normals;h.fromArray(N,x);g.fromArray(N,z);k.fromArray(N,F);w.subVectors(k,g);n.subVectors(h,g);w.cross(n);w.normalize();p.push(w.x,w.y,w.z);p.push(w.x,w.y,w.z);p.push(w.x,w.y,w.z)},addColor:function(x,z,F){var N=this.colors,p=this.object.geometry.colors;void 0!==N[x]&&p.push(N[x+0],N[x+
1],N[x+2]);void 0!==N[z]&&p.push(N[z+0],N[z+1],N[z+2]);void 0!==N[F]&&p.push(N[F+0],N[F+1],N[F+2])},addUV:function(x,z,F){var N=this.uvs,p=this.object.geometry.uvs;p.push(N[x+0],N[x+1]);p.push(N[z+0],N[z+1]);p.push(N[F+0],N[F+1])},addDefaultUV:function(){var x=this.object.geometry.uvs;x.push(0,0);x.push(0,0);x.push(0,0)},addUVLine:function(x){var z=this.uvs;this.object.geometry.uvs.push(z[x+0],z[x+1])},addFace:function(x,z,F,N,p,A,G,O,P){var S=this.vertices.length;x=this.parseVertexIndex(x,S);z=this.parseVertexIndex(z,
S);F=this.parseVertexIndex(F,S);this.addVertex(x,z,F);this.addColor(x,z,F);void 0!==G&&""!==G?(F=this.normals.length,x=this.parseNormalIndex(G,F),z=this.parseNormalIndex(O,F),F=this.parseNormalIndex(P,F),this.addNormal(x,z,F),this.object.geometry.hasNormalIndices=!0):this.addFaceNormal(x,z,F);void 0!==N&&""!==N?(G=this.uvs.length,x=this.parseUVIndex(N,G),z=this.parseUVIndex(p,G),F=this.parseUVIndex(A,G),this.addUV(x,z,F),this.object.geometry.hasUVIndices=!0):this.addDefaultUV()},addPointGeometry:function(x){this.object.geometry.type=
"Points";for(var z=this.vertices.length,F=0,N=x.length;F<N;F++)this.addVertexPoint(this.parseVertexIndex(x[F],z))},addLineGeometry:function(x,z){this.object.geometry.type="Line";for(var F=this.vertices.length,N=this.uvs.length,p=0,A=x.length;p<A;p++)this.addVertexLine(this.parseVertexIndex(x[p],F));x=0;for(A=z.length;x<A;x++)this.addUVLine(this.parseUVIndex(z[x],N))}};v.startObject("",!1);return v}function b(v){Loader$$module$node_modules$three$build$three_module.call(this,v);this.materials=null}
var c=/^[og]\s*(.+)?/,d=/^mtllib /,e=/^usemtl /,f=/^usemap /,h=new Vector3$$module$node_modules$three$build$three_module,g=new Vector3$$module$node_modules$three$build$three_module,k=new Vector3$$module$node_modules$three$build$three_module,n=new Vector3$$module$node_modules$three$build$three_module,w=new Vector3$$module$node_modules$three$build$three_module;b.prototype=Object.assign(Object.create(Loader$$module$node_modules$three$build$three_module.prototype),{constructor:b,load:function(v,x,z,F){var N=
this,p=new FileLoader$$module$node_modules$three$build$three_module(N.manager);p.setPath(this.path);p.setRequestHeader(this.requestHeader);p.load(v,function(A){try{x(N.parse(A))}catch(G){F?F(G):console.error(G),N.manager.itemError(v)}},z,F)},setMaterials:function(v){this.materials=v;return this},parse:function(v){var x=new a;-1!==v.indexOf("\r\n")&&(v=v.replace(/\r\n/g,"\n"));-1!==v.indexOf("\\\n")&&(v=v.replace(/\\\n/g,""));var z=v.split("\n"),F,N="function"===typeof"".trimLeft;v=0;for(var p=z.length;v<
p;v++){var A=z[v];A=N?A.trimLeft():A.trim();var G=A.length;if(0!==G&&(G=A.charAt(0),"#"!==G))if("v"===G)switch(A=A.split(/\s+/),A[0]){case "v":x.vertices.push(parseFloat(A[1]),parseFloat(A[2]),parseFloat(A[3]));7<=A.length?x.colors.push(parseFloat(A[4]),parseFloat(A[5]),parseFloat(A[6])):x.colors.push(void 0,void 0,void 0);break;case "vn":x.normals.push(parseFloat(A[1]),parseFloat(A[2]),parseFloat(A[3]));break;case "vt":x.uvs.push(parseFloat(A[1]),parseFloat(A[2]))}else if("f"===G){A=A.substr(1).trim();
var O=A.split(/\s+/);A=[];G=0;for(F=O.length;G<F;G++){var P=O[G];0<P.length&&(P=P.split("/"),A.push(P))}O=A[0];G=1;for(F=A.length-1;G<F;G++){P=A[G];var S=A[G+1];x.addFace(O[0],P[0],S[0],O[1],P[1],S[1],O[2],P[2],S[2])}}else if("l"===G){G=A.substring(1).trim().split(" ");F=[];O=[];if(-1===A.indexOf("/"))F=G;else for(A=0,P=G.length;A<P;A++)S=G[A].split("/"),""!==S[0]&&F.push(S[0]),""!==S[1]&&O.push(S[1]);x.addLineGeometry(F,O)}else if("p"===G)A=A.substr(1).trim(),A=A.split(" "),x.addPointGeometry(A);
else if(null!==(F=c.exec(A)))A=(" "+F[0].substr(1).trim()).substr(1),x.startObject(A);else if(e.test(A))x.object.startMaterial(A.substring(7).trim(),x.materialLibraries);else if(d.test(A))x.materialLibraries.push(A.substring(7).trim());else if(f.test(A))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if("s"===G){if(F=A.split(" "),1<F.length?(A=F[1].trim().toLowerCase(),x.object.smooth="0"!==A&&"off"!==A):x.object.smooth=!0,
A=x.object.currentMaterial())A.smooth=x.object.smooth}else"\x00"!==A&&console.warn('THREE.OBJLoader: Unexpected line: "'+A+'"')}x.finalize();z=new Group$$module$node_modules$three$build$three_module;z.materialLibraries=[].concat(x.materialLibraries);v=0;for(p=x.objects.length;v<p;v++)if(N=x.objects[v],A=N.geometry,G=N.materials,F="Line"===A.type,O="Points"===A.type,P=!1,0!==A.vertices.length){S=new BufferGeometry$$module$node_modules$three$build$three_module;S.setAttribute("position",new Float32BufferAttribute$$module$node_modules$three$build$three_module(A.vertices,
3));!0===A.hasNormalIndices&&S.setAttribute("normal",new Float32BufferAttribute$$module$node_modules$three$build$three_module(A.normals,3));0<A.colors.length&&(P=!0,S.setAttribute("color",new Float32BufferAttribute$$module$node_modules$three$build$three_module(A.colors,3)));!0===A.hasUVIndices&&S.setAttribute("uv",new Float32BufferAttribute$$module$node_modules$three$build$three_module(A.uvs,2));for(var T=[],W=0,X=G.length;W<X;W++){var U=G[W],Z=U.name+"_"+U.smooth+"_"+P;A=x.materials[Z];if(null!==
this.materials)if(A=this.materials.create(U.name),!F||!A||A instanceof LineBasicMaterial$$module$node_modules$three$build$three_module)!O||!A||A instanceof PointsMaterial$$module$node_modules$three$build$three_module||(aa=new PointsMaterial$$module$node_modules$three$build$three_module({size:10,sizeAttenuation:!1}),Material$$module$node_modules$three$build$three_module.prototype.copy.call(aa,A),aa.color.copy(A.color),aa.map=A.map,A=aa);else{var aa=new LineBasicMaterial$$module$node_modules$three$build$three_module;
Material$$module$node_modules$three$build$three_module.prototype.copy.call(aa,A);aa.color.copy(A.color);A=aa}void 0===A&&(A=F?new LineBasicMaterial$$module$node_modules$three$build$three_module:O?new PointsMaterial$$module$node_modules$three$build$three_module({size:1,sizeAttenuation:!1}):new MeshPhongMaterial$$module$node_modules$three$build$three_module,A.name=U.name,A.flatShading=U.smooth?!1:!0,A.vertexColors=P,x.materials[Z]=A);T.push(A)}if(1<T.length){W=0;for(X=G.length;W<X;W++)U=G[W],S.addGroup(U.groupStart,
U.groupCount,W);A=F?new LineSegments$$module$node_modules$three$build$three_module(S,T):O?new Points$$module$node_modules$three$build$three_module(S,T):new Mesh$$module$node_modules$three$build$three_module(S,T)}else A=F?new LineSegments$$module$node_modules$three$build$three_module(S,T[0]):O?new Points$$module$node_modules$three$build$three_module(S,T[0]):new Mesh$$module$node_modules$three$build$three_module(S,T[0]);A.name=N.name;z.add(A)}return z}});return b}(),module$node_modules$three$examples$jsm$loaders$OBJLoader=
{};module$node_modules$three$examples$jsm$loaders$OBJLoader.OBJLoader=OBJLoader$$module$node_modules$three$examples$jsm$loaders$OBJLoader;var Box2D$$module$js$box2d$Box2D={};
(function(a){function b(){}a.inherit=function(c,d){b.prototype=d.prototype;c.prototype=new b;c.prototype.constructor=c};a.generateCallback=function(c,d){return function(){d.apply(c,arguments)}};a.NVector=function(c){void 0===c&&(c=0);for(var d=Array(c||0),e=0;e<c;++e)d[e]=0;return d};a.is=function(c,d){return null===c?!1:d instanceof Function&&c instanceof d||void 0!==c.constructor.__implements&&c.constructor.__implements[d]?!0:!1};a.parseUInt=function(c){return Math.abs(parseInt(c,10))}})(Box2D$$module$js$box2d$Box2D);
var Vector$$module$js$box2d$Box2D=Array,Vector_a2j_Number$$module$js$box2d$Box2D=Box2D$$module$js$box2d$Box2D.NVector;"undefined"===typeof Box2D$$module$js$box2d$Box2D&&(Box2D$$module$js$box2d$Box2D={});"undefined"===typeof Box2D$$module$js$box2d$Box2D.Collision&&(Box2D$$module$js$box2d$Box2D.Collision={});"undefined"===typeof Box2D$$module$js$box2d$Box2D.Collision.Shapes&&(Box2D$$module$js$box2d$Box2D.Collision.Shapes={});
"undefined"===typeof Box2D$$module$js$box2d$Box2D.Common&&(Box2D$$module$js$box2d$Box2D.Common={});"undefined"===typeof Box2D$$module$js$box2d$Box2D.Common.Math&&(Box2D$$module$js$box2d$Box2D.Common.Math={});"undefined"===typeof Box2D$$module$js$box2d$Box2D.Dynamics&&(Box2D$$module$js$box2d$Box2D.Dynamics={});"undefined"===typeof Box2D$$module$js$box2d$Box2D.Dynamics.Contacts&&(Box2D$$module$js$box2d$Box2D.Dynamics.Contacts={});
"undefined"===typeof Box2D$$module$js$box2d$Box2D.Dynamics.Controllers&&(Box2D$$module$js$box2d$Box2D.Dynamics.Controllers={});"undefined"===typeof Box2D$$module$js$box2d$Box2D.Dynamics.Joints&&(Box2D$$module$js$box2d$Box2D.Dynamics.Joints={});
(function(){function a(){a.b2AABB.apply(this,arguments)}function b(){b.b2Bound.apply(this,arguments)}function c(){c.b2BoundValues.apply(this,arguments);this.constructor===c&&this.b2BoundValues.apply(this,arguments)}function d(){d.b2Collision.apply(this,arguments)}function e(){e.b2ContactID.apply(this,arguments);this.constructor===e&&this.b2ContactID.apply(this,arguments)}function f(){f.b2ContactPoint.apply(this,arguments)}function h(){h.b2Distance.apply(this,arguments)}function g(){g.b2DistanceInput.apply(this,
arguments)}function k(){k.b2DistanceOutput.apply(this,arguments)}function n(){n.b2DistanceProxy.apply(this,arguments)}function w(){w.b2DynamicTree.apply(this,arguments);this.constructor===w&&this.b2DynamicTree.apply(this,arguments)}function v(){v.b2DynamicTreeBroadPhase.apply(this,arguments)}function x(){x.b2DynamicTreeNode.apply(this,arguments)}function z(){z.b2DynamicTreePair.apply(this,arguments)}function F(){F.b2Manifold.apply(this,arguments);this.constructor===F&&this.b2Manifold.apply(this,arguments)}
function N(){N.b2ManifoldPoint.apply(this,arguments);this.constructor===N&&this.b2ManifoldPoint.apply(this,arguments)}function p(){p.b2Point.apply(this,arguments)}function A(){A.b2RayCastInput.apply(this,arguments);this.constructor===A&&this.b2RayCastInput.apply(this,arguments)}function G(){G.b2RayCastOutput.apply(this,arguments)}function O(){O.b2Segment.apply(this,arguments)}function P(){P.b2SeparationFunction.apply(this,arguments)}function S(){S.b2Simplex.apply(this,arguments);this.constructor===
S&&this.b2Simplex.apply(this,arguments)}function T(){T.b2SimplexCache.apply(this,arguments)}function W(){W.b2SimplexVertex.apply(this,arguments)}function X(){X.b2TimeOfImpact.apply(this,arguments)}function U(){U.b2TOIInput.apply(this,arguments)}function Z(){Z.b2WorldManifold.apply(this,arguments);this.constructor===Z&&this.b2WorldManifold.apply(this,arguments)}function aa(){aa.ClipVertex.apply(this,arguments)}function r(){r.Features.apply(this,arguments)}function y(){y.b2CircleShape.apply(this,arguments);
this.constructor===y&&this.b2CircleShape.apply(this,arguments)}function J(){J.b2EdgeChainDef.apply(this,arguments);this.constructor===J&&this.b2EdgeChainDef.apply(this,arguments)}function C(){C.b2EdgeShape.apply(this,arguments);this.constructor===C&&this.b2EdgeShape.apply(this,arguments)}function E(){E.b2MassData.apply(this,arguments)}function I(){I.b2PolygonShape.apply(this,arguments);this.constructor===I&&this.b2PolygonShape.apply(this,arguments)}function L(){L.b2Shape.apply(this,arguments);this.constructor===
L&&this.b2Shape.apply(this,arguments)}function m(){m.b2Color.apply(this,arguments);this.constructor===m&&this.b2Color.apply(this,arguments)}function u(){u.b2Settings.apply(this,arguments)}function D(){D.b2Mat22.apply(this,arguments);this.constructor===D&&this.b2Mat22.apply(this,arguments)}function l(){l.b2Mat33.apply(this,arguments);this.constructor===l&&this.b2Mat33.apply(this,arguments)}function q(){q.b2Math.apply(this,arguments)}function t(){t.b2Sweep.apply(this,arguments)}function B(){B.b2Transform.apply(this,
arguments);this.constructor===B&&this.b2Transform.apply(this,arguments)}function H(){H.b2Vec2.apply(this,arguments);this.constructor===H&&this.b2Vec2.apply(this,arguments)}function M(){M.b2Vec3.apply(this,arguments);this.constructor===M&&this.b2Vec3.apply(this,arguments)}function K(){K.b2Body.apply(this,arguments);this.constructor===K&&this.b2Body.apply(this,arguments)}function R(){R.b2BodyDef.apply(this,arguments);this.constructor===R&&this.b2BodyDef.apply(this,arguments)}function Q(){Q.b2ContactFilter.apply(this,
arguments)}function Y(){Y.b2ContactImpulse.apply(this,arguments)}function da(){da.b2ContactListener.apply(this,arguments)}function ca(){ca.b2ContactManager.apply(this,arguments);this.constructor===ca&&this.b2ContactManager.apply(this,arguments)}function ia(){ia.b2DebugDraw.apply(this,arguments);this.constructor===ia&&this.b2DebugDraw.apply(this,arguments)}function na(){na.b2DestructionListener.apply(this,arguments)}function fa(){fa.b2FilterData.apply(this,arguments)}function la(){la.b2Fixture.apply(this,
arguments);this.constructor===la&&this.b2Fixture.apply(this,arguments)}function qa(){qa.b2FixtureDef.apply(this,arguments);this.constructor===qa&&this.b2FixtureDef.apply(this,arguments)}function sa(){sa.b2Island.apply(this,arguments);this.constructor===sa&&this.b2Island.apply(this,arguments)}function za(){za.b2TimeStep.apply(this,arguments)}function ua(){ua.b2World.apply(this,arguments);this.constructor===ua&&this.b2World.apply(this,arguments)}function wa(){wa.b2CircleContact.apply(this,arguments)}
function Ba(){Ba.b2Contact.apply(this,arguments);this.constructor===Ba&&this.b2Contact.apply(this,arguments)}function Ga(){Ga.b2ContactConstraint.apply(this,arguments);this.constructor===Ga&&this.b2ContactConstraint.apply(this,arguments)}function Ma(){Ma.b2ContactConstraintPoint.apply(this,arguments)}function Ha(){Ha.b2ContactEdge.apply(this,arguments)}function Ca(){Ca.b2ContactFactory.apply(this,arguments);this.constructor===Ca&&this.b2ContactFactory.apply(this,arguments)}function Na(){Na.b2ContactRegister.apply(this,
arguments)}function Ka(){Ka.b2ContactResult.apply(this,arguments)}function Ea(){Ea.b2ContactSolver.apply(this,arguments);this.constructor===Ea&&this.b2ContactSolver.apply(this,arguments)}function xa(){xa.b2EdgeAndCircleContact.apply(this,arguments)}function Aa(){Aa.b2NullContact.apply(this,arguments);this.constructor===Aa&&this.b2NullContact.apply(this,arguments)}function Pa(){Pa.b2PolyAndCircleContact.apply(this,arguments)}function Qa(){Qa.b2PolyAndEdgeContact.apply(this,arguments)}function Ra(){Ra.b2PolygonContact.apply(this,
arguments)}function ya(){ya.b2PositionSolverManifold.apply(this,arguments);this.constructor===ya&&this.b2PositionSolverManifold.apply(this,arguments)}function va(){va.b2BuoyancyController.apply(this,arguments)}function Da(){Da.b2ConstantAccelController.apply(this,arguments)}function Sa(){Sa.b2ConstantForceController.apply(this,arguments)}function Oa(){Oa.b2Controller.apply(this,arguments)}function Ja(){Ja.b2ControllerEdge.apply(this,arguments)}function V(){V.b2GravityController.apply(this,arguments)}
function ea(){ea.b2TensorDampingController.apply(this,arguments)}function ba(){ba.b2DistanceJoint.apply(this,arguments);this.constructor===ba&&this.b2DistanceJoint.apply(this,arguments)}function ha(){ha.b2DistanceJointDef.apply(this,arguments);this.constructor===ha&&this.b2DistanceJointDef.apply(this,arguments)}function ja(){ja.b2FrictionJoint.apply(this,arguments);this.constructor===ja&&this.b2FrictionJoint.apply(this,arguments)}function ka(){ka.b2FrictionJointDef.apply(this,arguments);this.constructor===
ka&&this.b2FrictionJointDef.apply(this,arguments)}function ma(){ma.b2GearJoint.apply(this,arguments);this.constructor===ma&&this.b2GearJoint.apply(this,arguments)}function oa(){oa.b2GearJointDef.apply(this,arguments);this.constructor===oa&&this.b2GearJointDef.apply(this,arguments)}function pa(){pa.b2Jacobian.apply(this,arguments)}function ta(){ta.b2Joint.apply(this,arguments);this.constructor===ta&&this.b2Joint.apply(this,arguments)}function ra(){ra.b2JointDef.apply(this,arguments);this.constructor===
ra&&this.b2JointDef.apply(this,arguments)}function Fa(){Fa.b2JointEdge.apply(this,arguments)}function La(){La.b2LineJoint.apply(this,arguments);this.constructor===La&&this.b2LineJoint.apply(this,arguments)}function Ia(){Ia.b2LineJointDef.apply(this,arguments);this.constructor===Ia&&this.b2LineJointDef.apply(this,arguments)}function Ta(){Ta.b2MouseJoint.apply(this,arguments);this.constructor===Ta&&this.b2MouseJoint.apply(this,arguments)}function Ua(){Ua.b2MouseJointDef.apply(this,arguments);this.constructor===
Ua&&this.b2MouseJointDef.apply(this,arguments)}function Va(){Va.b2PrismaticJoint.apply(this,arguments);this.constructor===Va&&this.b2PrismaticJoint.apply(this,arguments)}function Wa(){Wa.b2PrismaticJointDef.apply(this,arguments);this.constructor===Wa&&this.b2PrismaticJointDef.apply(this,arguments)}function Xa(){Xa.b2PulleyJoint.apply(this,arguments);this.constructor===Xa&&this.b2PulleyJoint.apply(this,arguments)}function Ya(){Ya.b2PulleyJointDef.apply(this,arguments);this.constructor===Ya&&this.b2PulleyJointDef.apply(this,
arguments)}function Za(){Za.b2RevoluteJoint.apply(this,arguments);this.constructor===Za&&this.b2RevoluteJoint.apply(this,arguments)}function $a(){$a.b2RevoluteJointDef.apply(this,arguments);this.constructor===$a&&this.b2RevoluteJointDef.apply(this,arguments)}function ab(){ab.b2WeldJoint.apply(this,arguments);this.constructor===ab&&this.b2WeldJoint.apply(this,arguments)}function bb(){bb.b2WeldJointDef.apply(this,arguments);this.constructor===bb&&this.b2WeldJointDef.apply(this,arguments)}Box2D$$module$js$box2d$Box2D.Collision.IBroadPhase=
"Box2D.Collision.IBroadPhase";Box2D$$module$js$box2d$Box2D.Collision.b2AABB=a;Box2D$$module$js$box2d$Box2D.Collision.b2Bound=b;Box2D$$module$js$box2d$Box2D.Collision.b2BoundValues=c;Box2D$$module$js$box2d$Box2D.Collision.b2Collision=d;Box2D$$module$js$box2d$Box2D.Collision.b2ContactID=e;Box2D$$module$js$box2d$Box2D.Collision.b2ContactPoint=f;Box2D$$module$js$box2d$Box2D.Collision.b2Distance=h;Box2D$$module$js$box2d$Box2D.Collision.b2DistanceInput=g;Box2D$$module$js$box2d$Box2D.Collision.b2DistanceOutput=
k;Box2D$$module$js$box2d$Box2D.Collision.b2DistanceProxy=n;Box2D$$module$js$box2d$Box2D.Collision.b2DynamicTree=w;Box2D$$module$js$box2d$Box2D.Collision.b2DynamicTreeBroadPhase=v;Box2D$$module$js$box2d$Box2D.Collision.b2DynamicTreeNode=x;Box2D$$module$js$box2d$Box2D.Collision.b2DynamicTreePair=z;Box2D$$module$js$box2d$Box2D.Collision.b2Manifold=F;Box2D$$module$js$box2d$Box2D.Collision.b2ManifoldPoint=N;Box2D$$module$js$box2d$Box2D.Collision.b2Point=p;Box2D$$module$js$box2d$Box2D.Collision.b2RayCastInput=
A;Box2D$$module$js$box2d$Box2D.Collision.b2RayCastOutput=G;Box2D$$module$js$box2d$Box2D.Collision.b2Segment=O;Box2D$$module$js$box2d$Box2D.Collision.b2SeparationFunction=P;Box2D$$module$js$box2d$Box2D.Collision.b2Simplex=S;Box2D$$module$js$box2d$Box2D.Collision.b2SimplexCache=T;Box2D$$module$js$box2d$Box2D.Collision.b2SimplexVertex=W;Box2D$$module$js$box2d$Box2D.Collision.b2TimeOfImpact=X;Box2D$$module$js$box2d$Box2D.Collision.b2TOIInput=U;Box2D$$module$js$box2d$Box2D.Collision.b2WorldManifold=Z;
Box2D$$module$js$box2d$Box2D.Collision.ClipVertex=aa;Box2D$$module$js$box2d$Box2D.Collision.Features=r;Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2CircleShape=y;Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2EdgeChainDef=J;Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2EdgeShape=C;Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2MassData=E;Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2PolygonShape=I;Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2Shape=L;Box2D$$module$js$box2d$Box2D.Common.b2internal=
"Box2D.Common.b2internal";Box2D$$module$js$box2d$Box2D.Common.b2Color=m;Box2D$$module$js$box2d$Box2D.Common.b2Settings=u;Box2D$$module$js$box2d$Box2D.Common.Math.b2Mat22=D;Box2D$$module$js$box2d$Box2D.Common.Math.b2Mat33=l;Box2D$$module$js$box2d$Box2D.Common.Math.b2Math=q;Box2D$$module$js$box2d$Box2D.Common.Math.b2Sweep=t;Box2D$$module$js$box2d$Box2D.Common.Math.b2Transform=B;Box2D$$module$js$box2d$Box2D.Common.Math.b2Vec2=H;Box2D$$module$js$box2d$Box2D.Common.Math.b2Vec3=M;Box2D$$module$js$box2d$Box2D.Dynamics.b2Body=
K;Box2D$$module$js$box2d$Box2D.Dynamics.b2BodyDef=R;Box2D$$module$js$box2d$Box2D.Dynamics.b2ContactFilter=Q;Box2D$$module$js$box2d$Box2D.Dynamics.b2ContactImpulse=Y;Box2D$$module$js$box2d$Box2D.Dynamics.b2ContactListener=da;Box2D$$module$js$box2d$Box2D.Dynamics.b2ContactManager=ca;Box2D$$module$js$box2d$Box2D.Dynamics.b2DebugDraw=ia;Box2D$$module$js$box2d$Box2D.Dynamics.b2DestructionListener=na;Box2D$$module$js$box2d$Box2D.Dynamics.b2FilterData=fa;Box2D$$module$js$box2d$Box2D.Dynamics.b2Fixture=la;
Box2D$$module$js$box2d$Box2D.Dynamics.b2FixtureDef=qa;Box2D$$module$js$box2d$Box2D.Dynamics.b2Island=sa;Box2D$$module$js$box2d$Box2D.Dynamics.b2TimeStep=za;Box2D$$module$js$box2d$Box2D.Dynamics.b2World=ua;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2CircleContact=wa;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact=Ba;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2ContactConstraint=Ga;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2ContactConstraintPoint=Ma;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2ContactEdge=
Ha;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2ContactFactory=Ca;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2ContactRegister=Na;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2ContactResult=Ka;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2ContactSolver=Ea;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2EdgeAndCircleContact=xa;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2NullContact=Aa;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2PolyAndCircleContact=Pa;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2PolyAndEdgeContact=
Qa;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2PolygonContact=Ra;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2PositionSolverManifold=ya;Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2BuoyancyController=va;Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2ConstantAccelController=Da;Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2ConstantForceController=Sa;Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2Controller=Oa;Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2ControllerEdge=
Ja;Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2GravityController=V;Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2TensorDampingController=ea;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2DistanceJoint=ba;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2DistanceJointDef=ha;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2FrictionJoint=ja;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2FrictionJointDef=ka;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2GearJoint=ma;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2GearJointDef=
oa;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Jacobian=pa;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint=ta;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef=ra;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointEdge=Fa;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2LineJoint=La;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2LineJointDef=Ia;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2MouseJoint=Ta;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2MouseJointDef=Ua;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2PrismaticJoint=
Va;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2PrismaticJointDef=Wa;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2PulleyJoint=Xa;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2PulleyJointDef=Ya;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2RevoluteJoint=Za;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2RevoluteJointDef=$a;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2WeldJoint=ab;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2WeldJointDef=bb})();Box2D$$module$js$box2d$Box2D.postDefs=[];
(function(){var a=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2CircleShape,b=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2PolygonShape,c=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2Shape,d=Box2D$$module$js$box2d$Box2D.Common.b2Settings,e=Box2D$$module$js$box2d$Box2D.Common.Math.b2Math,f=Box2D$$module$js$box2d$Box2D.Common.Math.b2Sweep,h=Box2D$$module$js$box2d$Box2D.Common.Math.b2Transform,g=Box2D$$module$js$box2d$Box2D.Common.Math.b2Vec2,k=Box2D$$module$js$box2d$Box2D.Collision.b2AABB,n=
Box2D$$module$js$box2d$Box2D.Collision.b2Bound,w=Box2D$$module$js$box2d$Box2D.Collision.b2BoundValues,v=Box2D$$module$js$box2d$Box2D.Collision.b2Collision,x=Box2D$$module$js$box2d$Box2D.Collision.b2ContactID,z=Box2D$$module$js$box2d$Box2D.Collision.b2ContactPoint,F=Box2D$$module$js$box2d$Box2D.Collision.b2Distance,N=Box2D$$module$js$box2d$Box2D.Collision.b2DistanceInput,p=Box2D$$module$js$box2d$Box2D.Collision.b2DistanceOutput,A=Box2D$$module$js$box2d$Box2D.Collision.b2DistanceProxy,G=Box2D$$module$js$box2d$Box2D.Collision.b2DynamicTree,
O=Box2D$$module$js$box2d$Box2D.Collision.b2DynamicTreeBroadPhase,P=Box2D$$module$js$box2d$Box2D.Collision.b2DynamicTreeNode,S=Box2D$$module$js$box2d$Box2D.Collision.b2DynamicTreePair,T=Box2D$$module$js$box2d$Box2D.Collision.b2Manifold,W=Box2D$$module$js$box2d$Box2D.Collision.b2ManifoldPoint,X=Box2D$$module$js$box2d$Box2D.Collision.b2Point,U=Box2D$$module$js$box2d$Box2D.Collision.b2RayCastInput,Z=Box2D$$module$js$box2d$Box2D.Collision.b2RayCastOutput,aa=Box2D$$module$js$box2d$Box2D.Collision.b2Segment,
r=Box2D$$module$js$box2d$Box2D.Collision.b2SeparationFunction,y=Box2D$$module$js$box2d$Box2D.Collision.b2Simplex,J=Box2D$$module$js$box2d$Box2D.Collision.b2SimplexCache,C=Box2D$$module$js$box2d$Box2D.Collision.b2SimplexVertex,E=Box2D$$module$js$box2d$Box2D.Collision.b2TimeOfImpact,I=Box2D$$module$js$box2d$Box2D.Collision.b2TOIInput,L=Box2D$$module$js$box2d$Box2D.Collision.b2WorldManifold,m=Box2D$$module$js$box2d$Box2D.Collision.ClipVertex,u=Box2D$$module$js$box2d$Box2D.Collision.Features,D=Box2D$$module$js$box2d$Box2D.Collision.IBroadPhase;
k.b2AABB=function(){this.lowerBound=new g;this.upperBound=new g};k.prototype.IsValid=function(){var l=this.upperBound.y-this.lowerBound.y;return 0<=this.upperBound.x-this.lowerBound.x&&0<=l&&this.lowerBound.IsValid()&&this.upperBound.IsValid()};k.prototype.GetCenter=function(){return new g((this.lowerBound.x+this.upperBound.x)/2,(this.lowerBound.y+this.upperBound.y)/2)};k.prototype.GetExtents=function(){return new g((this.upperBound.x-this.lowerBound.x)/2,(this.upperBound.y-this.lowerBound.y)/2)};
k.prototype.Contains=function(l){var q;return q=(q=(q=(q=this.lowerBound.x<=l.lowerBound.x)&&this.lowerBound.y<=l.lowerBound.y)&&l.upperBound.x<=this.upperBound.x)&&l.upperBound.y<=this.upperBound.y};k.prototype.RayCast=function(l,q){var t=-Number.MAX_VALUE,B=Number.MAX_VALUE,H=q.p1.x,M=q.p1.y,K=q.p2.x-q.p1.x;q=q.p2.y-q.p1.y;var R=Math.abs(q),Q=l.normal;if(Math.abs(K)<Number.MIN_VALUE){if(H<this.lowerBound.x||this.upperBound.x<H)return!1}else{var Y=1/K;K=(this.lowerBound.x-H)*Y;H=(this.upperBound.x-
H)*Y;Y=-1;K>H&&(Y=K,K=H,H=Y,Y=1);K>t&&(Q.x=Y,Q.y=0,t=K);B=Math.min(B,H);if(t>B)return!1}if(R<Number.MIN_VALUE){if(M<this.lowerBound.y||this.upperBound.y<M)return!1}else if(Y=1/q,K=(this.lowerBound.y-M)*Y,H=(this.upperBound.y-M)*Y,Y=-1,K>H&&(Y=K,K=H,H=Y,Y=1),K>t&&(Q.y=Y,Q.x=0,t=K),B=Math.min(B,H),t>B)return!1;l.fraction=t;return!0};k.prototype.TestOverlap=function(l){var q=l.lowerBound.y-this.upperBound.y,t=this.lowerBound.y-l.upperBound.y;return 0<l.lowerBound.x-this.upperBound.x||0<q||0<this.lowerBound.x-
l.upperBound.x||0<t?!1:!0};k.Combine=function(l,q){var t=new k;t.Combine(l,q);return t};k.prototype.Combine=function(l,q){this.lowerBound.x=Math.min(l.lowerBound.x,q.lowerBound.x);this.lowerBound.y=Math.min(l.lowerBound.y,q.lowerBound.y);this.upperBound.x=Math.max(l.upperBound.x,q.upperBound.x);this.upperBound.y=Math.max(l.upperBound.y,q.upperBound.y)};n.b2Bound=function(){};n.prototype.IsLower=function(){return 0===(this.value&1)};n.prototype.IsUpper=function(){return 1===(this.value&1)};n.prototype.Swap=
function(l){var q=this.value,t=this.proxy,B=this.stabbingCount;this.value=l.value;this.proxy=l.proxy;this.stabbingCount=l.stabbingCount;l.value=q;l.proxy=t;l.stabbingCount=B};w.b2BoundValues=function(){};w.prototype.b2BoundValues=function(){this.lowerValues=new Vector_a2j_Number$$module$js$box2d$Box2D;this.lowerValues[0]=0;this.lowerValues[1]=0;this.upperValues=new Vector_a2j_Number$$module$js$box2d$Box2D;this.upperValues[0]=0;this.upperValues[1]=0};v.b2Collision=function(){};v.ClipSegmentToLine=
function(l,q,t,B){void 0===B&&(B=0);var H=0;var M=q[0];var K=M.v;M=q[1];var R=M.v,Q=t.x*K.x+t.y*K.y-B;M=t.x*R.x+t.y*R.y-B;0>=Q&&l[H++].Set(q[0]);0>=M&&l[H++].Set(q[1]);0>Q*M&&(t=Q/(Q-M),M=l[H],M=M.v,M.x=K.x+t*(R.x-K.x),M.y=K.y+t*(R.y-K.y),M=l[H],M.id=(0<Q?q[0]:q[1]).id,++H);return H};v.EdgeSeparation=function(l,q,t,B,H){void 0===t&&(t=0);var M=l.m_vertices,K=l.m_normals;l=B.m_vertexCount;B=B.m_vertices;var R=q.R;var Q=K[t];K=R.col1.x*Q.x+R.col2.x*Q.y;var Y=R.col1.y*Q.x+R.col2.y*Q.y;R=H.R;var da=R.col1.x*
K+R.col1.y*Y;R=R.col2.x*K+R.col2.y*Y;for(var ca=0,ia=Number.MAX_VALUE,na=0;na<l;++na)Q=B[na],Q=Q.x*da+Q.y*R,Q<ia&&(ia=Q,ca=na);Q=M[t];R=q.R;t=q.position.x+(R.col1.x*Q.x+R.col2.x*Q.y);q=q.position.y+(R.col1.y*Q.x+R.col2.y*Q.y);Q=B[ca];R=H.R;return(H.position.x+(R.col1.x*Q.x+R.col2.x*Q.y)-t)*K+(H.position.y+(R.col1.y*Q.x+R.col2.y*Q.y)-q)*Y};v.FindMaxSeparation=function(l,q,t,B,H){var M=q.m_vertexCount,K=q.m_normals;var R=H.R;var Q=B.m_centroid;var Y=H.position.x+(R.col1.x*Q.x+R.col2.x*Q.y),da=H.position.y+
(R.col1.y*Q.x+R.col2.y*Q.y);R=t.R;Q=q.m_centroid;Y-=t.position.x+(R.col1.x*Q.x+R.col2.x*Q.y);da-=t.position.y+(R.col1.y*Q.x+R.col2.y*Q.y);R=Y*t.R.col1.x+da*t.R.col1.y;da=Y*t.R.col2.x+da*t.R.col2.y;Y=0;for(var ca=-Number.MAX_VALUE,ia=0;ia<M;++ia)Q=K[ia],Q=Q.x*R+Q.y*da,Q>ca&&(ca=Q,Y=ia);K=v.EdgeSeparation(q,t,Y,B,H);ca=0<=Y-1?Y-1:M-1;R=v.EdgeSeparation(q,t,ca,B,H);ia=Y+1<M?Y+1:0;da=v.EdgeSeparation(q,t,ia,B,H);if(R>K&&R>da)Q=-1;else if(da>K)Q=1,ca=ia,R=da;else return l[0]=Y,K;for(;;)if(Y=-1===Q?0<=
ca-1?ca-1:M-1:ca+1<M?ca+1:0,K=v.EdgeSeparation(q,t,Y,B,H),K>R)ca=Y,R=K;else break;l[0]=ca;return R};v.FindIncidentEdge=function(l,q,t,B,H,M){void 0===B&&(B=0);var K=q.m_normals,R=H.m_vertexCount;q=H.m_vertices;H=H.m_normals;var Q=t.R;t=K[B];K=Q.col1.x*t.x+Q.col2.x*t.y;var Y=Q.col1.y*t.x+Q.col2.y*t.y;Q=M.R;t=Q.col1.x*K+Q.col1.y*Y;Y=Q.col2.x*K+Q.col2.y*Y;K=t;Q=0;for(var da=Number.MAX_VALUE,ca=0;ca<R;++ca)t=H[ca],t=K*t.x+Y*t.y,t<da&&(da=t,Q=ca);H=Q;K=H+1<R?H+1:0;R=l[0];t=q[H];Q=M.R;R.v.x=M.position.x+
(Q.col1.x*t.x+Q.col2.x*t.y);R.v.y=M.position.y+(Q.col1.y*t.x+Q.col2.y*t.y);R.id.features.referenceEdge=B;R.id.features.incidentEdge=H;R.id.features.incidentVertex=0;R=l[1];t=q[K];Q=M.R;R.v.x=M.position.x+(Q.col1.x*t.x+Q.col2.x*t.y);R.v.y=M.position.y+(Q.col1.y*t.x+Q.col2.y*t.y);R.id.features.referenceEdge=B;R.id.features.incidentEdge=K;R.id.features.incidentVertex=1};v.MakeClipPointVector=function(){var l=new Vector$$module$js$box2d$Box2D(2);l[0]=new m;l[1]=new m;return l};v.CollidePolygons=function(l,
q,t,B,H){l.m_pointCount=0;var M=q.m_radius+B.m_radius;v.s_edgeAO[0]=0;var K=v.FindMaxSeparation(v.s_edgeAO,q,t,B,H);var R=v.s_edgeAO[0];if(!(K>M)){v.s_edgeBO[0]=0;var Q=v.FindMaxSeparation(v.s_edgeBO,B,H,q,t);var Y=v.s_edgeBO[0];if(!(Q>M)){Q>.98*K+.001?(K=B,B=q,q=H,l.m_type=T.e_faceB,R=1):(K=q,q=t,t=H,Y=R,l.m_type=T.e_faceA,R=0);H=v.s_incidentEdge;v.FindIncidentEdge(H,K,q,Y,B,t);Q=K.m_vertices;B=Q[Y];var da=Y+1<K.m_vertexCount?Q[Y+1]:Q[0];K=v.s_localTangent;K.Set(da.x-B.x,da.y-B.y);K.Normalize();
Q=v.s_localNormal;Q.x=K.y;Q.y=-K.x;var ca=v.s_planePoint;ca.Set(.5*(B.x+da.x),.5*(B.y+da.y));var ia=v.s_tangent;Y=q.R;ia.x=Y.col1.x*K.x+Y.col2.x*K.y;ia.y=Y.col1.y*K.x+Y.col2.y*K.y;var na=v.s_tangent2;na.x=-ia.x;na.y=-ia.y;K=v.s_normal;K.x=ia.y;K.y=-ia.x;var fa=v.s_v11,la=v.s_v12;fa.x=q.position.x+(Y.col1.x*B.x+Y.col2.x*B.y);fa.y=q.position.y+(Y.col1.y*B.x+Y.col2.y*B.y);la.x=q.position.x+(Y.col1.x*da.x+Y.col2.x*da.y);la.y=q.position.y+(Y.col1.y*da.x+Y.col2.y*da.y);q=K.x*fa.x+K.y*fa.y;Y=ia.x*la.x+ia.y*
la.y+M;da=v.s_clipPoints1;B=v.s_clipPoints2;H=v.ClipSegmentToLine(da,H,na,-ia.x*fa.x-ia.y*fa.y+M);if(!(2>H||(H=v.ClipSegmentToLine(B,da,ia,Y),2>H))){l.m_localPlaneNormal.SetV(Q);l.m_localPoint.SetV(ca);for(ca=Q=0;ca<d.b2_maxManifoldPoints;++ca)H=B[ca],K.x*H.v.x+K.y*H.v.y-q<=M&&(ia=l.m_points[Q],Y=t.R,na=H.v.x-t.position.x,fa=H.v.y-t.position.y,ia.m_localPoint.x=na*Y.col1.x+fa*Y.col1.y,ia.m_localPoint.y=na*Y.col2.x+fa*Y.col2.y,ia.m_id.Set(H.id),ia.m_id.features.flip=R,++Q);l.m_pointCount=Q}}}};v.CollideCircles=
function(l,q,t,B,H){l.m_pointCount=0;var M=t.R;var K=q.m_p;var R=t.position.x+(M.col1.x*K.x+M.col2.x*K.y);t=t.position.y+(M.col1.y*K.x+M.col2.y*K.y);M=H.R;K=B.m_p;R=H.position.x+(M.col1.x*K.x+M.col2.x*K.y)-R;H=H.position.y+(M.col1.y*K.x+M.col2.y*K.y)-t;M=q.m_radius+B.m_radius;R*R+H*H>M*M||(l.m_type=T.e_circles,l.m_localPoint.SetV(q.m_p),l.m_localPlaneNormal.SetZero(),l.m_pointCount=1,l.m_points[0].m_localPoint.SetV(B.m_p),l.m_points[0].m_id.key=0)};v.CollidePolygonAndCircle=function(l,q,t,B,H){l.m_pointCount=
0;var M=H.R;var K=B.m_p;var R=H.position.y+(M.col1.y*K.x+M.col2.y*K.y);var Q=H.position.x+(M.col1.x*K.x+M.col2.x*K.y)-t.position.x;var Y=R-t.position.y;M=t.R;t=Q*M.col1.x+Y*M.col1.y;M=Q*M.col2.x+Y*M.col2.y;var da=0;H=-Number.MAX_VALUE;R=q.m_radius+B.m_radius;var ca=q.m_vertexCount,ia=q.m_vertices;q=q.m_normals;for(var na=0;na<ca;++na){K=ia[na];Q=t-K.x;Y=M-K.y;K=q[na];K=K.x*Q+K.y*Y;if(K>R)return;K>H&&(H=K,da=na)}K=da;Q=ia[K];ca=ia[K+1<ca?K+1:0];if(H<Number.MIN_VALUE)l.m_pointCount=1,l.m_type=T.e_faceA,
l.m_localPlaneNormal.SetV(q[da]),l.m_localPoint.x=.5*(Q.x+ca.x),l.m_localPoint.y=.5*(Q.y+ca.y);else if(H=(t-ca.x)*(Q.x-ca.x)+(M-ca.y)*(Q.y-ca.y),0>=(t-Q.x)*(ca.x-Q.x)+(M-Q.y)*(ca.y-Q.y)){if((t-Q.x)*(t-Q.x)+(M-Q.y)*(M-Q.y)>R*R)return;l.m_pointCount=1;l.m_type=T.e_faceA;l.m_localPlaneNormal.x=t-Q.x;l.m_localPlaneNormal.y=M-Q.y;l.m_localPlaneNormal.Normalize();l.m_localPoint.SetV(Q)}else if(0>=H){if((t-ca.x)*(t-ca.x)+(M-ca.y)*(M-ca.y)>R*R)return;l.m_pointCount=1;l.m_type=T.e_faceA;l.m_localPlaneNormal.x=
t-ca.x;l.m_localPlaneNormal.y=M-ca.y;l.m_localPlaneNormal.Normalize();l.m_localPoint.SetV(ca)}else{da=.5*(Q.x+ca.x);Q=.5*(Q.y+ca.y);H=(t-da)*q[K].x+(M-Q)*q[K].y;if(H>R)return;l.m_pointCount=1;l.m_type=T.e_faceA;l.m_localPlaneNormal.x=q[K].x;l.m_localPlaneNormal.y=q[K].y;l.m_localPlaneNormal.Normalize();l.m_localPoint.Set(da,Q)}l.m_points[0].m_localPoint.SetV(B.m_p);l.m_points[0].m_id.key=0};v.TestOverlap=function(l,q){var t=q.lowerBound,B=l.upperBound,H=t.x-B.x,M=t.y-B.y;t=l.lowerBound;B=q.upperBound;
l=t.y-B.y;return 0<H||0<M||0<t.x-B.x||0<l?!1:!0};Box2D$$module$js$box2d$Box2D.postDefs.push(function(){Box2D$$module$js$box2d$Box2D.Collision.b2Collision.s_incidentEdge=v.MakeClipPointVector();Box2D$$module$js$box2d$Box2D.Collision.b2Collision.s_clipPoints1=v.MakeClipPointVector();Box2D$$module$js$box2d$Box2D.Collision.b2Collision.s_clipPoints2=v.MakeClipPointVector();Box2D$$module$js$box2d$Box2D.Collision.b2Collision.s_edgeAO=new Vector_a2j_Number$$module$js$box2d$Box2D(1);Box2D$$module$js$box2d$Box2D.Collision.b2Collision.s_edgeBO=
new Vector_a2j_Number$$module$js$box2d$Box2D(1);Box2D$$module$js$box2d$Box2D.Collision.b2Collision.s_localTangent=new g;Box2D$$module$js$box2d$Box2D.Collision.b2Collision.s_localNormal=new g;Box2D$$module$js$box2d$Box2D.Collision.b2Collision.s_planePoint=new g;Box2D$$module$js$box2d$Box2D.Collision.b2Collision.s_normal=new g;Box2D$$module$js$box2d$Box2D.Collision.b2Collision.s_tangent=new g;Box2D$$module$js$box2d$Box2D.Collision.b2Collision.s_tangent2=new g;Box2D$$module$js$box2d$Box2D.Collision.b2Collision.s_v11=
new g;Box2D$$module$js$box2d$Box2D.Collision.b2Collision.s_v12=new g;Box2D$$module$js$box2d$Box2D.Collision.b2Collision.b2CollidePolyTempVec=new g;Box2D$$module$js$box2d$Box2D.Collision.b2Collision.b2_nullFeature=255});x.b2ContactID=function(){this.features=new u};x.prototype.b2ContactID=function(){this.features._m_id=this};x.prototype.Set=function(l){this.key=l._key};x.prototype.Copy=function(){var l=new x;l.key=this.key;return l};Object.defineProperty(x.prototype,"key",{enumerable:!1,configurable:!0,
get:function(){return this._key}});Object.defineProperty(x.prototype,"key",{enumerable:!1,configurable:!0,set:function(l){void 0===l&&(l=0);this._key=l;this.features._referenceEdge=this._key&255;this.features._incidentEdge=(this._key&65280)>>8&255;this.features._incidentVertex=(this._key&16711680)>>16&255;this.features._flip=(this._key&4278190080)>>24&255}});z.b2ContactPoint=function(){this.position=new g;this.velocity=new g;this.normal=new g;this.id=new x};F.b2Distance=function(){};F.Distance=function(l,
q,t){++F.b2_gjkCalls;var B=t.proxyA,H=t.proxyB,M=t.transformA,K=t.transformB,R=F.s_simplex;R.ReadCache(q,B,M,H,K);var Q=R.m_vertices,Y=F.s_saveA,da=F.s_saveB;R.GetClosestPoint().LengthSquared();for(var ca,ia,na=0;20>na;){var fa=R.m_count;for(ca=0;ca<fa;ca++)Y[ca]=Q[ca].indexA,da[ca]=Q[ca].indexB;switch(R.m_count){case 1:break;case 2:R.Solve2();break;case 3:R.Solve3();break;default:d.b2Assert(!1)}if(3===R.m_count)break;ia=R.GetClosestPoint();ia.LengthSquared();ca=R.GetSearchDirection();if(ca.LengthSquared()<
Number.MIN_VALUE*Number.MIN_VALUE)break;ia=Q[R.m_count];ia.indexA=B.GetSupport(e.MulTMV(M.R,ca.GetNegative()));ia.wA=e.MulX(M,B.GetVertex(ia.indexA));ia.indexB=H.GetSupport(e.MulTMV(K.R,ca));ia.wB=e.MulX(K,H.GetVertex(ia.indexB));ia.w=e.SubtractVV(ia.wB,ia.wA);++na;++F.b2_gjkIters;var la=!1;for(ca=0;ca<fa;ca++)if(ia.indexA==Y[ca]&&ia.indexB==da[ca]){la=!0;break}if(la)break;++R.m_count}F.b2_gjkMaxIters=e.Max(F.b2_gjkMaxIters,na);R.GetWitnessPoints(l.pointA,l.pointB);l.distance=e.SubtractVV(l.pointA,
l.pointB).Length();l.iterations=na;R.WriteCache(q);t.useRadii&&(q=B.m_radius,H=H.m_radius,l.distance>q+H&&l.distance>Number.MIN_VALUE?(l.distance-=q+H,t=e.SubtractVV(l.pointB,l.pointA),t.Normalize(),l.pointA.x+=q*t.x,l.pointA.y+=q*t.y,l.pointB.x-=H*t.x,l.pointB.y-=H*t.y):(ia=new g,ia.x=.5*(l.pointA.x+l.pointB.x),ia.y=.5*(l.pointA.y+l.pointB.y),l.pointA.x=l.pointB.x=ia.x,l.pointA.y=l.pointB.y=ia.y,l.distance=0))};Box2D$$module$js$box2d$Box2D.postDefs.push(function(){Box2D$$module$js$box2d$Box2D.Collision.b2Distance.s_simplex=
new y;Box2D$$module$js$box2d$Box2D.Collision.b2Distance.s_saveA=new Vector_a2j_Number$$module$js$box2d$Box2D(3);Box2D$$module$js$box2d$Box2D.Collision.b2Distance.s_saveB=new Vector_a2j_Number$$module$js$box2d$Box2D(3)});N.b2DistanceInput=function(){};p.b2DistanceOutput=function(){this.pointA=new g;this.pointB=new g};A.b2DistanceProxy=function(){};A.prototype.Set=function(l){switch(l.GetType()){case c.e_circleShape:l=l instanceof a?l:null;this.m_vertices=new Vector$$module$js$box2d$Box2D(1,!0);this.m_vertices[0]=
l.m_p;this.m_count=1;this.m_radius=l.m_radius;break;case c.e_polygonShape:l=l instanceof b?l:null;this.m_vertices=l.m_vertices;this.m_count=l.m_vertexCount;this.m_radius=l.m_radius;break;default:d.b2Assert(!1)}};A.prototype.GetSupport=function(l){for(var q=0,t=this.m_vertices[0].x*l.x+this.m_vertices[0].y*l.y,B=1;B<this.m_count;++B){var H=this.m_vertices[B].x*l.x+this.m_vertices[B].y*l.y;H>t&&(q=B,t=H)}return q};A.prototype.GetSupportVertex=function(l){for(var q=0,t=this.m_vertices[0].x*l.x+this.m_vertices[0].y*
l.y,B=1;B<this.m_count;++B){var H=this.m_vertices[B].x*l.x+this.m_vertices[B].y*l.y;H>t&&(q=B,t=H)}return this.m_vertices[q]};A.prototype.GetVertexCount=function(){return this.m_count};A.prototype.GetVertex=function(l){void 0===l&&(l=0);d.b2Assert(0<=l&&l<this.m_count);return this.m_vertices[l]};G.b2DynamicTree=function(){};G.prototype.b2DynamicTree=function(){this.m_freeList=this.m_root=null;this.m_insertionCount=this.m_path=0};G.prototype.CreateProxy=function(l,q){var t=this.AllocateNode(),B=d.b2_aabbExtension,
H=d.b2_aabbExtension;t.aabb.lowerBound.x=l.lowerBound.x-B;t.aabb.lowerBound.y=l.lowerBound.y-H;t.aabb.upperBound.x=l.upperBound.x+B;t.aabb.upperBound.y=l.upperBound.y+H;t.userData=q;this.InsertLeaf(t);return t};G.prototype.DestroyProxy=function(l){this.RemoveLeaf(l);this.FreeNode(l)};G.prototype.MoveProxy=function(l,q,t){d.b2Assert(l.IsLeaf());if(l.aabb.Contains(q))return!1;this.RemoveLeaf(l);var B=d.b2_aabbExtension+d.b2_aabbMultiplier*(0<t.x?t.x:-t.x);t=d.b2_aabbExtension+d.b2_aabbMultiplier*(0<
t.y?t.y:-t.y);l.aabb.lowerBound.x=q.lowerBound.x-B;l.aabb.lowerBound.y=q.lowerBound.y-t;l.aabb.upperBound.x=q.upperBound.x+B;l.aabb.upperBound.y=q.upperBound.y+t;this.InsertLeaf(l);return!0};G.prototype.Rebalance=function(l){void 0===l&&(l=0);if(null!=this.m_root)for(var q=0;q<l;q++){for(var t=this.m_root,B=0;0==t.IsLeaf();)t=this.m_path>>B&1?t.child2:t.child1,B=B+1&31;++this.m_path;this.RemoveLeaf(t);this.InsertLeaf(t)}};G.prototype.GetFatAABB=function(l){return l.aabb};G.prototype.GetUserData=function(l){return l.userData};
G.prototype.Query=function(l,q){if(null!=this.m_root){var t=new Vector$$module$js$box2d$Box2D,B=0;for(t[B++]=this.m_root;0<B;){var H=t[--B];if(H.aabb.TestOverlap(q))if(H.IsLeaf()){if(!l(H))break}else t[B++]=H.child1,t[B++]=H.child2}}};G.prototype.RayCast=function(l,q){if(null!=this.m_root){var t=q.p1,B=q.p2,H=e.SubtractVV(t,B);H.Normalize();H=e.CrossFV(1,H);var M=e.AbsV(H),K=q.maxFraction,R=new k;var Q=t.x+K*(B.x-t.x);K=t.y+K*(B.y-t.y);R.lowerBound.x=Math.min(t.x,Q);R.lowerBound.y=Math.min(t.y,K);
R.upperBound.x=Math.max(t.x,Q);R.upperBound.y=Math.max(t.y,K);var Y=new Vector$$module$js$box2d$Box2D,da=0;for(Y[da++]=this.m_root;0<da;)if(Q=Y[--da],0!=Q.aabb.TestOverlap(R)){K=Q.aabb.GetCenter();var ca=Q.aabb.GetExtents();if(!(0<Math.abs(H.x*(t.x-K.x)+H.y*(t.y-K.y))-M.x*ca.x-M.y*ca.y))if(Q.IsLeaf()){K=new U;K.p1=q.p1;K.p2=q.p2;K.maxFraction=q.maxFraction;K=l(K,Q);if(0==K)break;0<K&&(Q=t.x+K*(B.x-t.x),K=t.y+K*(B.y-t.y),R.lowerBound.x=Math.min(t.x,Q),R.lowerBound.y=Math.min(t.y,K),R.upperBound.x=
Math.max(t.x,Q),R.upperBound.y=Math.max(t.y,K))}else Y[da++]=Q.child1,Y[da++]=Q.child2}}};G.prototype.AllocateNode=function(){if(this.m_freeList){var l=this.m_freeList;this.m_freeList=l.parent;l.parent=null;l.child1=null;l.child2=null;return l}return new P};G.prototype.FreeNode=function(l){l.parent=this.m_freeList;this.m_freeList=l};G.prototype.InsertLeaf=function(l){++this.m_insertionCount;if(null==this.m_root)this.m_root=l,this.m_root.parent=null;else{var q=l.aabb.GetCenter(),t=this.m_root;if(0==
t.IsLeaf()){do{var B=t.child1;t=t.child2;t=Math.abs((B.aabb.lowerBound.x+B.aabb.upperBound.x)/2-q.x)+Math.abs((B.aabb.lowerBound.y+B.aabb.upperBound.y)/2-q.y)<Math.abs((t.aabb.lowerBound.x+t.aabb.upperBound.x)/2-q.x)+Math.abs((t.aabb.lowerBound.y+t.aabb.upperBound.y)/2-q.y)?B:t}while(0==t.IsLeaf())}q=t.parent;B=this.AllocateNode();B.parent=q;B.userData=null;B.aabb.Combine(l.aabb,t.aabb);if(q){t.parent.child1==t?q.child1=B:q.child2=B;B.child1=t;B.child2=l;t.parent=B;l.parent=B;do{if(q.aabb.Contains(B.aabb))break;
q.aabb.Combine(q.child1.aabb,q.child2.aabb);B=q;q=q.parent}while(q)}else B.child1=t,B.child2=l,t.parent=B,this.m_root=l.parent=B}};G.prototype.RemoveLeaf=function(l){if(l==this.m_root)this.m_root=null;else{var q=l.parent,t=q.parent;l=q.child1==l?q.child2:q.child1;if(t)for(t.child1==q?t.child1=l:t.child2=l,l.parent=t,this.FreeNode(q);t;){q=t.aabb;t.aabb=k.Combine(t.child1.aabb,t.child2.aabb);if(q.Contains(t.aabb))break;t=t.parent}else this.m_root=l,l.parent=null,this.FreeNode(q)}};O.b2DynamicTreeBroadPhase=
function(){this.m_tree=new G;this.m_moveBuffer=new Vector$$module$js$box2d$Box2D;this.m_pairBuffer=new Vector$$module$js$box2d$Box2D;this.m_pairCount=0};O.prototype.CreateProxy=function(l,q){l=this.m_tree.CreateProxy(l,q);++this.m_proxyCount;this.BufferMove(l);return l};O.prototype.DestroyProxy=function(l){this.UnBufferMove(l);--this.m_proxyCount;this.m_tree.DestroyProxy(l)};O.prototype.MoveProxy=function(l,q,t){this.m_tree.MoveProxy(l,q,t)&&this.BufferMove(l)};O.prototype.TestOverlap=function(l,
q){l=this.m_tree.GetFatAABB(l);q=this.m_tree.GetFatAABB(q);return l.TestOverlap(q)};O.prototype.GetUserData=function(l){return this.m_tree.GetUserData(l)};O.prototype.GetFatAABB=function(l){return this.m_tree.GetFatAABB(l)};O.prototype.GetProxyCount=function(){return this.m_proxyCount};O.prototype.UpdatePairs=function(l){var q=this,t=q.m_pairCount=0;for(t=0;t<q.m_moveBuffer.length;++t){var B=q.m_moveBuffer[t];var H=q.m_tree.GetFatAABB(B);q.m_tree.Query(function(R){if(R==B)return!0;q.m_pairCount==
q.m_pairBuffer.length&&(q.m_pairBuffer[q.m_pairCount]=new S);var Q=q.m_pairBuffer[q.m_pairCount];Q.proxyA=R<B?R:B;Q.proxyB=R>=B?R:B;++q.m_pairCount;return!0},H)}for(t=q.m_moveBuffer.length=0;t<q.m_pairCount;){H=q.m_pairBuffer[t];var M=q.m_tree.GetUserData(H.proxyA),K=q.m_tree.GetUserData(H.proxyB);l(M,K);for(++t;t<q.m_pairCount;){M=q.m_pairBuffer[t];if(M.proxyA!=H.proxyA||M.proxyB!=H.proxyB)break;++t}}};O.prototype.Query=function(l,q){this.m_tree.Query(l,q)};O.prototype.RayCast=function(l,q){this.m_tree.RayCast(l,
q)};O.prototype.Validate=function(){};O.prototype.Rebalance=function(l){void 0===l&&(l=0);this.m_tree.Rebalance(l)};O.prototype.BufferMove=function(l){this.m_moveBuffer[this.m_moveBuffer.length]=l};O.prototype.UnBufferMove=function(l){l=this.m_moveBuffer.indexOf(l);this.m_moveBuffer.splice(l,1)};O.prototype.ComparePairs=function(l,q){return 0};O.__implements={};O.__implements[D]=!0;P.b2DynamicTreeNode=function(){this.aabb=new k};P.prototype.IsLeaf=function(){return null==this.child1};S.b2DynamicTreePair=
function(){};T.b2Manifold=function(){this.m_pointCount=0};T.prototype.b2Manifold=function(){this.m_points=new Vector$$module$js$box2d$Box2D(d.b2_maxManifoldPoints);for(var l=0;l<d.b2_maxManifoldPoints;l++)this.m_points[l]=new W;this.m_localPlaneNormal=new g;this.m_localPoint=new g};T.prototype.Reset=function(){for(var l=0;l<d.b2_maxManifoldPoints;l++)(this.m_points[l]instanceof W?this.m_points[l]:null).Reset();this.m_localPlaneNormal.SetZero();this.m_localPoint.SetZero();this.m_pointCount=this.m_type=
0};T.prototype.Set=function(l){this.m_pointCount=l.m_pointCount;for(var q=0;q<d.b2_maxManifoldPoints;q++)(this.m_points[q]instanceof W?this.m_points[q]:null).Set(l.m_points[q]);this.m_localPlaneNormal.SetV(l.m_localPlaneNormal);this.m_localPoint.SetV(l.m_localPoint);this.m_type=l.m_type};T.prototype.Copy=function(){var l=new T;l.Set(this);return l};Box2D$$module$js$box2d$Box2D.postDefs.push(function(){Box2D$$module$js$box2d$Box2D.Collision.b2Manifold.e_circles=1;Box2D$$module$js$box2d$Box2D.Collision.b2Manifold.e_faceA=
2;Box2D$$module$js$box2d$Box2D.Collision.b2Manifold.e_faceB=4});W.b2ManifoldPoint=function(){this.m_localPoint=new g;this.m_id=new x};W.prototype.b2ManifoldPoint=function(){this.Reset()};W.prototype.Reset=function(){this.m_localPoint.SetZero();this.m_tangentImpulse=this.m_normalImpulse=0;this.m_id.key=0};W.prototype.Set=function(l){this.m_localPoint.SetV(l.m_localPoint);this.m_normalImpulse=l.m_normalImpulse;this.m_tangentImpulse=l.m_tangentImpulse;this.m_id.Set(l.m_id)};X.b2Point=function(){this.p=
new g};X.prototype.Support=function(l,q,t){return this.p};X.prototype.GetFirstVertex=function(l){return this.p};U.b2RayCastInput=function(){this.p1=new g;this.p2=new g};U.prototype.b2RayCastInput=function(l,q,t){void 0===l&&(l=null);void 0===q&&(q=null);void 0===t&&(t=1);l&&this.p1.SetV(l);q&&this.p2.SetV(q);this.maxFraction=t};Z.b2RayCastOutput=function(){this.normal=new g};aa.b2Segment=function(){this.p1=new g;this.p2=new g};aa.prototype.TestSegment=function(l,q,t,B){void 0===B&&(B=0);var H=t.p1,
M=t.p2.x-H.x,K=t.p2.y-H.y;t=this.p2.y-this.p1.y;var R=-(this.p2.x-this.p1.x),Q=100*Number.MIN_VALUE,Y=-(M*t+K*R);if(Y>Q){var da=H.x-this.p1.x,ca=H.y-this.p1.y;H=da*t+ca*R;if(0<=H&&H<=B*Y&&(B=-M*ca+K*da,-Q*Y<=B&&B<=Y*(1+Q)))return B=Math.sqrt(t*t+R*R),l[0]=H/Y,q.Set(t/B,R/B),!0}return!1};aa.prototype.Extend=function(l){this.ExtendForward(l);this.ExtendBackward(l)};aa.prototype.ExtendForward=function(l){var q=this.p2.x-this.p1.x,t=this.p2.y-this.p1.y;l=Math.min(0<q?(l.upperBound.x-this.p1.x)/q:0>q?
(l.lowerBound.x-this.p1.x)/q:Number.POSITIVE_INFINITY,0<t?(l.upperBound.y-this.p1.y)/t:0>t?(l.lowerBound.y-this.p1.y)/t:Number.POSITIVE_INFINITY);this.p2.x=this.p1.x+q*l;this.p2.y=this.p1.y+t*l};aa.prototype.ExtendBackward=function(l){var q=-this.p2.x+this.p1.x,t=-this.p2.y+this.p1.y;l=Math.min(0<q?(l.upperBound.x-this.p2.x)/q:0>q?(l.lowerBound.x-this.p2.x)/q:Number.POSITIVE_INFINITY,0<t?(l.upperBound.y-this.p2.y)/t:0>t?(l.lowerBound.y-this.p2.y)/t:Number.POSITIVE_INFINITY);this.p1.x=this.p2.x+q*
l;this.p1.y=this.p2.y+t*l};r.b2SeparationFunction=function(){this.m_localPoint=new g;this.m_axis=new g};r.prototype.Initialize=function(l,q,t,B,H){this.m_proxyA=q;this.m_proxyB=B;q=l.count;d.b2Assert(0<q&&3>q);if(1==q){this.m_type=r.e_points;var M=this.m_proxyA.GetVertex(l.indexA[0]);var K=this.m_proxyB.GetVertex(l.indexB[0]);var R=M;var Q=t.R;M=t.position.x+(Q.col1.x*R.x+Q.col2.x*R.y);t=t.position.y+(Q.col1.y*R.x+Q.col2.y*R.y);R=K;Q=H.R;K=H.position.x+(Q.col1.x*R.x+Q.col2.x*R.y);H=H.position.y+(Q.col1.y*
R.x+Q.col2.y*R.y);this.m_axis.x=K-M;this.m_axis.y=H-t;this.m_axis.Normalize()}else if(l.indexB[0]==l.indexB[1])this.m_type=r.e_faceA,q=this.m_proxyA.GetVertex(l.indexA[0]),B=this.m_proxyA.GetVertex(l.indexA[1]),K=this.m_proxyB.GetVertex(l.indexB[0]),this.m_localPoint.x=.5*(q.x+B.x),this.m_localPoint.y=.5*(q.y+B.y),this.m_axis=e.CrossVF(e.SubtractVV(B,q),1),this.m_axis.Normalize(),R=this.m_axis,Q=t.R,q=Q.col1.x*R.x+Q.col2.x*R.y,B=Q.col1.y*R.x+Q.col2.y*R.y,R=this.m_localPoint,Q=t.R,M=t.position.x+(Q.col1.x*
R.x+Q.col2.x*R.y),t=t.position.y+(Q.col1.y*R.x+Q.col2.y*R.y),R=K,Q=H.R,K=H.position.x+(Q.col1.x*R.x+Q.col2.x*R.y),H=H.position.y+(Q.col1.y*R.x+Q.col2.y*R.y),0>(K-M)*q+(H-t)*B&&this.m_axis.NegativeSelf();else if(l.indexA[0]==l.indexA[0])this.m_type=r.e_faceB,Q=this.m_proxyB.GetVertex(l.indexB[0]),R=this.m_proxyB.GetVertex(l.indexB[1]),M=this.m_proxyA.GetVertex(l.indexA[0]),this.m_localPoint.x=.5*(Q.x+R.x),this.m_localPoint.y=.5*(Q.y+R.y),this.m_axis=e.CrossVF(e.SubtractVV(R,Q),1),this.m_axis.Normalize(),
R=this.m_axis,Q=H.R,q=Q.col1.x*R.x+Q.col2.x*R.y,B=Q.col1.y*R.x+Q.col2.y*R.y,R=this.m_localPoint,Q=H.R,K=H.position.x+(Q.col1.x*R.x+Q.col2.x*R.y),H=H.position.y+(Q.col1.y*R.x+Q.col2.y*R.y),R=M,Q=t.R,M=t.position.x+(Q.col1.x*R.x+Q.col2.x*R.y),t=t.position.y+(Q.col1.y*R.x+Q.col2.y*R.y),0>(M-K)*q+(t-H)*B&&this.m_axis.NegativeSelf();else{q=this.m_proxyA.GetVertex(l.indexA[0]);B=this.m_proxyA.GetVertex(l.indexA[1]);Q=this.m_proxyB.GetVertex(l.indexB[0]);R=this.m_proxyB.GetVertex(l.indexB[1]);e.MulX(t,M);
M=e.MulMV(t.R,e.SubtractVV(B,q));e.MulX(H,K);l=e.MulMV(H.R,e.SubtractVV(R,Q));H=M.x*M.x+M.y*M.y;K=l.x*l.x+l.y*l.y;var Y=e.SubtractVV(l,M);t=M.x*Y.x+M.y*Y.y;Y=l.x*Y.x+l.y*Y.y;M=M.x*l.x+M.y*l.y;var da=H*K-M*M;l=0;0!=da&&(l=e.Clamp((M*Y-t*K)/da,0,1));0>(M*l+Y)/K&&(l=e.Clamp((M-t)/H,0,1));M=new g;M.x=q.x+l*(B.x-q.x);M.y=q.y+l*(B.y-q.y);K=new g;K.x=Q.x+l*(R.x-Q.x);K.y=Q.y+l*(R.y-Q.y);0==l||1==l?(this.m_type=r.e_faceB,this.m_axis=e.CrossVF(e.SubtractVV(R,Q),1),this.m_axis.Normalize(),this.m_localPoint=
K):(this.m_type=r.e_faceA,this.m_axis=e.CrossVF(e.SubtractVV(B,q),1),this.m_localPoint=M);0>l&&this.m_axis.NegativeSelf()}};r.prototype.Evaluate=function(l,q){var t;switch(this.m_type){case r.e_points:var B=e.MulTMV(l.R,this.m_axis);var H=e.MulTMV(q.R,this.m_axis.GetNegative());B=this.m_proxyA.GetSupportVertex(B);H=this.m_proxyB.GetSupportVertex(H);l=e.MulX(l,B);q=e.MulX(q,H);return t=(q.x-l.x)*this.m_axis.x+(q.y-l.y)*this.m_axis.y;case r.e_faceA:return t=e.MulMV(l.R,this.m_axis),l=e.MulX(l,this.m_localPoint),
H=e.MulTMV(q.R,t.GetNegative()),H=this.m_proxyB.GetSupportVertex(H),q=e.MulX(q,H),t=(q.x-l.x)*t.x+(q.y-l.y)*t.y;case r.e_faceB:return t=e.MulMV(q.R,this.m_axis),q=e.MulX(q,this.m_localPoint),B=e.MulTMV(l.R,t.GetNegative()),B=this.m_proxyA.GetSupportVertex(B),l=e.MulX(l,B),t=(l.x-q.x)*t.x+(l.y-q.y)*t.y;default:return d.b2Assert(!1),0}};Box2D$$module$js$box2d$Box2D.postDefs.push(function(){Box2D$$module$js$box2d$Box2D.Collision.b2SeparationFunction.e_points=1;Box2D$$module$js$box2d$Box2D.Collision.b2SeparationFunction.e_faceA=
2;Box2D$$module$js$box2d$Box2D.Collision.b2SeparationFunction.e_faceB=4});y.b2Simplex=function(){this.m_v1=new C;this.m_v2=new C;this.m_v3=new C;this.m_vertices=new Vector$$module$js$box2d$Box2D(3)};y.prototype.b2Simplex=function(){this.m_vertices[0]=this.m_v1;this.m_vertices[1]=this.m_v2;this.m_vertices[2]=this.m_v3};y.prototype.ReadCache=function(l,q,t,B,H){d.b2Assert(0<=l.count&&3>=l.count);this.m_count=l.count;for(var M=this.m_vertices,K=0;K<this.m_count;K++){var R=M[K];R.indexA=l.indexA[K];R.indexB=
l.indexB[K];var Q=q.GetVertex(R.indexA);var Y=B.GetVertex(R.indexB);R.wA=e.MulX(t,Q);R.wB=e.MulX(H,Y);R.w=e.SubtractVV(R.wB,R.wA);R.a=0}1<this.m_count&&(l=l.metric,Q=this.GetMetric(),Q<.5*l||2*l<Q||Q<Number.MIN_VALUE)&&(this.m_count=0);0==this.m_count&&(R=M[0],R.indexA=0,R.indexB=0,Q=q.GetVertex(0),Y=B.GetVertex(0),R.wA=e.MulX(t,Q),R.wB=e.MulX(H,Y),R.w=e.SubtractVV(R.wB,R.wA),this.m_count=1)};y.prototype.WriteCache=function(l){l.metric=this.GetMetric();l.count=Box2D$$module$js$box2d$Box2D.parseUInt(this.m_count);
for(var q=this.m_vertices,t=0;t<this.m_count;t++)l.indexA[t]=Box2D$$module$js$box2d$Box2D.parseUInt(q[t].indexA),l.indexB[t]=Box2D$$module$js$box2d$Box2D.parseUInt(q[t].indexB)};y.prototype.GetSearchDirection=function(){switch(this.m_count){case 1:return this.m_v1.w.GetNegative();case 2:var l=e.SubtractVV(this.m_v2.w,this.m_v1.w);return 0<e.CrossVV(l,this.m_v1.w.GetNegative())?e.CrossFV(1,l):e.CrossVF(l,1);default:return d.b2Assert(!1),new g}};y.prototype.GetClosestPoint=function(){switch(this.m_count){case 0:return d.b2Assert(!1),
new g;case 1:return this.m_v1.w;case 2:return new g(this.m_v1.a*this.m_v1.w.x+this.m_v2.a*this.m_v2.w.x,this.m_v1.a*this.m_v1.w.y+this.m_v2.a*this.m_v2.w.y);default:return d.b2Assert(!1),new g}};y.prototype.GetWitnessPoints=function(l,q){switch(this.m_count){case 0:d.b2Assert(!1);break;case 1:l.SetV(this.m_v1.wA);q.SetV(this.m_v1.wB);break;case 2:l.x=this.m_v1.a*this.m_v1.wA.x+this.m_v2.a*this.m_v2.wA.x;l.y=this.m_v1.a*this.m_v1.wA.y+this.m_v2.a*this.m_v2.wA.y;q.x=this.m_v1.a*this.m_v1.wB.x+this.m_v2.a*
this.m_v2.wB.x;q.y=this.m_v1.a*this.m_v1.wB.y+this.m_v2.a*this.m_v2.wB.y;break;case 3:q.x=l.x=this.m_v1.a*this.m_v1.wA.x+this.m_v2.a*this.m_v2.wA.x+this.m_v3.a*this.m_v3.wA.x;q.y=l.y=this.m_v1.a*this.m_v1.wA.y+this.m_v2.a*this.m_v2.wA.y+this.m_v3.a*this.m_v3.wA.y;break;default:d.b2Assert(!1)}};y.prototype.GetMetric=function(){switch(this.m_count){case 0:return d.b2Assert(!1),0;case 1:return 0;case 2:return e.SubtractVV(this.m_v1.w,this.m_v2.w).Length();case 3:return e.CrossVV(e.SubtractVV(this.m_v2.w,
this.m_v1.w),e.SubtractVV(this.m_v3.w,this.m_v1.w));default:return d.b2Assert(!1),0}};y.prototype.Solve2=function(){var l=this.m_v1.w,q=this.m_v2.w,t=e.SubtractVV(q,l);l=-(l.x*t.x+l.y*t.y);0>=l?this.m_count=this.m_v1.a=1:(q=q.x*t.x+q.y*t.y,0>=q?(this.m_count=this.m_v2.a=1,this.m_v1.Set(this.m_v2)):(t=1/(q+l),this.m_v1.a=q*t,this.m_v2.a=l*t,this.m_count=2))};y.prototype.Solve3=function(){var l=this.m_v1.w,q=this.m_v2.w,t=this.m_v3.w,B=e.SubtractVV(q,l),H=e.Dot(l,B),M=e.Dot(q,B);H=-H;var K=e.SubtractVV(t,
l),R=e.Dot(l,K),Q=e.Dot(t,K);R=-R;var Y=e.SubtractVV(t,q),da=e.Dot(q,Y);Y=e.Dot(t,Y);da=-da;K=e.CrossVV(B,K);B=K*e.CrossVV(q,t);t=K*e.CrossVV(t,l);l=K*e.CrossVV(l,q);0>=H&&0>=R?this.m_count=this.m_v1.a=1:0<M&&0<H&&0>=l?(Q=1/(M+H),this.m_v1.a=M*Q,this.m_v2.a=H*Q,this.m_count=2):0<Q&&0<R&&0>=t?(M=1/(Q+R),this.m_v1.a=Q*M,this.m_v3.a=R*M,this.m_count=2,this.m_v2.Set(this.m_v3)):0>=M&&0>=da?(this.m_count=this.m_v2.a=1,this.m_v1.Set(this.m_v2)):0>=Q&&0>=Y?(this.m_count=this.m_v3.a=1,this.m_v1.Set(this.m_v3)):
0<Y&&0<da&&0>=B?(M=1/(Y+da),this.m_v2.a=Y*M,this.m_v3.a=da*M,this.m_count=2,this.m_v1.Set(this.m_v3)):(M=1/(B+t+l),this.m_v1.a=B*M,this.m_v2.a=t*M,this.m_v3.a=l*M,this.m_count=3)};J.b2SimplexCache=function(){this.indexA=new Vector_a2j_Number$$module$js$box2d$Box2D(3);this.indexB=new Vector_a2j_Number$$module$js$box2d$Box2D(3)};C.b2SimplexVertex=function(){};C.prototype.Set=function(l){this.wA.SetV(l.wA);this.wB.SetV(l.wB);this.w.SetV(l.w);this.a=l.a;this.indexA=l.indexA;this.indexB=l.indexB};E.b2TimeOfImpact=
function(){};E.TimeOfImpact=function(l){++E.b2_toiCalls;var q=l.proxyA,t=l.proxyB,B=l.sweepA,H=l.sweepB;d.b2Assert(B.t0==H.t0);d.b2Assert(1-B.t0>Number.MIN_VALUE);var M=q.m_radius+t.m_radius;l=l.tolerance;var K=0,R=0,Q=0;E.s_cache.count=0;for(E.s_distanceInput.useRadii=!1;;){B.GetTransform(E.s_xfA,K);H.GetTransform(E.s_xfB,K);E.s_distanceInput.proxyA=q;E.s_distanceInput.proxyB=t;E.s_distanceInput.transformA=E.s_xfA;E.s_distanceInput.transformB=E.s_xfB;F.Distance(E.s_distanceOutput,E.s_cache,E.s_distanceInput);
if(0>=E.s_distanceOutput.distance){K=1;break}E.s_fcn.Initialize(E.s_cache,q,E.s_xfA,t,E.s_xfB);var Y=E.s_fcn.Evaluate(E.s_xfA,E.s_xfB);if(0>=Y){K=1;break}0==R&&(Q=Y>M?e.Max(M-l,.75*M):e.Max(Y-l,.02*M));if(Y-Q<.5*l){if(0==R){K=1;break}break}var da=K,ca=K,ia=1;B.GetTransform(E.s_xfA,ia);H.GetTransform(E.s_xfB,ia);var na=E.s_fcn.Evaluate(E.s_xfA,E.s_xfB);if(na>=Q){K=1;break}for(var fa=0;;){var la=fa&1?ca+(Q-Y)*(ia-ca)/(na-Y):.5*(ca+ia);B.GetTransform(E.s_xfA,la);H.GetTransform(E.s_xfB,la);var qa=E.s_fcn.Evaluate(E.s_xfA,
E.s_xfB);if(e.Abs(qa-Q)<.025*l){da=la;break}qa>Q?(ca=la,Y=qa):(ia=la,na=qa);++fa;++E.b2_toiRootIters;if(50==fa)break}E.b2_toiMaxRootIters=e.Max(E.b2_toiMaxRootIters,fa);if(da<(1+100*Number.MIN_VALUE)*K)break;K=da;R++;++E.b2_toiIters;if(1E3==R)break}E.b2_toiMaxIters=e.Max(E.b2_toiMaxIters,R);return K};Box2D$$module$js$box2d$Box2D.postDefs.push(function(){Box2D$$module$js$box2d$Box2D.Collision.b2TimeOfImpact.b2_toiCalls=0;Box2D$$module$js$box2d$Box2D.Collision.b2TimeOfImpact.b2_toiIters=0;Box2D$$module$js$box2d$Box2D.Collision.b2TimeOfImpact.b2_toiMaxIters=
0;Box2D$$module$js$box2d$Box2D.Collision.b2TimeOfImpact.b2_toiRootIters=0;Box2D$$module$js$box2d$Box2D.Collision.b2TimeOfImpact.b2_toiMaxRootIters=0;Box2D$$module$js$box2d$Box2D.Collision.b2TimeOfImpact.s_cache=new J;Box2D$$module$js$box2d$Box2D.Collision.b2TimeOfImpact.s_distanceInput=new N;Box2D$$module$js$box2d$Box2D.Collision.b2TimeOfImpact.s_xfA=new h;Box2D$$module$js$box2d$Box2D.Collision.b2TimeOfImpact.s_xfB=new h;Box2D$$module$js$box2d$Box2D.Collision.b2TimeOfImpact.s_fcn=new r;Box2D$$module$js$box2d$Box2D.Collision.b2TimeOfImpact.s_distanceOutput=
new p});I.b2TOIInput=function(){this.proxyA=new A;this.proxyB=new A;this.sweepA=new f;this.sweepB=new f};L.b2WorldManifold=function(){this.m_normal=new g};L.prototype.b2WorldManifold=function(){this.m_points=new Vector$$module$js$box2d$Box2D(d.b2_maxManifoldPoints);for(var l=0;l<d.b2_maxManifoldPoints;l++)this.m_points[l]=new g};L.prototype.Initialize=function(l,q,t,B,H){void 0===t&&(t=0);void 0===H&&(H=0);if(0!=l.m_pointCount)switch(l.m_type){case T.e_circles:var M=q.R;var K=l.m_localPoint;var R=
q.position.x+M.col1.x*K.x+M.col2.x*K.y;q=q.position.y+M.col1.y*K.x+M.col2.y*K.y;M=B.R;K=l.m_points[0].m_localPoint;l=B.position.x+M.col1.x*K.x+M.col2.x*K.y;B=B.position.y+M.col1.y*K.x+M.col2.y*K.y;K=l-R;M=B-q;var Q=K*K+M*M;Q>Number.MIN_VALUE*Number.MIN_VALUE?(Q=Math.sqrt(Q),this.m_normal.x=K/Q,this.m_normal.y=M/Q):(this.m_normal.x=1,this.m_normal.y=0);K=q+t*this.m_normal.y;B-=H*this.m_normal.y;this.m_points[0].x=.5*(R+t*this.m_normal.x+(l-H*this.m_normal.x));this.m_points[0].y=.5*(K+B);break;case T.e_faceA:M=
q.R;K=l.m_localPlaneNormal;Q=M.col1.x*K.x+M.col2.x*K.y;var Y=M.col1.y*K.x+M.col2.y*K.y;M=q.R;K=l.m_localPoint;var da=q.position.x+M.col1.x*K.x+M.col2.x*K.y;var ca=q.position.y+M.col1.y*K.x+M.col2.y*K.y;this.m_normal.x=Q;this.m_normal.y=Y;for(R=0;R<l.m_pointCount;R++){M=B.R;K=l.m_points[R].m_localPoint;var ia=B.position.x+M.col1.x*K.x+M.col2.x*K.y;K=B.position.y+M.col1.y*K.x+M.col2.y*K.y;this.m_points[R].x=ia+.5*(t-(ia-da)*Q-(K-ca)*Y-H)*Q;this.m_points[R].y=K+.5*(t-(ia-da)*Q-(K-ca)*Y-H)*Y}break;case T.e_faceB:for(M=
B.R,K=l.m_localPlaneNormal,Q=M.col1.x*K.x+M.col2.x*K.y,Y=M.col1.y*K.x+M.col2.y*K.y,M=B.R,K=l.m_localPoint,da=B.position.x+M.col1.x*K.x+M.col2.x*K.y,ca=B.position.y+M.col1.y*K.x+M.col2.y*K.y,this.m_normal.x=-Q,this.m_normal.y=-Y,R=0;R<l.m_pointCount;R++)M=q.R,K=l.m_points[R].m_localPoint,ia=q.position.x+M.col1.x*K.x+M.col2.x*K.y,K=q.position.y+M.col1.y*K.x+M.col2.y*K.y,this.m_points[R].x=ia+.5*(H-(ia-da)*Q-(K-ca)*Y-t)*Q,this.m_points[R].y=K+.5*(H-(ia-da)*Q-(K-ca)*Y-t)*Y}};m.ClipVertex=function(){this.v=
new g;this.id=new x};m.prototype.Set=function(l){this.v.SetV(l.v);this.id.Set(l.id)};u.Features=function(){};Object.defineProperty(u.prototype,"referenceEdge",{enumerable:!1,configurable:!0,get:function(){return this._referenceEdge}});Object.defineProperty(u.prototype,"referenceEdge",{enumerable:!1,configurable:!0,set:function(l){void 0===l&&(l=0);this._referenceEdge=l;this._m_id._key=this._m_id._key&4294967040|this._referenceEdge&255}});Object.defineProperty(u.prototype,"incidentEdge",{enumerable:!1,
configurable:!0,get:function(){return this._incidentEdge}});Object.defineProperty(u.prototype,"incidentEdge",{enumerable:!1,configurable:!0,set:function(l){void 0===l&&(l=0);this._incidentEdge=l;this._m_id._key=this._m_id._key&4294902015|this._incidentEdge<<8&65280}});Object.defineProperty(u.prototype,"incidentVertex",{enumerable:!1,configurable:!0,get:function(){return this._incidentVertex}});Object.defineProperty(u.prototype,"incidentVertex",{enumerable:!1,configurable:!0,set:function(l){void 0===
l&&(l=0);this._incidentVertex=l;this._m_id._key=this._m_id._key&4278255615|this._incidentVertex<<16&16711680}});Object.defineProperty(u.prototype,"flip",{enumerable:!1,configurable:!0,get:function(){return this._flip}});Object.defineProperty(u.prototype,"flip",{enumerable:!1,configurable:!0,set:function(l){void 0===l&&(l=0);this._flip=l;this._m_id._key=this._m_id._key&16777215|this._flip<<24&4278190080}})})();
(function(){var a=Box2D$$module$js$box2d$Box2D.Common.b2Settings,b=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2CircleShape,c=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2EdgeChainDef,d=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2EdgeShape,e=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2MassData,f=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2PolygonShape,h=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2Shape,g=Box2D$$module$js$box2d$Box2D.Common.Math.b2Mat22,k=Box2D$$module$js$box2d$Box2D.Common.Math.b2Math,
n=Box2D$$module$js$box2d$Box2D.Common.Math.b2Transform,w=Box2D$$module$js$box2d$Box2D.Common.Math.b2Vec2,v=Box2D$$module$js$box2d$Box2D.Collision.b2Distance,x=Box2D$$module$js$box2d$Box2D.Collision.b2DistanceInput,z=Box2D$$module$js$box2d$Box2D.Collision.b2DistanceOutput,F=Box2D$$module$js$box2d$Box2D.Collision.b2DistanceProxy,N=Box2D$$module$js$box2d$Box2D.Collision.b2SimplexCache;Box2D$$module$js$box2d$Box2D.inherit(b,Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2Shape);b.prototype.__super=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2Shape.prototype;
b.b2CircleShape=function(){Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2Shape.b2Shape.apply(this,arguments);this.m_p=new w};b.prototype.Copy=function(){var p=new b;p.Set(this);return p};b.prototype.Set=function(p){this.__super.Set.call(this,p);Box2D$$module$js$box2d$Box2D.is(p,b)&&this.m_p.SetV((p instanceof b?p:null).m_p)};b.prototype.TestPoint=function(p,A){var G=p.R,O=p.position.x+(G.col1.x*this.m_p.x+G.col2.x*this.m_p.y);p=p.position.y+(G.col1.y*this.m_p.x+G.col2.y*this.m_p.y);O=A.x-O;p=A.y-
p;return O*O+p*p<=this.m_radius*this.m_radius};b.prototype.RayCast=function(p,A,G){var O=G.R,P=A.p1.x-(G.position.x+(O.col1.x*this.m_p.x+O.col2.x*this.m_p.y));G=A.p1.y-(G.position.y+(O.col1.y*this.m_p.x+O.col2.y*this.m_p.y));O=A.p2.x-A.p1.x;var S=A.p2.y-A.p1.y,T=P*O+G*S,W=O*O+S*S,X=T*T-W*(P*P+G*G-this.m_radius*this.m_radius);if(0>X||W<Number.MIN_VALUE)return!1;T=-(T+Math.sqrt(X));return 0<=T&&T<=A.maxFraction*W?(T/=W,p.fraction=T,p.normal.x=P+T*O,p.normal.y=G+T*S,p.normal.Normalize(),!0):!1};b.prototype.ComputeAABB=
function(p,A){var G=A.R,O=A.position.x+(G.col1.x*this.m_p.x+G.col2.x*this.m_p.y);A=A.position.y+(G.col1.y*this.m_p.x+G.col2.y*this.m_p.y);p.lowerBound.Set(O-this.m_radius,A-this.m_radius);p.upperBound.Set(O+this.m_radius,A+this.m_radius)};b.prototype.ComputeMass=function(p,A){void 0===A&&(A=0);p.mass=A*a.b2_pi*this.m_radius*this.m_radius;p.center.SetV(this.m_p);p.I=p.mass*(.5*this.m_radius*this.m_radius+(this.m_p.x*this.m_p.x+this.m_p.y*this.m_p.y))};b.prototype.ComputeSubmergedArea=function(p,A,
G,O){void 0===A&&(A=0);G=k.MulX(G,this.m_p);var P=-(k.Dot(p,G)-A);if(P<-this.m_radius+Number.MIN_VALUE)return 0;if(P>this.m_radius)return O.SetV(G),Math.PI*this.m_radius*this.m_radius;A=this.m_radius*this.m_radius;var S=P*P;P=A*(Math.asin(P/this.m_radius)+Math.PI/2)+P*Math.sqrt(A-S);A=-2/3*Math.pow(A-S,1.5)/P;O.x=G.x+p.x*A;O.y=G.y+p.y*A;return P};b.prototype.GetLocalPosition=function(){return this.m_p};b.prototype.SetLocalPosition=function(p){this.m_p.SetV(p)};b.prototype.GetRadius=function(){return this.m_radius};
b.prototype.SetRadius=function(p){void 0===p&&(p=0);this.m_radius=p};b.prototype.b2CircleShape=function(p){void 0===p&&(p=0);this.__super.b2Shape.call(this);this.m_type=h.e_circleShape;this.m_radius=p};c.b2EdgeChainDef=function(){};c.prototype.b2EdgeChainDef=function(){this.vertexCount=0;this.isALoop=!0;this.vertices=[]};Box2D$$module$js$box2d$Box2D.inherit(d,Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2Shape);d.prototype.__super=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2Shape.prototype;
d.b2EdgeShape=function(){Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2Shape.b2Shape.apply(this,arguments);this.s_supportVec=new w;this.m_v1=new w;this.m_v2=new w;this.m_coreV1=new w;this.m_coreV2=new w;this.m_normal=new w;this.m_direction=new w;this.m_cornerDir1=new w;this.m_cornerDir2=new w};d.prototype.TestPoint=function(p,A){return!1};d.prototype.RayCast=function(p,A,G){var O=A.p2.x-A.p1.x,P=A.p2.y-A.p1.y;var S=G.R;var T=G.position.x+(S.col1.x*this.m_v1.x+S.col2.x*this.m_v1.y),W=G.position.y+
(S.col1.y*this.m_v1.x+S.col2.y*this.m_v1.y),X=G.position.y+(S.col1.y*this.m_v2.x+S.col2.y*this.m_v2.y)-W;G=-(G.position.x+(S.col1.x*this.m_v2.x+S.col2.x*this.m_v2.y)-T);S=100*Number.MIN_VALUE;var U=-(O*X+P*G);if(U>S){T=A.p1.x-T;var Z=A.p1.y-W;W=T*X+Z*G;if(0<=W&&W<=A.maxFraction*U&&(A=-O*Z+P*T,-S*U<=A&&A<=U*(1+S)))return p.fraction=W/U,A=Math.sqrt(X*X+G*G),p.normal.x=X/A,p.normal.y=G/A,!0}return!1};d.prototype.ComputeAABB=function(p,A){var G=A.R,O=A.position.x+(G.col1.x*this.m_v1.x+G.col2.x*this.m_v1.y),
P=A.position.y+(G.col1.y*this.m_v1.x+G.col2.y*this.m_v1.y),S=A.position.x+(G.col1.x*this.m_v2.x+G.col2.x*this.m_v2.y);A=A.position.y+(G.col1.y*this.m_v2.x+G.col2.y*this.m_v2.y);O<S?(p.lowerBound.x=O,p.upperBound.x=S):(p.lowerBound.x=S,p.upperBound.x=O);P<A?(p.lowerBound.y=P,p.upperBound.y=A):(p.lowerBound.y=A,p.upperBound.y=P)};d.prototype.ComputeMass=function(p,A){p.mass=0;p.center.SetV(this.m_v1);p.I=0};d.prototype.ComputeSubmergedArea=function(p,A,G,O){void 0===A&&(A=0);var P=new w(p.x*A,p.y*A),
S=k.MulX(G,this.m_v1);G=k.MulX(G,this.m_v2);var T=k.Dot(p,S)-A;p=k.Dot(p,G)-A;if(0<T){if(0<p)return 0;S.x=-p/(T-p)*S.x+T/(T-p)*G.x;S.y=-p/(T-p)*S.y+T/(T-p)*G.y}else 0<p&&(G.x=-p/(T-p)*S.x+T/(T-p)*G.x,G.y=-p/(T-p)*S.y+T/(T-p)*G.y);O.x=(P.x+S.x+G.x)/3;O.y=(P.y+S.y+G.y)/3;return.5*((S.x-P.x)*(G.y-P.y)-(S.y-P.y)*(G.x-P.x))};d.prototype.GetLength=function(){return this.m_length};d.prototype.GetVertex1=function(){return this.m_v1};d.prototype.GetVertex2=function(){return this.m_v2};d.prototype.GetCoreVertex1=
function(){return this.m_coreV1};d.prototype.GetCoreVertex2=function(){return this.m_coreV2};d.prototype.GetNormalVector=function(){return this.m_normal};d.prototype.GetDirectionVector=function(){return this.m_direction};d.prototype.GetCorner1Vector=function(){return this.m_cornerDir1};d.prototype.GetCorner2Vector=function(){return this.m_cornerDir2};d.prototype.Corner1IsConvex=function(){return this.m_cornerConvex1};d.prototype.Corner2IsConvex=function(){return this.m_cornerConvex2};d.prototype.GetFirstVertex=
function(p){var A=p.R;return new w(p.position.x+(A.col1.x*this.m_coreV1.x+A.col2.x*this.m_coreV1.y),p.position.y+(A.col1.y*this.m_coreV1.x+A.col2.y*this.m_coreV1.y))};d.prototype.GetNextEdge=function(){return this.m_nextEdge};d.prototype.GetPrevEdge=function(){return this.m_prevEdge};d.prototype.Support=function(p,A,G){void 0===A&&(A=0);void 0===G&&(G=0);var O=p.R,P=p.position.x+(O.col1.x*this.m_coreV1.x+O.col2.x*this.m_coreV1.y),S=p.position.y+(O.col1.y*this.m_coreV1.x+O.col2.y*this.m_coreV1.y),
T=p.position.x+(O.col1.x*this.m_coreV2.x+O.col2.x*this.m_coreV2.y);p=p.position.y+(O.col1.y*this.m_coreV2.x+O.col2.y*this.m_coreV2.y);P*A+S*G>T*A+p*G?(this.s_supportVec.x=P,this.s_supportVec.y=S):(this.s_supportVec.x=T,this.s_supportVec.y=p);return this.s_supportVec};d.prototype.b2EdgeShape=function(p,A){this.__super.b2Shape.call(this);this.m_type=h.e_edgeShape;this.m_nextEdge=this.m_prevEdge=null;this.m_v1=p;this.m_v2=A;this.m_direction.Set(this.m_v2.x-this.m_v1.x,this.m_v2.y-this.m_v1.y);this.m_length=
this.m_direction.Normalize();this.m_normal.Set(this.m_direction.y,-this.m_direction.x);this.m_coreV1.Set(-a.b2_toiSlop*(this.m_normal.x-this.m_direction.x)+this.m_v1.x,-a.b2_toiSlop*(this.m_normal.y-this.m_direction.y)+this.m_v1.y);this.m_coreV2.Set(-a.b2_toiSlop*(this.m_normal.x+this.m_direction.x)+this.m_v2.x,-a.b2_toiSlop*(this.m_normal.y+this.m_direction.y)+this.m_v2.y);this.m_cornerDir1=this.m_normal;this.m_cornerDir2.Set(-this.m_normal.x,-this.m_normal.y)};d.prototype.SetPrevEdge=function(p,
A,G,O){this.m_prevEdge=p;this.m_coreV1=A;this.m_cornerDir1=G;this.m_cornerConvex1=O};d.prototype.SetNextEdge=function(p,A,G,O){this.m_nextEdge=p;this.m_coreV2=A;this.m_cornerDir2=G;this.m_cornerConvex2=O};e.b2MassData=function(){this.mass=0;this.center=new w(0,0);this.I=0};Box2D$$module$js$box2d$Box2D.inherit(f,Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2Shape);f.prototype.__super=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2Shape.prototype;f.b2PolygonShape=function(){Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2Shape.b2Shape.apply(this,
arguments)};f.prototype.Copy=function(){var p=new f;p.Set(this);return p};f.prototype.Set=function(p){this.__super.Set.call(this,p);if(Box2D$$module$js$box2d$Box2D.is(p,f)){p=p instanceof f?p:null;this.m_centroid.SetV(p.m_centroid);this.m_vertexCount=p.m_vertexCount;this.Reserve(this.m_vertexCount);for(var A=0;A<this.m_vertexCount;A++)this.m_vertices[A].SetV(p.m_vertices[A]),this.m_normals[A].SetV(p.m_normals[A])}};f.prototype.SetAsArray=function(p,A){void 0===A&&(A=0);var G=new Vector$$module$js$box2d$Box2D,
O;for(O=0;O<p.length;++O){var P=p[O];G.push(P)}this.SetAsVector(G,A)};f.AsArray=function(p,A){void 0===A&&(A=0);var G=new f;G.SetAsArray(p,A);return G};f.prototype.SetAsVector=function(p,A){void 0===A&&(A=0);0==A&&(A=p.length);a.b2Assert(2<=A);this.m_vertexCount=A;this.Reserve(A);for(A=0;A<this.m_vertexCount;A++)this.m_vertices[A].SetV(p[A]);for(A=0;A<this.m_vertexCount;++A)p=k.SubtractVV(this.m_vertices[A+1<this.m_vertexCount?A+1:0],this.m_vertices[A]),a.b2Assert(p.LengthSquared()>Number.MIN_VALUE),
this.m_normals[A].SetV(k.CrossVF(p,1)),this.m_normals[A].Normalize();this.m_centroid=f.ComputeCentroid(this.m_vertices,this.m_vertexCount)};f.AsVector=function(p,A){void 0===A&&(A=0);var G=new f;G.SetAsVector(p,A);return G};f.prototype.SetAsBox=function(p,A){void 0===p&&(p=0);void 0===A&&(A=0);this.m_vertexCount=4;this.Reserve(4);this.m_vertices[0].Set(-p,-A);this.m_vertices[1].Set(p,-A);this.m_vertices[2].Set(p,A);this.m_vertices[3].Set(-p,A);this.m_normals[0].Set(0,-1);this.m_normals[1].Set(1,0);
this.m_normals[2].Set(0,1);this.m_normals[3].Set(-1,0);this.m_centroid.SetZero()};f.AsBox=function(p,A){void 0===p&&(p=0);void 0===A&&(A=0);var G=new f;G.SetAsBox(p,A);return G};f.prototype.SetAsOrientedBox=function(p,A,G,O){void 0===p&&(p=0);void 0===A&&(A=0);void 0===G&&(G=null);void 0===O&&(O=0);this.m_vertexCount=4;this.Reserve(4);this.m_vertices[0].Set(-p,-A);this.m_vertices[1].Set(p,-A);this.m_vertices[2].Set(p,A);this.m_vertices[3].Set(-p,A);this.m_normals[0].Set(0,-1);this.m_normals[1].Set(1,
0);this.m_normals[2].Set(0,1);this.m_normals[3].Set(-1,0);this.m_centroid=G;p=new n;p.position=G;p.R.Set(O);for(G=0;G<this.m_vertexCount;++G)this.m_vertices[G]=k.MulX(p,this.m_vertices[G]),this.m_normals[G]=k.MulMV(p.R,this.m_normals[G])};f.AsOrientedBox=function(p,A,G,O){void 0===p&&(p=0);void 0===A&&(A=0);void 0===G&&(G=null);void 0===O&&(O=0);var P=new f;P.SetAsOrientedBox(p,A,G,O);return P};f.prototype.SetAsEdge=function(p,A){this.m_vertexCount=2;this.Reserve(2);this.m_vertices[0].SetV(p);this.m_vertices[1].SetV(A);
this.m_centroid.x=.5*(p.x+A.x);this.m_centroid.y=.5*(p.y+A.y);this.m_normals[0]=k.CrossVF(k.SubtractVV(A,p),1);this.m_normals[0].Normalize();this.m_normals[1].x=-this.m_normals[0].x;this.m_normals[1].y=-this.m_normals[0].y};f.AsEdge=function(p,A){var G=new f;G.SetAsEdge(p,A);return G};f.prototype.TestPoint=function(p,A){var G=p.R;var O=A.x-p.position.x;p=A.y-p.position.y;A=O*G.col1.x+p*G.col1.y;for(var P=O*G.col2.x+p*G.col2.y,S=0;S<this.m_vertexCount;++S)if(G=this.m_vertices[S],O=A-G.x,p=P-G.y,G=
this.m_normals[S],0<G.x*O+G.y*p)return!1;return!0};f.prototype.RayCast=function(p,A,G){var O=0,P=A.maxFraction;var S=A.p1.x-G.position.x;var T=A.p1.y-G.position.y;var W=G.R;var X=S*W.col1.x+T*W.col1.y,U=S*W.col2.x+T*W.col2.y;S=A.p2.x-G.position.x;T=A.p2.y-G.position.y;W=G.R;A=S*W.col1.x+T*W.col1.y-X;W=S*W.col2.x+T*W.col2.y-U;for(var Z=-1,aa=0;aa<this.m_vertexCount;++aa){var r=this.m_vertices[aa];S=r.x-X;T=r.y-U;r=this.m_normals[aa];S=r.x*S+r.y*T;T=r.x*A+r.y*W;if(0==T){if(0>S)return!1}else 0>T&&S<
O*T?(O=S/T,Z=aa):0<T&&S<P*T&&(P=S/T);if(P<O-Number.MIN_VALUE)return!1}return 0<=Z?(p.fraction=O,W=G.R,r=this.m_normals[Z],p.normal.x=W.col1.x*r.x+W.col2.x*r.y,p.normal.y=W.col1.y*r.x+W.col2.y*r.y,!0):!1};f.prototype.ComputeAABB=function(p,A){for(var G=A.R,O=this.m_vertices[0],P=A.position.x+(G.col1.x*O.x+G.col2.x*O.y),S=A.position.y+(G.col1.y*O.x+G.col2.y*O.y),T=P,W=S,X=1;X<this.m_vertexCount;++X){O=this.m_vertices[X];var U=A.position.x+(G.col1.x*O.x+G.col2.x*O.y);O=A.position.y+(G.col1.y*O.x+G.col2.y*
O.y);P=P<U?P:U;S=S<O?S:O;T=T>U?T:U;W=W>O?W:O}p.lowerBound.x=P-this.m_radius;p.lowerBound.y=S-this.m_radius;p.upperBound.x=T+this.m_radius;p.upperBound.y=W+this.m_radius};f.prototype.ComputeMass=function(p,A){void 0===A&&(A=0);if(2==this.m_vertexCount)p.center.x=.5*(this.m_vertices[0].x+this.m_vertices[1].x),p.center.y=.5*(this.m_vertices[0].y+this.m_vertices[1].y),p.mass=0,p.I=0;else{for(var G=0,O=0,P=0,S=0,T=1/3,W=0;W<this.m_vertexCount;++W){var X=this.m_vertices[W],U=W+1<this.m_vertexCount?this.m_vertices[W+
1]:this.m_vertices[0],Z=X.x-0,aa=X.y-0,r=U.x-0,y=U.y-0,J=Z*y-aa*r,C=.5*J;P+=C;G+=C*T*(0+X.x+U.x);O+=C*T*(0+X.y+U.y);X=Z;S+=J*(T*(.25*(X*X+r*X+r*r)+(0*X+0*r))+T*(.25*(aa*aa+y*aa+y*y)+(0*aa+0*y)))}p.mass=A*P;p.center.Set(1/P*G,1/P*O);p.I=A*S}};f.prototype.ComputeSubmergedArea=function(p,A,G,O){void 0===A&&(A=0);var P=k.MulTMV(G.R,p),S=A-k.Dot(p,G.position),T=new Vector_a2j_Number$$module$js$box2d$Box2D,W=0,X=-1;A=-1;var U=!1;for(p=0;p<this.m_vertexCount;++p){T[p]=k.Dot(P,this.m_vertices[p])-S;var Z=
T[p]<-Number.MIN_VALUE;0<p&&(Z?U||(X=p-1,W++):U&&(A=p-1,W++));U=Z}switch(W){case 0:return U?(p=new e,this.ComputeMass(p,1),O.SetV(k.MulX(G,p.center)),p.mass):0;case 1:-1==X?X=this.m_vertexCount-1:A=this.m_vertexCount-1}p=(X+1)%this.m_vertexCount;P=(A+1)%this.m_vertexCount;S=(0-T[X])/(T[p]-T[X]);T=(0-T[A])/(T[P]-T[A]);X=new w(this.m_vertices[X].x*(1-S)+this.m_vertices[p].x*S,this.m_vertices[X].y*(1-S)+this.m_vertices[p].y*S);A=new w(this.m_vertices[A].x*(1-T)+this.m_vertices[P].x*T,this.m_vertices[A].y*
(1-T)+this.m_vertices[P].y*T);T=0;S=new w;for(W=this.m_vertices[p];p!=P;)p=(p+1)%this.m_vertexCount,U=p==P?A:this.m_vertices[p],Z=.5*((W.x-X.x)*(U.y-X.y)-(W.y-X.y)*(U.x-X.x)),T+=Z,S.x+=Z*(X.x+W.x+U.x)/3,S.y+=Z*(X.y+W.y+U.y)/3,W=U;S.Multiply(1/T);O.SetV(k.MulX(G,S));return T};f.prototype.GetVertexCount=function(){return this.m_vertexCount};f.prototype.GetVertices=function(){return this.m_vertices};f.prototype.GetNormals=function(){return this.m_normals};f.prototype.GetSupport=function(p){for(var A=
0,G=this.m_vertices[0].x*p.x+this.m_vertices[0].y*p.y,O=1;O<this.m_vertexCount;++O){var P=this.m_vertices[O].x*p.x+this.m_vertices[O].y*p.y;P>G&&(A=O,G=P)}return A};f.prototype.GetSupportVertex=function(p){for(var A=0,G=this.m_vertices[0].x*p.x+this.m_vertices[0].y*p.y,O=1;O<this.m_vertexCount;++O){var P=this.m_vertices[O].x*p.x+this.m_vertices[O].y*p.y;P>G&&(A=O,G=P)}return this.m_vertices[A]};f.prototype.Validate=function(){return!1};f.prototype.b2PolygonShape=function(){this.__super.b2Shape.call(this);
this.m_type=h.e_polygonShape;this.m_centroid=new w;this.m_vertices=new Vector$$module$js$box2d$Box2D;this.m_normals=new Vector$$module$js$box2d$Box2D};f.prototype.Reserve=function(p){void 0===p&&(p=0);for(var A=this.m_vertices.length;A<p;A++)this.m_vertices[A]=new w,this.m_normals[A]=new w};f.ComputeCentroid=function(p,A){void 0===A&&(A=0);for(var G=new w,O=0,P=1/3,S=0;S<A;++S){var T=p[S],W=S+1<A?p[S+1]:p[0],X=.5*((T.x-0)*(W.y-0)-(T.y-0)*(W.x-0));O+=X;G.x+=X*P*(0+T.x+W.x);G.y+=X*P*(0+T.y+W.y)}G.x*=
1/O;G.y*=1/O;return G};f.ComputeOBB=function(p,A,G){void 0===G&&(G=0);var O,P=new Vector$$module$js$box2d$Box2D(G+1);for(O=0;O<G;++O)P[O]=A[O];P[G]=P[0];A=Number.MAX_VALUE;for(O=1;O<=G;++O){var S=P[O-1],T=P[O].x-S.x,W=P[O].y-S.y,X=Math.sqrt(T*T+W*W);T/=X;W/=X;for(var U=-W,Z=T,aa=X=Number.MAX_VALUE,r=-Number.MAX_VALUE,y=-Number.MAX_VALUE,J=0;J<G;++J){var C=P[J].x-S.x,E=P[J].y-S.y,I=T*C+W*E;C=U*C+Z*E;I<X&&(X=I);C<aa&&(aa=C);I>r&&(r=I);C>y&&(y=C)}J=(r-X)*(y-aa);J<.95*A&&(A=J,p.R.col1.x=T,p.R.col1.y=
W,p.R.col2.x=U,p.R.col2.y=Z,T=.5*(X+r),W=.5*(aa+y),U=p.R,p.center.x=S.x+(U.col1.x*T+U.col2.x*W),p.center.y=S.y+(U.col1.y*T+U.col2.y*W),p.extents.x=.5*(r-X),p.extents.y=.5*(y-aa))}};Box2D$$module$js$box2d$Box2D.postDefs.push(function(){Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2PolygonShape.s_mat=new g});h.b2Shape=function(){};h.prototype.Copy=function(){return null};h.prototype.Set=function(p){this.m_radius=p.m_radius};h.prototype.GetType=function(){return this.m_type};h.prototype.TestPoint=
function(p,A){return!1};h.prototype.RayCast=function(p,A,G){return!1};h.prototype.ComputeAABB=function(p,A){};h.prototype.ComputeMass=function(p,A){};h.prototype.ComputeSubmergedArea=function(p,A,G,O){return 0};h.TestOverlap=function(p,A,G,O){var P=new x;P.proxyA=new F;P.proxyA.Set(p);P.proxyB=new F;P.proxyB.Set(G);P.transformA=A;P.transformB=O;P.useRadii=!0;p=new N;p.count=0;A=new z;v.Distance(A,p,P);return A.distance<10*Number.MIN_VALUE};h.prototype.b2Shape=function(){this.m_type=h.e_unknownShape;
this.m_radius=a.b2_linearSlop};Box2D$$module$js$box2d$Box2D.postDefs.push(function(){Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2Shape.e_unknownShape=-1;Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2Shape.e_circleShape=0;Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2Shape.e_polygonShape=1;Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2Shape.e_edgeShape=2;Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2Shape.e_shapeTypeCount=3;Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2Shape.e_hitCollide=
1;Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2Shape.e_missCollide=0;Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2Shape.e_startsInsideCollide=-1})})();
(function(){var a=Box2D$$module$js$box2d$Box2D.Common.b2Color,b=Box2D$$module$js$box2d$Box2D.Common.b2Settings,c=Box2D$$module$js$box2d$Box2D.Common.Math.b2Math;a.b2Color=function(){this._b=this._g=this._r=0};a.prototype.b2Color=function(d,e,f){void 0===d&&(d=0);void 0===e&&(e=0);void 0===f&&(f=0);this._r=Box2D$$module$js$box2d$Box2D.parseUInt(255*c.Clamp(d,0,1));this._g=Box2D$$module$js$box2d$Box2D.parseUInt(255*c.Clamp(e,0,1));this._b=Box2D$$module$js$box2d$Box2D.parseUInt(255*c.Clamp(f,0,1))};
a.prototype.Set=function(d,e,f){void 0===d&&(d=0);void 0===e&&(e=0);void 0===f&&(f=0);this._r=Box2D$$module$js$box2d$Box2D.parseUInt(255*c.Clamp(d,0,1));this._g=Box2D$$module$js$box2d$Box2D.parseUInt(255*c.Clamp(e,0,1));this._b=Box2D$$module$js$box2d$Box2D.parseUInt(255*c.Clamp(f,0,1))};Object.defineProperty(a.prototype,"r",{enumerable:!1,configurable:!0,set:function(d){void 0===d&&(d=0);this._r=Box2D$$module$js$box2d$Box2D.parseUInt(255*c.Clamp(d,0,1))}});Object.defineProperty(a.prototype,"g",{enumerable:!1,
configurable:!0,set:function(d){void 0===d&&(d=0);this._g=Box2D$$module$js$box2d$Box2D.parseUInt(255*c.Clamp(d,0,1))}});Object.defineProperty(a.prototype,"b",{enumerable:!1,configurable:!0,set:function(d){void 0===d&&(d=0);this._b=Box2D$$module$js$box2d$Box2D.parseUInt(255*c.Clamp(d,0,1))}});Object.defineProperty(a.prototype,"color",{enumerable:!1,configurable:!0,get:function(){return this._r<<16|this._g<<8|this._b}});b.b2Settings=function(){};b.b2MixFriction=function(d,e){void 0===d&&(d=0);void 0===
e&&(e=0);return Math.sqrt(d*e)};b.b2MixRestitution=function(d,e){void 0===d&&(d=0);void 0===e&&(e=0);return d>e?d:e};b.b2Assert=function(d){if(!d)throw"Assertion Failed";};Box2D$$module$js$box2d$Box2D.postDefs.push(function(){Box2D$$module$js$box2d$Box2D.Common.b2Settings.VERSION="2.1alpha";Box2D$$module$js$box2d$Box2D.Common.b2Settings.USHRT_MAX=65535;Box2D$$module$js$box2d$Box2D.Common.b2Settings.b2_pi=Math.PI;Box2D$$module$js$box2d$Box2D.Common.b2Settings.b2_maxManifoldPoints=2;Box2D$$module$js$box2d$Box2D.Common.b2Settings.b2_aabbExtension=
.1;Box2D$$module$js$box2d$Box2D.Common.b2Settings.b2_aabbMultiplier=2;Box2D$$module$js$box2d$Box2D.Common.b2Settings.b2_polygonRadius=2*b.b2_linearSlop;Box2D$$module$js$box2d$Box2D.Common.b2Settings.b2_linearSlop=.005;Box2D$$module$js$box2d$Box2D.Common.b2Settings.b2_angularSlop=2/180*b.b2_pi;Box2D$$module$js$box2d$Box2D.Common.b2Settings.b2_toiSlop=8*b.b2_linearSlop;Box2D$$module$js$box2d$Box2D.Common.b2Settings.b2_maxTOIContactsPerIsland=32;Box2D$$module$js$box2d$Box2D.Common.b2Settings.b2_maxTOIJointsPerIsland=
32;Box2D$$module$js$box2d$Box2D.Common.b2Settings.b2_velocityThreshold=1;Box2D$$module$js$box2d$Box2D.Common.b2Settings.b2_maxLinearCorrection=.2;Box2D$$module$js$box2d$Box2D.Common.b2Settings.b2_maxAngularCorrection=8/180*b.b2_pi;Box2D$$module$js$box2d$Box2D.Common.b2Settings.b2_maxTranslation=2;Box2D$$module$js$box2d$Box2D.Common.b2Settings.b2_maxTranslationSquared=b.b2_maxTranslation*b.b2_maxTranslation;Box2D$$module$js$box2d$Box2D.Common.b2Settings.b2_maxRotation=.5*b.b2_pi;Box2D$$module$js$box2d$Box2D.Common.b2Settings.b2_maxRotationSquared=
b.b2_maxRotation*b.b2_maxRotation;Box2D$$module$js$box2d$Box2D.Common.b2Settings.b2_contactBaumgarte=.2;Box2D$$module$js$box2d$Box2D.Common.b2Settings.b2_timeToSleep=.5;Box2D$$module$js$box2d$Box2D.Common.b2Settings.b2_linearSleepTolerance=.01;Box2D$$module$js$box2d$Box2D.Common.b2Settings.b2_angularSleepTolerance=2/180*b.b2_pi})})();
(function(){var a=Box2D$$module$js$box2d$Box2D.Common.Math.b2Mat22,b=Box2D$$module$js$box2d$Box2D.Common.Math.b2Mat33,c=Box2D$$module$js$box2d$Box2D.Common.Math.b2Math,d=Box2D$$module$js$box2d$Box2D.Common.Math.b2Sweep,e=Box2D$$module$js$box2d$Box2D.Common.Math.b2Transform,f=Box2D$$module$js$box2d$Box2D.Common.Math.b2Vec2,h=Box2D$$module$js$box2d$Box2D.Common.Math.b2Vec3;a.b2Mat22=function(){this.col1=new f;this.col2=new f};a.prototype.b2Mat22=function(){this.SetIdentity()};a.FromAngle=function(g){void 0===
g&&(g=0);var k=new a;k.Set(g);return k};a.FromVV=function(g,k){var n=new a;n.SetVV(g,k);return n};a.prototype.Set=function(g){void 0===g&&(g=0);var k=Math.cos(g);g=Math.sin(g);this.col1.x=k;this.col2.x=-g;this.col1.y=g;this.col2.y=k};a.prototype.SetVV=function(g,k){this.col1.SetV(g);this.col2.SetV(k)};a.prototype.Copy=function(){var g=new a;g.SetM(this);return g};a.prototype.SetM=function(g){this.col1.SetV(g.col1);this.col2.SetV(g.col2)};a.prototype.AddM=function(g){this.col1.x+=g.col1.x;this.col1.y+=
g.col1.y;this.col2.x+=g.col2.x;this.col2.y+=g.col2.y};a.prototype.SetIdentity=function(){this.col1.x=1;this.col2.x=0;this.col1.y=0;this.col2.y=1};a.prototype.SetZero=function(){this.col1.x=0;this.col2.x=0;this.col1.y=0;this.col2.y=0};a.prototype.GetAngle=function(){return Math.atan2(this.col1.y,this.col1.x)};a.prototype.GetInverse=function(g){var k=this.col1.x,n=this.col2.x,w=this.col1.y,v=this.col2.y,x=k*v-n*w;0!=x&&(x=1/x);g.col1.x=x*v;g.col2.x=-x*n;g.col1.y=-x*w;g.col2.y=x*k;return g};a.prototype.Solve=
function(g,k,n){void 0===k&&(k=0);void 0===n&&(n=0);var w=this.col1.x,v=this.col2.x,x=this.col1.y,z=this.col2.y,F=w*z-v*x;0!=F&&(F=1/F);g.x=F*(z*k-v*n);g.y=F*(w*n-x*k);return g};a.prototype.Abs=function(){this.col1.Abs();this.col2.Abs()};b.b2Mat33=function(){this.col1=new h;this.col2=new h;this.col3=new h};b.prototype.b2Mat33=function(g,k,n){void 0===g&&(g=null);void 0===k&&(k=null);void 0===n&&(n=null);g||k||n?(this.col1.SetV(g),this.col2.SetV(k),this.col3.SetV(n)):(this.col1.SetZero(),this.col2.SetZero(),
this.col3.SetZero())};b.prototype.SetVVV=function(g,k,n){this.col1.SetV(g);this.col2.SetV(k);this.col3.SetV(n)};b.prototype.Copy=function(){return new b(this.col1,this.col2,this.col3)};b.prototype.SetM=function(g){this.col1.SetV(g.col1);this.col2.SetV(g.col2);this.col3.SetV(g.col3)};b.prototype.AddM=function(g){this.col1.x+=g.col1.x;this.col1.y+=g.col1.y;this.col1.z+=g.col1.z;this.col2.x+=g.col2.x;this.col2.y+=g.col2.y;this.col2.z+=g.col2.z;this.col3.x+=g.col3.x;this.col3.y+=g.col3.y;this.col3.z+=
g.col3.z};b.prototype.SetIdentity=function(){this.col1.x=1;this.col2.x=0;this.col3.x=0;this.col1.y=0;this.col2.y=1;this.col3.y=0;this.col1.z=0;this.col2.z=0;this.col3.z=1};b.prototype.SetZero=function(){this.col1.x=0;this.col2.x=0;this.col3.x=0;this.col1.y=0;this.col2.y=0;this.col3.y=0;this.col1.z=0;this.col2.z=0;this.col3.z=0};b.prototype.Solve22=function(g,k,n){void 0===k&&(k=0);void 0===n&&(n=0);var w=this.col1.x,v=this.col2.x,x=this.col1.y,z=this.col2.y,F=w*z-v*x;0!=F&&(F=1/F);g.x=F*(z*k-v*n);
g.y=F*(w*n-x*k);return g};b.prototype.Solve33=function(g,k,n,w){void 0===k&&(k=0);void 0===n&&(n=0);void 0===w&&(w=0);var v=this.col1.x,x=this.col1.y,z=this.col1.z,F=this.col2.x,N=this.col2.y,p=this.col2.z,A=this.col3.x,G=this.col3.y,O=this.col3.z,P=v*(N*O-p*G)+x*(p*A-F*O)+z*(F*G-N*A);0!=P&&(P=1/P);g.x=P*(k*(N*O-p*G)+n*(p*A-F*O)+w*(F*G-N*A));g.y=P*(v*(n*O-w*G)+x*(w*A-k*O)+z*(k*G-n*A));g.z=P*(v*(N*w-p*n)+x*(p*k-F*w)+z*(F*n-N*k));return g};c.b2Math=function(){};c.IsValid=function(g){void 0===g&&(g=
0);return isFinite(g)};c.Dot=function(g,k){return g.x*k.x+g.y*k.y};c.CrossVV=function(g,k){return g.x*k.y-g.y*k.x};c.CrossVF=function(g,k){void 0===k&&(k=0);return new f(k*g.y,-k*g.x)};c.CrossFV=function(g,k){void 0===g&&(g=0);return new f(-g*k.y,g*k.x)};c.MulMV=function(g,k){return new f(g.col1.x*k.x+g.col2.x*k.y,g.col1.y*k.x+g.col2.y*k.y)};c.MulTMV=function(g,k){return new f(c.Dot(k,g.col1),c.Dot(k,g.col2))};c.MulX=function(g,k){k=c.MulMV(g.R,k);k.x+=g.position.x;k.y+=g.position.y;return k};c.MulXT=
function(g,k){k=c.SubtractVV(k,g.position);var n=k.x*g.R.col1.x+k.y*g.R.col1.y;k.y=k.x*g.R.col2.x+k.y*g.R.col2.y;k.x=n;return k};c.AddVV=function(g,k){return new f(g.x+k.x,g.y+k.y)};c.SubtractVV=function(g,k){return new f(g.x-k.x,g.y-k.y)};c.Distance=function(g,k){var n=g.x-k.x;g=g.y-k.y;return Math.sqrt(n*n+g*g)};c.DistanceSquared=function(g,k){var n=g.x-k.x;g=g.y-k.y;return n*n+g*g};c.MulFV=function(g,k){void 0===g&&(g=0);return new f(g*k.x,g*k.y)};c.AddMM=function(g,k){return a.FromVV(c.AddVV(g.col1,
k.col1),c.AddVV(g.col2,k.col2))};c.MulMM=function(g,k){return a.FromVV(c.MulMV(g,k.col1),c.MulMV(g,k.col2))};c.MulTMM=function(g,k){var n=new f(c.Dot(g.col1,k.col1),c.Dot(g.col2,k.col1));g=new f(c.Dot(g.col1,k.col2),c.Dot(g.col2,k.col2));return a.FromVV(n,g)};c.Abs=function(g){void 0===g&&(g=0);return 0<g?g:-g};c.AbsV=function(g){return new f(c.Abs(g.x),c.Abs(g.y))};c.AbsM=function(g){return a.FromVV(c.AbsV(g.col1),c.AbsV(g.col2))};c.Min=function(g,k){void 0===g&&(g=0);void 0===k&&(k=0);return g<
k?g:k};c.MinV=function(g,k){return new f(c.Min(g.x,k.x),c.Min(g.y,k.y))};c.Max=function(g,k){void 0===g&&(g=0);void 0===k&&(k=0);return g>k?g:k};c.MaxV=function(g,k){return new f(c.Max(g.x,k.x),c.Max(g.y,k.y))};c.Clamp=function(g,k,n){void 0===g&&(g=0);void 0===k&&(k=0);void 0===n&&(n=0);return g<k?k:g>n?n:g};c.ClampV=function(g,k,n){return c.MaxV(k,c.MinV(g,n))};c.Swap=function(g,k){var n=g[0];g[0]=k[0];k[0]=n};c.Random=function(){return 2*Math.random()-1};c.RandomRange=function(g,k){void 0===g&&
(g=0);void 0===k&&(k=0);return(k-g)*Math.random()+g};c.NextPowerOfTwo=function(g){void 0===g&&(g=0);g|=g>>1&2147483647;g|=g>>2&1073741823;g|=g>>4&268435455;g|=g>>8&16777215;return(g|g>>16&65535)+1};c.IsPowerOfTwo=function(g){void 0===g&&(g=0);return 0<g&&0==(g&g-1)};Box2D$$module$js$box2d$Box2D.postDefs.push(function(){Box2D$$module$js$box2d$Box2D.Common.Math.b2Math.b2Vec2_zero=new f(0,0);Box2D$$module$js$box2d$Box2D.Common.Math.b2Math.b2Mat22_identity=a.FromVV(new f(1,0),new f(0,1));Box2D$$module$js$box2d$Box2D.Common.Math.b2Math.b2Transform_identity=
new e(c.b2Vec2_zero,c.b2Mat22_identity)});d.b2Sweep=function(){this.localCenter=new f;this.c0=new f;this.c=new f};d.prototype.Set=function(g){this.localCenter.SetV(g.localCenter);this.c0.SetV(g.c0);this.c.SetV(g.c);this.a0=g.a0;this.a=g.a;this.t0=g.t0};d.prototype.Copy=function(){var g=new d;g.localCenter.SetV(this.localCenter);g.c0.SetV(this.c0);g.c.SetV(this.c);g.a0=this.a0;g.a=this.a;g.t0=this.t0;return g};d.prototype.GetTransform=function(g,k){void 0===k&&(k=0);g.position.x=(1-k)*this.c0.x+k*
this.c.x;g.position.y=(1-k)*this.c0.y+k*this.c.y;g.R.Set((1-k)*this.a0+k*this.a);k=g.R;g.position.x-=k.col1.x*this.localCenter.x+k.col2.x*this.localCenter.y;g.position.y-=k.col1.y*this.localCenter.x+k.col2.y*this.localCenter.y};d.prototype.Advance=function(g){void 0===g&&(g=0);if(this.t0<g&&1-this.t0>Number.MIN_VALUE){var k=(g-this.t0)/(1-this.t0);this.c0.x=(1-k)*this.c0.x+k*this.c.x;this.c0.y=(1-k)*this.c0.y+k*this.c.y;this.a0=(1-k)*this.a0+k*this.a;this.t0=g}};e.b2Transform=function(){this.position=
new f;this.R=new a};e.prototype.b2Transform=function(g,k){void 0===g&&(g=null);void 0===k&&(k=null);g&&(this.position.SetV(g),this.R.SetM(k))};e.prototype.Initialize=function(g,k){this.position.SetV(g);this.R.SetM(k)};e.prototype.SetIdentity=function(){this.position.SetZero();this.R.SetIdentity()};e.prototype.Set=function(g){this.position.SetV(g.position);this.R.SetM(g.R)};e.prototype.GetAngle=function(){return Math.atan2(this.R.col1.y,this.R.col1.x)};f.b2Vec2=function(){};f.prototype.b2Vec2=function(g,
k){void 0===g&&(g=0);void 0===k&&(k=0);this.x=g;this.y=k};f.prototype.SetZero=function(){this.y=this.x=0};f.prototype.Set=function(g,k){void 0===g&&(g=0);void 0===k&&(k=0);this.x=g;this.y=k};f.prototype.SetV=function(g){this.x=g.x;this.y=g.y};f.prototype.GetNegative=function(){return new f(-this.x,-this.y)};f.prototype.NegativeSelf=function(){this.x=-this.x;this.y=-this.y};f.Make=function(g,k){void 0===g&&(g=0);void 0===k&&(k=0);return new f(g,k)};f.prototype.Copy=function(){return new f(this.x,this.y)};
f.prototype.Add=function(g){this.x+=g.x;this.y+=g.y};f.prototype.Subtract=function(g){this.x-=g.x;this.y-=g.y};f.prototype.Multiply=function(g){void 0===g&&(g=0);this.x*=g;this.y*=g};f.prototype.MulM=function(g){var k=this.x;this.x=g.col1.x*k+g.col2.x*this.y;this.y=g.col1.y*k+g.col2.y*this.y};f.prototype.MulTM=function(g){var k=c.Dot(this,g.col1);this.y=c.Dot(this,g.col2);this.x=k};f.prototype.CrossVF=function(g){void 0===g&&(g=0);var k=this.x;this.x=g*this.y;this.y=-g*k};f.prototype.CrossFV=function(g){void 0===
g&&(g=0);var k=this.x;this.x=-g*this.y;this.y=g*k};f.prototype.MinV=function(g){this.x=this.x<g.x?this.x:g.x;this.y=this.y<g.y?this.y:g.y};f.prototype.MaxV=function(g){this.x=this.x>g.x?this.x:g.x;this.y=this.y>g.y?this.y:g.y};f.prototype.Abs=function(){0>this.x&&(this.x=-this.x);0>this.y&&(this.y=-this.y)};f.prototype.Length=function(){return Math.sqrt(this.x*this.x+this.y*this.y)};f.prototype.LengthSquared=function(){return this.x*this.x+this.y*this.y};f.prototype.Normalize=function(){var g=Math.sqrt(this.x*
this.x+this.y*this.y);if(g<Number.MIN_VALUE)return 0;var k=1/g;this.x*=k;this.y*=k;return g};f.prototype.IsValid=function(){return c.IsValid(this.x)&&c.IsValid(this.y)};h.b2Vec3=function(){};h.prototype.b2Vec3=function(g,k,n){void 0===g&&(g=0);void 0===k&&(k=0);void 0===n&&(n=0);this.x=g;this.y=k;this.z=n};h.prototype.SetZero=function(){this.x=this.y=this.z=0};h.prototype.Set=function(g,k,n){void 0===g&&(g=0);void 0===k&&(k=0);void 0===n&&(n=0);this.x=g;this.y=k;this.z=n};h.prototype.SetV=function(g){this.x=
g.x;this.y=g.y;this.z=g.z};h.prototype.GetNegative=function(){return new h(-this.x,-this.y,-this.z)};h.prototype.NegativeSelf=function(){this.x=-this.x;this.y=-this.y;this.z=-this.z};h.prototype.Copy=function(){return new h(this.x,this.y,this.z)};h.prototype.Add=function(g){this.x+=g.x;this.y+=g.y;this.z+=g.z};h.prototype.Subtract=function(g){this.x-=g.x;this.y-=g.y;this.z-=g.z};h.prototype.Multiply=function(g){void 0===g&&(g=0);this.x*=g;this.y*=g;this.z*=g}})();
(function(){var a=Box2D$$module$js$box2d$Box2D.Common.Math.b2Math,b=Box2D$$module$js$box2d$Box2D.Common.Math.b2Sweep,c=Box2D$$module$js$box2d$Box2D.Common.Math.b2Transform,d=Box2D$$module$js$box2d$Box2D.Common.Math.b2Vec2,e=Box2D$$module$js$box2d$Box2D.Common.b2Color,f=Box2D$$module$js$box2d$Box2D.Common.b2Settings,h=Box2D$$module$js$box2d$Box2D.Collision.b2AABB,g=Box2D$$module$js$box2d$Box2D.Collision.b2ContactPoint,k=Box2D$$module$js$box2d$Box2D.Collision.b2DynamicTreeBroadPhase,n=Box2D$$module$js$box2d$Box2D.Collision.b2RayCastInput,
w=Box2D$$module$js$box2d$Box2D.Collision.b2RayCastOutput,v=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2CircleShape,x=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2EdgeShape,z=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2MassData,F=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2PolygonShape,N=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2Shape,p=Box2D$$module$js$box2d$Box2D.Dynamics.b2Body,A=Box2D$$module$js$box2d$Box2D.Dynamics.b2BodyDef,G=Box2D$$module$js$box2d$Box2D.Dynamics.b2ContactFilter,
O=Box2D$$module$js$box2d$Box2D.Dynamics.b2ContactImpulse,P=Box2D$$module$js$box2d$Box2D.Dynamics.b2ContactListener,S=Box2D$$module$js$box2d$Box2D.Dynamics.b2ContactManager,T=Box2D$$module$js$box2d$Box2D.Dynamics.b2DebugDraw,W=Box2D$$module$js$box2d$Box2D.Dynamics.b2DestructionListener,X=Box2D$$module$js$box2d$Box2D.Dynamics.b2FilterData,U=Box2D$$module$js$box2d$Box2D.Dynamics.b2Fixture,Z=Box2D$$module$js$box2d$Box2D.Dynamics.b2FixtureDef,aa=Box2D$$module$js$box2d$Box2D.Dynamics.b2Island,r=Box2D$$module$js$box2d$Box2D.Dynamics.b2TimeStep,
y=Box2D$$module$js$box2d$Box2D.Dynamics.b2World,J=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact,C=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2ContactFactory,E=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2ContactSolver,I=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint,L=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2PulleyJoint;p.b2Body=function(){this.m_xf=new c;this.m_sweep=new b;this.m_linearVelocity=new d;this.m_force=new d};p.prototype.connectEdges=function(m,u,D){void 0===
D&&(D=0);var l=Math.atan2(u.GetDirectionVector().y,u.GetDirectionVector().x);D=a.MulFV(Math.tan(.5*(l-D)),u.GetDirectionVector());D=a.SubtractVV(D,u.GetNormalVector());D=a.MulFV(f.b2_toiSlop,D);D=a.AddVV(D,u.GetVertex1());var q=a.AddVV(m.GetDirectionVector(),u.GetDirectionVector());q.Normalize();var t=0<a.Dot(m.GetDirectionVector(),u.GetNormalVector());m.SetNextEdge(u,D,q,t);u.SetPrevEdge(m,D,q,t);return l};p.prototype.CreateFixture=function(m){if(1==this.m_world.IsLocked())return null;var u=new U;
u.Create(this,this.m_xf,m);this.m_flags&p.e_activeFlag&&u.CreateProxy(this.m_world.m_contactManager.m_broadPhase,this.m_xf);u.m_next=this.m_fixtureList;this.m_fixtureList=u;++this.m_fixtureCount;u.m_body=this;0<u.m_density&&this.ResetMassData();this.m_world.m_flags|=y.e_newFixture;return u};p.prototype.CreateFixture2=function(m,u){void 0===u&&(u=0);var D=new Z;D.shape=m;D.density=u;return this.CreateFixture(D)};p.prototype.DestroyFixture=function(m){if(1!=this.m_world.IsLocked()){for(var u=this.m_fixtureList,
D=null;null!=u;){if(u==m){D?D.m_next=m.m_next:this.m_fixtureList=m.m_next;break}D=u;u=u.m_next}for(u=this.m_contactList;u;){D=u.contact;u=u.next;var l=D.GetFixtureA(),q=D.GetFixtureB();m!=l&&m!=q||this.m_world.m_contactManager.Destroy(D)}this.m_flags&p.e_activeFlag&&m.DestroyProxy(this.m_world.m_contactManager.m_broadPhase);m.Destroy();m.m_body=null;m.m_next=null;--this.m_fixtureCount;this.ResetMassData()}};p.prototype.SetPositionAndAngle=function(m,u){void 0===u&&(u=0);if(1!=this.m_world.IsLocked()){this.m_xf.R.Set(u);
this.m_xf.position.SetV(m);m=this.m_xf.R;var D=this.m_sweep.localCenter;this.m_sweep.c.x=m.col1.x*D.x+m.col2.x*D.y;this.m_sweep.c.y=m.col1.y*D.x+m.col2.y*D.y;this.m_sweep.c.x+=this.m_xf.position.x;this.m_sweep.c.y+=this.m_xf.position.y;this.m_sweep.c0.SetV(this.m_sweep.c);this.m_sweep.a0=this.m_sweep.a=u;m=this.m_world.m_contactManager.m_broadPhase;for(u=this.m_fixtureList;u;u=u.m_next)u.Synchronize(m,this.m_xf,this.m_xf);this.m_world.m_contactManager.FindNewContacts()}};p.prototype.SetTransform=
function(m){this.SetPositionAndAngle(m.position,m.GetAngle())};p.prototype.GetTransform=function(){return this.m_xf};p.prototype.GetPosition=function(){return this.m_xf.position};p.prototype.SetPosition=function(m){this.SetPositionAndAngle(m,this.GetAngle())};p.prototype.GetAngle=function(){return this.m_sweep.a};p.prototype.SetAngle=function(m){void 0===m&&(m=0);this.SetPositionAndAngle(this.GetPosition(),m)};p.prototype.GetWorldCenter=function(){return this.m_sweep.c};p.prototype.GetLocalCenter=
function(){return this.m_sweep.localCenter};p.prototype.SetLinearVelocity=function(m){this.m_type!=p.b2_staticBody&&this.m_linearVelocity.SetV(m)};p.prototype.GetLinearVelocity=function(){return this.m_linearVelocity};p.prototype.SetAngularVelocity=function(m){void 0===m&&(m=0);this.m_type!=p.b2_staticBody&&(this.m_angularVelocity=m)};p.prototype.GetAngularVelocity=function(){return this.m_angularVelocity};p.prototype.GetDefinition=function(){var m=new A;m.type=this.GetType();m.allowSleep=(this.m_flags&
p.e_allowSleepFlag)==p.e_allowSleepFlag;m.angle=this.GetAngle();m.angularDamping=this.m_angularDamping;m.angularVelocity=this.m_angularVelocity;m.fixedRotation=(this.m_flags&p.e_fixedRotationFlag)==p.e_fixedRotationFlag;m.bullet=(this.m_flags&p.e_bulletFlag)==p.e_bulletFlag;m.awake=(this.m_flags&p.e_awakeFlag)==p.e_awakeFlag;m.linearDamping=this.m_linearDamping;m.linearVelocity.SetV(this.GetLinearVelocity());m.position=this.GetPosition();m.userData=this.GetUserData();return m};p.prototype.ApplyForce=
function(m,u){this.m_type==p.b2_dynamicBody&&(0==this.IsAwake()&&this.SetAwake(!0),this.m_force.x+=m.x,this.m_force.y+=m.y,this.m_torque+=(u.x-this.m_sweep.c.x)*m.y-(u.y-this.m_sweep.c.y)*m.x)};p.prototype.ApplyTorque=function(m){void 0===m&&(m=0);this.m_type==p.b2_dynamicBody&&(0==this.IsAwake()&&this.SetAwake(!0),this.m_torque+=m)};p.prototype.ApplyImpulse=function(m,u){this.m_type==p.b2_dynamicBody&&(0==this.IsAwake()&&this.SetAwake(!0),this.m_linearVelocity.x+=this.m_invMass*m.x,this.m_linearVelocity.y+=
this.m_invMass*m.y,this.m_angularVelocity+=this.m_invI*((u.x-this.m_sweep.c.x)*m.y-(u.y-this.m_sweep.c.y)*m.x))};p.prototype.Split=function(m){for(var u=this.GetLinearVelocity().Copy(),D=this.GetAngularVelocity(),l=this.GetWorldCenter(),q=this.m_world.CreateBody(this.GetDefinition()),t,B=this.m_fixtureList;B;)if(m(B)){var H=B.m_next;t?t.m_next=H:this.m_fixtureList=H;this.m_fixtureCount--;B.m_next=q.m_fixtureList;q.m_fixtureList=B;q.m_fixtureCount++;B.m_body=q;B=H}else t=B,B=B.m_next;this.ResetMassData();
q.ResetMassData();t=this.GetWorldCenter();m=q.GetWorldCenter();t=a.AddVV(u,a.CrossFV(D,a.SubtractVV(t,l)));u=a.AddVV(u,a.CrossFV(D,a.SubtractVV(m,l)));this.SetLinearVelocity(t);q.SetLinearVelocity(u);this.SetAngularVelocity(D);q.SetAngularVelocity(D);this.SynchronizeFixtures();q.SynchronizeFixtures();return q};p.prototype.Merge=function(m){for(var u=m.m_fixtureList;u;){var D=u.m_next;m.m_fixtureCount--;u.m_next=this.m_fixtureList;this.m_fixtureList=u;this.m_fixtureCount++;u.m_body=m;u=D}this.m_fixtureCount=
0;this.GetWorldCenter();m.GetWorldCenter();this.GetLinearVelocity().Copy();m.GetLinearVelocity().Copy();this.GetAngularVelocity();m.GetAngularVelocity();this.ResetMassData();this.SynchronizeFixtures()};p.prototype.GetMass=function(){return this.m_mass};p.prototype.GetInertia=function(){return this.m_I};p.prototype.GetMassData=function(m){m.mass=this.m_mass;m.I=this.m_I;m.center.SetV(this.m_sweep.localCenter)};p.prototype.SetMassData=function(m){f.b2Assert(0==this.m_world.IsLocked());if(1!=this.m_world.IsLocked()&&
this.m_type==p.b2_dynamicBody){this.m_invI=this.m_I=this.m_invMass=0;this.m_mass=m.mass;0>=this.m_mass&&(this.m_mass=1);this.m_invMass=1/this.m_mass;0<m.I&&0==(this.m_flags&p.e_fixedRotationFlag)&&(this.m_I=m.I-this.m_mass*(m.center.x*m.center.x+m.center.y*m.center.y),this.m_invI=1/this.m_I);var u=this.m_sweep.c.Copy();this.m_sweep.localCenter.SetV(m.center);this.m_sweep.c0.SetV(a.MulX(this.m_xf,this.m_sweep.localCenter));this.m_sweep.c.SetV(this.m_sweep.c0);this.m_linearVelocity.x+=this.m_angularVelocity*
-(this.m_sweep.c.y-u.y);this.m_linearVelocity.y+=this.m_angularVelocity*+(this.m_sweep.c.x-u.x)}};p.prototype.ResetMassData=function(){this.m_invI=this.m_I=this.m_invMass=this.m_mass=0;this.m_sweep.localCenter.SetZero();if(this.m_type!=p.b2_staticBody&&this.m_type!=p.b2_kinematicBody){for(var m=d.Make(0,0),u=this.m_fixtureList;u;u=u.m_next)if(0!=u.m_density){var D=u.GetMassData();this.m_mass+=D.mass;m.x+=D.center.x*D.mass;m.y+=D.center.y*D.mass;this.m_I+=D.I}0<this.m_mass?(this.m_invMass=1/this.m_mass,
m.x*=this.m_invMass,m.y*=this.m_invMass):this.m_invMass=this.m_mass=1;0<this.m_I&&0==(this.m_flags&p.e_fixedRotationFlag)?(this.m_I-=this.m_mass*(m.x*m.x+m.y*m.y),this.m_I*=this.m_inertiaScale,f.b2Assert(0<this.m_I),this.m_invI=1/this.m_I):this.m_invI=this.m_I=0;u=this.m_sweep.c.Copy();this.m_sweep.localCenter.SetV(m);this.m_sweep.c0.SetV(a.MulX(this.m_xf,this.m_sweep.localCenter));this.m_sweep.c.SetV(this.m_sweep.c0);this.m_linearVelocity.x+=this.m_angularVelocity*-(this.m_sweep.c.y-u.y);this.m_linearVelocity.y+=
this.m_angularVelocity*+(this.m_sweep.c.x-u.x)}};p.prototype.GetWorldPoint=function(m){var u=this.m_xf.R;m=new d(u.col1.x*m.x+u.col2.x*m.y,u.col1.y*m.x+u.col2.y*m.y);m.x+=this.m_xf.position.x;m.y+=this.m_xf.position.y;return m};p.prototype.GetWorldVector=function(m){return a.MulMV(this.m_xf.R,m)};p.prototype.GetLocalPoint=function(m){return a.MulXT(this.m_xf,m)};p.prototype.GetLocalVector=function(m){return a.MulTMV(this.m_xf.R,m)};p.prototype.GetLinearVelocityFromWorldPoint=function(m){return new d(this.m_linearVelocity.x-
this.m_angularVelocity*(m.y-this.m_sweep.c.y),this.m_linearVelocity.y+this.m_angularVelocity*(m.x-this.m_sweep.c.x))};p.prototype.GetLinearVelocityFromLocalPoint=function(m){var u=this.m_xf.R;m=new d(u.col1.x*m.x+u.col2.x*m.y,u.col1.y*m.x+u.col2.y*m.y);m.x+=this.m_xf.position.x;m.y+=this.m_xf.position.y;return new d(this.m_linearVelocity.x-this.m_angularVelocity*(m.y-this.m_sweep.c.y),this.m_linearVelocity.y+this.m_angularVelocity*(m.x-this.m_sweep.c.x))};p.prototype.GetLinearDamping=function(){return this.m_linearDamping};
p.prototype.SetLinearDamping=function(m){void 0===m&&(m=0);this.m_linearDamping=m};p.prototype.GetAngularDamping=function(){return this.m_angularDamping};p.prototype.SetAngularDamping=function(m){void 0===m&&(m=0);this.m_angularDamping=m};p.prototype.SetType=function(m){void 0===m&&(m=0);if(this.m_type!=m)for(this.m_type=m,this.ResetMassData(),this.m_type==p.b2_staticBody&&(this.m_linearVelocity.SetZero(),this.m_angularVelocity=0),this.SetAwake(!0),this.m_force.SetZero(),this.m_torque=0,m=this.m_contactList;m;m=
m.next)m.contact.FlagForFiltering()};p.prototype.GetType=function(){return this.m_type};p.prototype.SetBullet=function(m){this.m_flags=m?this.m_flags|p.e_bulletFlag:this.m_flags&~p.e_bulletFlag};p.prototype.IsBullet=function(){return(this.m_flags&p.e_bulletFlag)==p.e_bulletFlag};p.prototype.SetSleepingAllowed=function(m){m?this.m_flags|=p.e_allowSleepFlag:(this.m_flags&=~p.e_allowSleepFlag,this.SetAwake(!0))};p.prototype.SetAwake=function(m){m?(this.m_flags|=p.e_awakeFlag,this.m_sleepTime=0):(this.m_flags&=
~p.e_awakeFlag,this.m_sleepTime=0,this.m_linearVelocity.SetZero(),this.m_angularVelocity=0,this.m_force.SetZero(),this.m_torque=0)};p.prototype.IsAwake=function(){return(this.m_flags&p.e_awakeFlag)==p.e_awakeFlag};p.prototype.SetFixedRotation=function(m){this.m_flags=m?this.m_flags|p.e_fixedRotationFlag:this.m_flags&~p.e_fixedRotationFlag;this.ResetMassData()};p.prototype.IsFixedRotation=function(){return(this.m_flags&p.e_fixedRotationFlag)==p.e_fixedRotationFlag};p.prototype.SetActive=function(m){if(m!=
this.IsActive()){var u;if(m)for(this.m_flags|=p.e_activeFlag,m=this.m_world.m_contactManager.m_broadPhase,u=this.m_fixtureList;u;u=u.m_next)u.CreateProxy(m,this.m_xf);else{this.m_flags&=~p.e_activeFlag;m=this.m_world.m_contactManager.m_broadPhase;for(u=this.m_fixtureList;u;u=u.m_next)u.DestroyProxy(m);for(m=this.m_contactList;m;)u=m,m=m.next,this.m_world.m_contactManager.Destroy(u.contact);this.m_contactList=null}}};p.prototype.IsActive=function(){return(this.m_flags&p.e_activeFlag)==p.e_activeFlag};
p.prototype.IsSleepingAllowed=function(){return(this.m_flags&p.e_allowSleepFlag)==p.e_allowSleepFlag};p.prototype.GetFixtureList=function(){return this.m_fixtureList};p.prototype.GetJointList=function(){return this.m_jointList};p.prototype.GetControllerList=function(){return this.m_controllerList};p.prototype.GetContactList=function(){return this.m_contactList};p.prototype.GetNext=function(){return this.m_next};p.prototype.GetUserData=function(){return this.m_userData};p.prototype.SetUserData=function(m){this.m_userData=
m};p.prototype.GetWorld=function(){return this.m_world};p.prototype.b2Body=function(m,u){this.m_flags=0;m.bullet&&(this.m_flags|=p.e_bulletFlag);m.fixedRotation&&(this.m_flags|=p.e_fixedRotationFlag);m.allowSleep&&(this.m_flags|=p.e_allowSleepFlag);m.awake&&(this.m_flags|=p.e_awakeFlag);m.active&&(this.m_flags|=p.e_activeFlag);this.m_world=u;this.m_xf.position.SetV(m.position);this.m_xf.R.Set(m.angle);this.m_sweep.localCenter.SetZero();this.m_sweep.t0=1;this.m_sweep.a0=this.m_sweep.a=m.angle;u=this.m_xf.R;
var D=this.m_sweep.localCenter;this.m_sweep.c.x=u.col1.x*D.x+u.col2.x*D.y;this.m_sweep.c.y=u.col1.y*D.x+u.col2.y*D.y;this.m_sweep.c.x+=this.m_xf.position.x;this.m_sweep.c.y+=this.m_xf.position.y;this.m_sweep.c0.SetV(this.m_sweep.c);this.m_contactList=this.m_controllerList=this.m_jointList=null;this.m_controllerCount=0;this.m_next=this.m_prev=null;this.m_linearVelocity.SetV(m.linearVelocity);this.m_angularVelocity=m.angularVelocity;this.m_linearDamping=m.linearDamping;this.m_angularDamping=m.angularDamping;
this.m_force.Set(0,0);this.m_sleepTime=this.m_torque=0;this.m_type=m.type;this.m_invMass=this.m_type==p.b2_dynamicBody?this.m_mass=1:this.m_mass=0;this.m_invI=this.m_I=0;this.m_inertiaScale=m.inertiaScale;this.m_userData=m.userData;this.m_fixtureList=null;this.m_fixtureCount=0};p.prototype.SynchronizeFixtures=function(){var m=p.s_xf1;m.R.Set(this.m_sweep.a0);var u=m.R,D=this.m_sweep.localCenter;m.position.x=this.m_sweep.c0.x-(u.col1.x*D.x+u.col2.x*D.y);m.position.y=this.m_sweep.c0.y-(u.col1.y*D.x+
u.col2.y*D.y);D=this.m_world.m_contactManager.m_broadPhase;for(u=this.m_fixtureList;u;u=u.m_next)u.Synchronize(D,m,this.m_xf)};p.prototype.SynchronizeTransform=function(){this.m_xf.R.Set(this.m_sweep.a);var m=this.m_xf.R,u=this.m_sweep.localCenter;this.m_xf.position.x=this.m_sweep.c.x-(m.col1.x*u.x+m.col2.x*u.y);this.m_xf.position.y=this.m_sweep.c.y-(m.col1.y*u.x+m.col2.y*u.y)};p.prototype.ShouldCollide=function(m){if(this.m_type!=p.b2_dynamicBody&&m.m_type!=p.b2_dynamicBody)return!1;for(var u=this.m_jointList;u;u=
u.next)if(u.other==m&&0==u.joint.m_collideConnected)return!1;return!0};p.prototype.Advance=function(m){void 0===m&&(m=0);this.m_sweep.Advance(m);this.m_sweep.c.SetV(this.m_sweep.c0);this.m_sweep.a=this.m_sweep.a0;this.SynchronizeTransform()};Box2D$$module$js$box2d$Box2D.postDefs.push(function(){Box2D$$module$js$box2d$Box2D.Dynamics.b2Body.s_xf1=new c;Box2D$$module$js$box2d$Box2D.Dynamics.b2Body.e_islandFlag=1;Box2D$$module$js$box2d$Box2D.Dynamics.b2Body.e_awakeFlag=2;Box2D$$module$js$box2d$Box2D.Dynamics.b2Body.e_allowSleepFlag=
4;Box2D$$module$js$box2d$Box2D.Dynamics.b2Body.e_bulletFlag=8;Box2D$$module$js$box2d$Box2D.Dynamics.b2Body.e_fixedRotationFlag=16;Box2D$$module$js$box2d$Box2D.Dynamics.b2Body.e_activeFlag=32;Box2D$$module$js$box2d$Box2D.Dynamics.b2Body.b2_staticBody=0;Box2D$$module$js$box2d$Box2D.Dynamics.b2Body.b2_kinematicBody=1;Box2D$$module$js$box2d$Box2D.Dynamics.b2Body.b2_dynamicBody=2});A.b2BodyDef=function(){this.position=new d;this.linearVelocity=new d};A.prototype.b2BodyDef=function(){this.userData=null;
this.position.Set(0,0);this.angle=0;this.linearVelocity.Set(0,0);this.angularDamping=this.linearDamping=this.angularVelocity=0;this.awake=this.allowSleep=!0;this.bullet=this.fixedRotation=!1;this.type=p.b2_staticBody;this.active=!0;this.inertiaScale=1};G.b2ContactFilter=function(){};G.prototype.ShouldCollide=function(m,u){m=m.GetFilterData();u=u.GetFilterData();return m.groupIndex==u.groupIndex&&0!=m.groupIndex?0<m.groupIndex:0!=(m.maskBits&u.categoryBits)&&0!=(m.categoryBits&u.maskBits)};G.prototype.RayCollide=
function(m,u){return m?this.ShouldCollide(m instanceof U?m:null,u):!0};Box2D$$module$js$box2d$Box2D.postDefs.push(function(){Box2D$$module$js$box2d$Box2D.Dynamics.b2ContactFilter.b2_defaultFilter=new G});O.b2ContactImpulse=function(){this.normalImpulses=new Vector_a2j_Number$$module$js$box2d$Box2D(f.b2_maxManifoldPoints);this.tangentImpulses=new Vector_a2j_Number$$module$js$box2d$Box2D(f.b2_maxManifoldPoints)};P.b2ContactListener=function(){};P.prototype.BeginContact=function(m){};P.prototype.EndContact=
function(m){};P.prototype.PreSolve=function(m,u){};P.prototype.PostSolve=function(m,u){};Box2D$$module$js$box2d$Box2D.postDefs.push(function(){Box2D$$module$js$box2d$Box2D.Dynamics.b2ContactListener.b2_defaultListener=new P});S.b2ContactManager=function(){};S.prototype.b2ContactManager=function(){this.m_world=null;this.m_contactCount=0;this.m_contactFilter=G.b2_defaultFilter;this.m_contactListener=P.b2_defaultListener;this.m_contactFactory=new C(this.m_allocator);this.m_broadPhase=new k};S.prototype.AddPair=
function(m,u){m=m instanceof U?m:null;u=u instanceof U?u:null;var D=m.GetBody(),l=u.GetBody();if(D!=l){for(var q=l.GetContactList();q;){if(q.other==D){var t=q.contact.GetFixtureA(),B=q.contact.GetFixtureB();if(t==m&&B==u||t==u&&B==m)return}q=q.next}0!=l.ShouldCollide(D)&&0!=this.m_contactFilter.ShouldCollide(m,u)&&(q=this.m_contactFactory.Create(m,u),m=q.GetFixtureA(),u=q.GetFixtureB(),D=m.m_body,l=u.m_body,q.m_prev=null,q.m_next=this.m_world.m_contactList,null!=this.m_world.m_contactList&&(this.m_world.m_contactList.m_prev=
q),this.m_world.m_contactList=q,q.m_nodeA.contact=q,q.m_nodeA.other=l,q.m_nodeA.prev=null,q.m_nodeA.next=D.m_contactList,null!=D.m_contactList&&(D.m_contactList.prev=q.m_nodeA),D.m_contactList=q.m_nodeA,q.m_nodeB.contact=q,q.m_nodeB.other=D,q.m_nodeB.prev=null,q.m_nodeB.next=l.m_contactList,null!=l.m_contactList&&(l.m_contactList.prev=q.m_nodeB),l.m_contactList=q.m_nodeB,++this.m_world.m_contactCount)}};S.prototype.FindNewContacts=function(){this.m_broadPhase.UpdatePairs(Box2D$$module$js$box2d$Box2D.generateCallback(this,
this.AddPair))};S.prototype.Destroy=function(m){var u=m.GetFixtureA(),D=m.GetFixtureB();u=u.GetBody();D=D.GetBody();m.IsTouching()&&this.m_contactListener.EndContact(m);m.m_prev&&(m.m_prev.m_next=m.m_next);m.m_next&&(m.m_next.m_prev=m.m_prev);m==this.m_world.m_contactList&&(this.m_world.m_contactList=m.m_next);m.m_nodeA.prev&&(m.m_nodeA.prev.next=m.m_nodeA.next);m.m_nodeA.next&&(m.m_nodeA.next.prev=m.m_nodeA.prev);m.m_nodeA==u.m_contactList&&(u.m_contactList=m.m_nodeA.next);m.m_nodeB.prev&&(m.m_nodeB.prev.next=
m.m_nodeB.next);m.m_nodeB.next&&(m.m_nodeB.next.prev=m.m_nodeB.prev);m.m_nodeB==D.m_contactList&&(D.m_contactList=m.m_nodeB.next);this.m_contactFactory.Destroy(m);--this.m_contactCount};S.prototype.Collide=function(){for(var m=this.m_world.m_contactList;m;){var u=m.GetFixtureA(),D=m.GetFixtureB(),l=u.GetBody(),q=D.GetBody();if(0==l.IsAwake()&&0==q.IsAwake())m=m.GetNext();else{if(m.m_flags&J.e_filterFlag){if(0==q.ShouldCollide(l)){u=m;m=u.GetNext();this.Destroy(u);continue}if(0==this.m_contactFilter.ShouldCollide(u,
D)){u=m;m=u.GetNext();this.Destroy(u);continue}m.m_flags&=~J.e_filterFlag}0==this.m_broadPhase.TestOverlap(u.m_proxy,D.m_proxy)?(u=m,m=u.GetNext(),this.Destroy(u)):(m.Update(this.m_contactListener),m=m.GetNext())}}};Box2D$$module$js$box2d$Box2D.postDefs.push(function(){Box2D$$module$js$box2d$Box2D.Dynamics.b2ContactManager.s_evalCP=new g});T.b2DebugDraw=function(){};T.prototype.b2DebugDraw=function(){};T.prototype.SetFlags=function(m){};T.prototype.GetFlags=function(){};T.prototype.AppendFlags=function(m){};
T.prototype.ClearFlags=function(m){};T.prototype.SetSprite=function(m){};T.prototype.GetSprite=function(){};T.prototype.SetDrawScale=function(m){};T.prototype.GetDrawScale=function(){};T.prototype.SetLineThickness=function(m){};T.prototype.GetLineThickness=function(){};T.prototype.SetAlpha=function(m){};T.prototype.GetAlpha=function(){};T.prototype.SetFillAlpha=function(m){};T.prototype.GetFillAlpha=function(){};T.prototype.SetXFormScale=function(m){};T.prototype.GetXFormScale=function(){};T.prototype.DrawPolygon=
function(m,u,D){};T.prototype.DrawSolidPolygon=function(m,u,D){};T.prototype.DrawCircle=function(m,u,D){};T.prototype.DrawSolidCircle=function(m,u,D,l){};T.prototype.DrawSegment=function(m,u,D){};T.prototype.DrawTransform=function(m){};Box2D$$module$js$box2d$Box2D.postDefs.push(function(){Box2D$$module$js$box2d$Box2D.Dynamics.b2DebugDraw.e_shapeBit=1;Box2D$$module$js$box2d$Box2D.Dynamics.b2DebugDraw.e_jointBit=2;Box2D$$module$js$box2d$Box2D.Dynamics.b2DebugDraw.e_aabbBit=4;Box2D$$module$js$box2d$Box2D.Dynamics.b2DebugDraw.e_pairBit=
8;Box2D$$module$js$box2d$Box2D.Dynamics.b2DebugDraw.e_centerOfMassBit=16;Box2D$$module$js$box2d$Box2D.Dynamics.b2DebugDraw.e_controllerBit=32});W.b2DestructionListener=function(){};W.prototype.SayGoodbyeJoint=function(m){};W.prototype.SayGoodbyeFixture=function(m){};X.b2FilterData=function(){this.categoryBits=1;this.maskBits=65535;this.groupIndex=0};X.prototype.Copy=function(){var m=new X;m.categoryBits=this.categoryBits;m.maskBits=this.maskBits;m.groupIndex=this.groupIndex;return m};U.b2Fixture=
function(){this.m_filter=new X};U.prototype.GetType=function(){return this.m_shape.GetType()};U.prototype.GetShape=function(){return this.m_shape};U.prototype.SetSensor=function(m){if(this.m_isSensor!=m&&(this.m_isSensor=m,null!=this.m_body))for(m=this.m_body.GetContactList();m;){var u=m.contact,D=u.GetFixtureA(),l=u.GetFixtureB();D!=this&&l!=this||u.SetSensor(D.IsSensor()||l.IsSensor());m=m.next}};U.prototype.IsSensor=function(){return this.m_isSensor};U.prototype.SetFilterData=function(m){this.m_filter=
m.Copy();if(!this.m_body)for(m=this.m_body.GetContactList();m;){var u=m.contact,D=u.GetFixtureA(),l=u.GetFixtureB();D!=this&&l!=this||u.FlagForFiltering();m=m.next}};U.prototype.GetFilterData=function(){return this.m_filter.Copy()};U.prototype.GetBody=function(){return this.m_body};U.prototype.GetNext=function(){return this.m_next};U.prototype.GetUserData=function(){return this.m_userData};U.prototype.SetUserData=function(m){this.m_userData=m};U.prototype.TestPoint=function(m){return this.m_shape.TestPoint(this.m_body.GetTransform(),
m)};U.prototype.RayCast=function(m,u){return this.m_shape.RayCast(m,u,this.m_body.GetTransform())};U.prototype.GetMassData=function(m){void 0===m&&(m=null);null==m&&(m=new z);this.m_shape.ComputeMass(m,this.m_density);return m};U.prototype.SetDensity=function(m){void 0===m&&(m=0);this.m_density=m};U.prototype.GetDensity=function(){return this.m_density};U.prototype.GetFriction=function(){return this.m_friction};U.prototype.SetFriction=function(m){void 0===m&&(m=0);this.m_friction=m};U.prototype.GetRestitution=
function(){return this.m_restitution};U.prototype.SetRestitution=function(m){void 0===m&&(m=0);this.m_restitution=m};U.prototype.GetAABB=function(){return this.m_aabb};U.prototype.b2Fixture=function(){this.m_aabb=new h;this.m_shape=this.m_next=this.m_body=this.m_userData=null;this.m_restitution=this.m_friction=this.m_density=0};U.prototype.Create=function(m,u,D){this.m_userData=D.userData;this.m_friction=D.friction;this.m_restitution=D.restitution;this.m_body=m;this.m_next=null;this.m_filter=D.filter.Copy();
this.m_isSensor=D.isSensor;this.m_shape=D.shape.Copy();this.m_density=D.density};U.prototype.Destroy=function(){this.m_shape=null};U.prototype.CreateProxy=function(m,u){this.m_shape.ComputeAABB(this.m_aabb,u);this.m_proxy=m.CreateProxy(this.m_aabb,this)};U.prototype.DestroyProxy=function(m){null!=this.m_proxy&&(m.DestroyProxy(this.m_proxy),this.m_proxy=null)};U.prototype.Synchronize=function(m,u,D){if(this.m_proxy){var l=new h,q=new h;this.m_shape.ComputeAABB(l,u);this.m_shape.ComputeAABB(q,D);this.m_aabb.Combine(l,
q);u=a.SubtractVV(D.position,u.position);m.MoveProxy(this.m_proxy,this.m_aabb,u)}};Z.b2FixtureDef=function(){this.filter=new X};Z.prototype.b2FixtureDef=function(){this.userData=this.shape=null;this.friction=.2;this.density=this.restitution=0;this.filter.categoryBits=1;this.filter.maskBits=65535;this.filter.groupIndex=0;this.isSensor=!1};aa.b2Island=function(){};aa.prototype.b2Island=function(){this.m_bodies=new Vector$$module$js$box2d$Box2D;this.m_contacts=new Vector$$module$js$box2d$Box2D;this.m_joints=
new Vector$$module$js$box2d$Box2D};aa.prototype.Initialize=function(m,u,D,l,q,t){void 0===m&&(m=0);void 0===u&&(u=0);void 0===D&&(D=0);this.m_bodyCapacity=m;this.m_contactCapacity=u;this.m_jointCapacity=D;this.m_jointCount=this.m_contactCount=this.m_bodyCount=0;this.m_allocator=l;this.m_listener=q;this.m_contactSolver=t;for(l=this.m_bodies.length;l<m;l++)this.m_bodies[l]=null;for(l=this.m_contacts.length;l<u;l++)this.m_contacts[l]=null;for(l=this.m_joints.length;l<D;l++)this.m_joints[l]=null};aa.prototype.Clear=
function(){this.m_jointCount=this.m_contactCount=this.m_bodyCount=0};aa.prototype.Solve=function(m,u,D){var l;for(l=0;l<this.m_bodyCount;++l){var q=this.m_bodies[l];q.GetType()==p.b2_dynamicBody&&(q.m_linearVelocity.x+=m.dt*(u.x+q.m_invMass*q.m_force.x),q.m_linearVelocity.y+=m.dt*(u.y+q.m_invMass*q.m_force.y),q.m_angularVelocity+=m.dt*q.m_invI*q.m_torque,q.m_linearVelocity.Multiply(a.Clamp(1-m.dt*q.m_linearDamping,0,1)),q.m_angularVelocity*=a.Clamp(1-m.dt*q.m_angularDamping,0,1))}this.m_contactSolver.Initialize(m,
this.m_contacts,this.m_contactCount,this.m_allocator);u=this.m_contactSolver;u.InitVelocityConstraints(m);for(l=0;l<this.m_jointCount;++l){var t=this.m_joints[l];t.InitVelocityConstraints(m)}for(l=0;l<m.velocityIterations;++l){for(q=0;q<this.m_jointCount;++q)t=this.m_joints[q],t.SolveVelocityConstraints(m);u.SolveVelocityConstraints()}for(l=0;l<this.m_jointCount;++l)t=this.m_joints[l],t.FinalizeVelocityConstraints();u.FinalizeVelocityConstraints();for(l=0;l<this.m_bodyCount;++l)if(q=this.m_bodies[l],
q.GetType()!=p.b2_staticBody){var B=m.dt*q.m_linearVelocity.x,H=m.dt*q.m_linearVelocity.y;B*B+H*H>f.b2_maxTranslationSquared&&(q.m_linearVelocity.Normalize(),q.m_linearVelocity.x=q.m_linearVelocity.x*f.b2_maxTranslation*m.inv_dt,q.m_linearVelocity.y=q.m_linearVelocity.y*f.b2_maxTranslation*m.inv_dt);B=m.dt*q.m_angularVelocity;B*B>f.b2_maxRotationSquared&&(q.m_angularVelocity=0>q.m_angularVelocity?-f.b2_maxRotation*m.inv_dt:f.b2_maxRotation*m.inv_dt);q.m_sweep.c0.SetV(q.m_sweep.c);q.m_sweep.a0=q.m_sweep.a;
q.m_sweep.c.x+=m.dt*q.m_linearVelocity.x;q.m_sweep.c.y+=m.dt*q.m_linearVelocity.y;q.m_sweep.a+=m.dt*q.m_angularVelocity;q.SynchronizeTransform()}for(l=0;l<m.positionIterations;++l){B=u.SolvePositionConstraints(f.b2_contactBaumgarte);H=!0;for(q=0;q<this.m_jointCount;++q)t=this.m_joints[q],t=t.SolvePositionConstraints(f.b2_contactBaumgarte),H=H&&t;if(B&&H)break}this.Report(u.m_constraints);if(D){D=Number.MAX_VALUE;u=f.b2_linearSleepTolerance*f.b2_linearSleepTolerance;B=f.b2_angularSleepTolerance*f.b2_angularSleepTolerance;
for(l=0;l<this.m_bodyCount;++l)q=this.m_bodies[l],q.GetType()!=p.b2_staticBody&&(0==(q.m_flags&p.e_allowSleepFlag)&&(D=q.m_sleepTime=0),0==(q.m_flags&p.e_allowSleepFlag)||q.m_angularVelocity*q.m_angularVelocity>B||a.Dot(q.m_linearVelocity,q.m_linearVelocity)>u?D=q.m_sleepTime=0:(q.m_sleepTime+=m.dt,D=a.Min(D,q.m_sleepTime)));if(D>=f.b2_timeToSleep)for(l=0;l<this.m_bodyCount;++l)q=this.m_bodies[l],q.SetAwake(!1)}};aa.prototype.SolveTOI=function(m){var u,D;this.m_contactSolver.Initialize(m,this.m_contacts,
this.m_contactCount,this.m_allocator);var l=this.m_contactSolver;for(u=0;u<this.m_jointCount;++u)this.m_joints[u].InitVelocityConstraints(m);for(u=0;u<m.velocityIterations;++u)for(l.SolveVelocityConstraints(),D=0;D<this.m_jointCount;++D)this.m_joints[D].SolveVelocityConstraints(m);for(u=0;u<this.m_bodyCount;++u)if(D=this.m_bodies[u],D.GetType()!=p.b2_staticBody){var q=m.dt*D.m_linearVelocity.x,t=m.dt*D.m_linearVelocity.y;q*q+t*t>f.b2_maxTranslationSquared&&(D.m_linearVelocity.Normalize(),D.m_linearVelocity.x=
D.m_linearVelocity.x*f.b2_maxTranslation*m.inv_dt,D.m_linearVelocity.y=D.m_linearVelocity.y*f.b2_maxTranslation*m.inv_dt);q=m.dt*D.m_angularVelocity;q*q>f.b2_maxRotationSquared&&(D.m_angularVelocity=0>D.m_angularVelocity?-f.b2_maxRotation*m.inv_dt:f.b2_maxRotation*m.inv_dt);D.m_sweep.c0.SetV(D.m_sweep.c);D.m_sweep.a0=D.m_sweep.a;D.m_sweep.c.x+=m.dt*D.m_linearVelocity.x;D.m_sweep.c.y+=m.dt*D.m_linearVelocity.y;D.m_sweep.a+=m.dt*D.m_angularVelocity;D.SynchronizeTransform()}for(u=0;u<m.positionIterations;++u){q=
l.SolvePositionConstraints(.75);t=!0;for(D=0;D<this.m_jointCount;++D){var B=this.m_joints[D].SolvePositionConstraints(f.b2_contactBaumgarte);t=t&&B}if(q&&t)break}this.Report(l.m_constraints)};aa.prototype.Report=function(m){if(null!=this.m_listener)for(var u=0;u<this.m_contactCount;++u){for(var D=this.m_contacts[u],l=m[u],q=0;q<l.pointCount;++q)aa.s_impulse.normalImpulses[q]=l.points[q].normalImpulse,aa.s_impulse.tangentImpulses[q]=l.points[q].tangentImpulse;this.m_listener.PostSolve(D,aa.s_impulse)}};
aa.prototype.AddBody=function(m){m.m_islandIndex=this.m_bodyCount;this.m_bodies[this.m_bodyCount++]=m};aa.prototype.AddContact=function(m){this.m_contacts[this.m_contactCount++]=m};aa.prototype.AddJoint=function(m){this.m_joints[this.m_jointCount++]=m};Box2D$$module$js$box2d$Box2D.postDefs.push(function(){Box2D$$module$js$box2d$Box2D.Dynamics.b2Island.s_impulse=new O});r.b2TimeStep=function(){};r.prototype.Set=function(m){this.dt=m.dt;this.inv_dt=m.inv_dt;this.positionIterations=m.positionIterations;
this.velocityIterations=m.velocityIterations;this.warmStarting=m.warmStarting};y.b2World=function(){this.s_stack=new Vector$$module$js$box2d$Box2D;this.m_contactManager=new S;this.m_contactSolver=new E;this.m_island=new aa};y.prototype.b2World=function(m,u){this.m_controllerList=this.m_jointList=this.m_contactList=this.m_bodyList=this.m_debugDraw=this.m_destructionListener=null;this.m_controllerCount=this.m_jointCount=this.m_contactCount=this.m_bodyCount=0;y.m_warmStarting=!0;y.m_continuousPhysics=
!0;this.m_allowSleep=u;this.m_gravity=m;this.m_inv_dt0=0;this.m_contactManager.m_world=this;m=new A;this.m_groundBody=this.CreateBody(m)};y.prototype.SetDestructionListener=function(m){this.m_destructionListener=m};y.prototype.SetContactFilter=function(m){this.m_contactManager.m_contactFilter=m};y.prototype.SetContactListener=function(m){this.m_contactManager.m_contactListener=m};y.prototype.SetDebugDraw=function(m){this.m_debugDraw=m};y.prototype.SetBroadPhase=function(m){var u=this.m_contactManager.m_broadPhase;
this.m_contactManager.m_broadPhase=m;for(var D=this.m_bodyList;D;D=D.m_next)for(var l=D.m_fixtureList;l;l=l.m_next)l.m_proxy=m.CreateProxy(u.GetFatAABB(l.m_proxy),l)};y.prototype.Validate=function(){this.m_contactManager.m_broadPhase.Validate()};y.prototype.GetProxyCount=function(){return this.m_contactManager.m_broadPhase.GetProxyCount()};y.prototype.CreateBody=function(m){if(1==this.IsLocked())return null;m=new p(m,this);m.m_prev=null;if(m.m_next=this.m_bodyList)this.m_bodyList.m_prev=m;this.m_bodyList=
m;++this.m_bodyCount;return m};y.prototype.DestroyBody=function(m){if(1!=this.IsLocked()){for(var u=m.m_jointList;u;){var D=u;u=u.next;this.m_destructionListener&&this.m_destructionListener.SayGoodbyeJoint(D.joint);this.DestroyJoint(D.joint)}for(u=m.m_controllerList;u;)D=u,u=u.nextController,D.controller.RemoveBody(m);for(u=m.m_contactList;u;)D=u,u=u.next,this.m_contactManager.Destroy(D.contact);m.m_contactList=null;for(u=m.m_fixtureList;u;)D=u,u=u.m_next,this.m_destructionListener&&this.m_destructionListener.SayGoodbyeFixture(D),
D.DestroyProxy(this.m_contactManager.m_broadPhase),D.Destroy();m.m_fixtureList=null;m.m_fixtureCount=0;m.m_prev&&(m.m_prev.m_next=m.m_next);m.m_next&&(m.m_next.m_prev=m.m_prev);m==this.m_bodyList&&(this.m_bodyList=m.m_next);--this.m_bodyCount}};y.prototype.CreateJoint=function(m){var u=I.Create(m,null);u.m_prev=null;if(u.m_next=this.m_jointList)this.m_jointList.m_prev=u;this.m_jointList=u;++this.m_jointCount;u.m_edgeA.joint=u;u.m_edgeA.other=u.m_bodyB;u.m_edgeA.prev=null;if(u.m_edgeA.next=u.m_bodyA.m_jointList)u.m_bodyA.m_jointList.prev=
u.m_edgeA;u.m_bodyA.m_jointList=u.m_edgeA;u.m_edgeB.joint=u;u.m_edgeB.other=u.m_bodyA;u.m_edgeB.prev=null;if(u.m_edgeB.next=u.m_bodyB.m_jointList)u.m_bodyB.m_jointList.prev=u.m_edgeB;u.m_bodyB.m_jointList=u.m_edgeB;var D=m.bodyA,l=m.bodyB;if(0==m.collideConnected)for(m=l.GetContactList();m;)m.other==D&&m.contact.FlagForFiltering(),m=m.next;return u};y.prototype.DestroyJoint=function(m){var u=m.m_collideConnected;m.m_prev&&(m.m_prev.m_next=m.m_next);m.m_next&&(m.m_next.m_prev=m.m_prev);m==this.m_jointList&&
(this.m_jointList=m.m_next);var D=m.m_bodyA,l=m.m_bodyB;D.SetAwake(!0);l.SetAwake(!0);m.m_edgeA.prev&&(m.m_edgeA.prev.next=m.m_edgeA.next);m.m_edgeA.next&&(m.m_edgeA.next.prev=m.m_edgeA.prev);m.m_edgeA==D.m_jointList&&(D.m_jointList=m.m_edgeA.next);m.m_edgeA.prev=null;m.m_edgeA.next=null;m.m_edgeB.prev&&(m.m_edgeB.prev.next=m.m_edgeB.next);m.m_edgeB.next&&(m.m_edgeB.next.prev=m.m_edgeB.prev);m.m_edgeB==l.m_jointList&&(l.m_jointList=m.m_edgeB.next);m.m_edgeB.prev=null;m.m_edgeB.next=null;I.Destroy(m,
null);--this.m_jointCount;if(0==u)for(m=l.GetContactList();m;)m.other==D&&m.contact.FlagForFiltering(),m=m.next};y.prototype.AddController=function(m){m.m_next=this.m_controllerList;m.m_prev=null;this.m_controllerList=m;m.m_world=this;this.m_controllerCount++;return m};y.prototype.RemoveController=function(m){m.m_prev&&(m.m_prev.m_next=m.m_next);m.m_next&&(m.m_next.m_prev=m.m_prev);this.m_controllerList==m&&(this.m_controllerList=m.m_next);this.m_controllerCount--};y.prototype.CreateController=function(m){if(m.m_world!=
this)throw Error("Controller can only be a member of one world");m.m_next=this.m_controllerList;m.m_prev=null;this.m_controllerList&&(this.m_controllerList.m_prev=m);this.m_controllerList=m;++this.m_controllerCount;m.m_world=this;return m};y.prototype.DestroyController=function(m){m.Clear();m.m_next&&(m.m_next.m_prev=m.m_prev);m.m_prev&&(m.m_prev.m_next=m.m_next);m==this.m_controllerList&&(this.m_controllerList=m.m_next);--this.m_controllerCount};y.prototype.SetWarmStarting=function(m){y.m_warmStarting=
m};y.prototype.SetContinuousPhysics=function(m){y.m_continuousPhysics=m};y.prototype.GetBodyCount=function(){return this.m_bodyCount};y.prototype.GetJointCount=function(){return this.m_jointCount};y.prototype.GetContactCount=function(){return this.m_contactCount};y.prototype.SetGravity=function(m){this.m_gravity=m};y.prototype.GetGravity=function(){return this.m_gravity};y.prototype.GetGroundBody=function(){return this.m_groundBody};y.prototype.Step=function(m,u,D){void 0===m&&(m=0);void 0===u&&(u=
0);void 0===D&&(D=0);this.m_flags&y.e_newFixture&&(this.m_contactManager.FindNewContacts(),this.m_flags&=~y.e_newFixture);this.m_flags|=y.e_locked;var l=y.s_timestep2;l.dt=m;l.velocityIterations=u;l.positionIterations=D;l.inv_dt=0<m?1/m:0;l.dtRatio=this.m_inv_dt0*m;l.warmStarting=y.m_warmStarting;this.m_contactManager.Collide();0<l.dt&&this.Solve(l);y.m_continuousPhysics&&0<l.dt&&this.SolveTOI(l);0<l.dt&&(this.m_inv_dt0=l.inv_dt);this.m_flags&=~y.e_locked};y.prototype.ClearForces=function(){for(var m=
this.m_bodyList;m;m=m.m_next)m.m_force.SetZero(),m.m_torque=0};y.prototype.DrawDebugData=function(){if(null!=this.m_debugDraw){this.m_debugDraw.m_sprite.graphics.clear();var m=this.m_debugDraw.GetFlags(),u,D;new d;new d;new d;new h;new h;new d;new d;new d;new d;var l=new e(0,0,0);if(m&T.e_shapeBit)for(u=this.m_bodyList;u;u=u.m_next){var q=u.m_xf;for(D=u.GetFixtureList();D;D=D.m_next){var t=D.GetShape();0==u.IsActive()?l.Set(.5,.5,.3):u.GetType()==p.b2_staticBody?l.Set(.5,.9,.5):u.GetType()==p.b2_kinematicBody?
l.Set(.5,.5,.9):0==u.IsAwake()?l.Set(.6,.6,.6):l.Set(.9,.7,.7);this.DrawShape(t,q,l)}}if(m&T.e_jointBit)for(u=this.m_jointList;u;u=u.m_next)this.DrawJoint(u);if(m&T.e_controllerBit)for(u=this.m_controllerList;u;u=u.m_next)u.Draw(this.m_debugDraw);if(m&T.e_pairBit)for(l.Set(.3,.9,.9),u=this.m_contactManager.m_contactList;u;u=u.GetNext())t=u.GetFixtureA(),D=u.GetFixtureB(),t=t.GetAABB().GetCenter(),D=D.GetAABB().GetCenter(),this.m_debugDraw.DrawSegment(t,D,l);if(m&T.e_aabbBit)for(t=this.m_contactManager.m_broadPhase,
q=[new d,new d,new d,new d],u=this.m_bodyList;u;u=u.GetNext())if(0!=u.IsActive())for(D=u.GetFixtureList();D;D=D.GetNext()){var B=t.GetFatAABB(D.m_proxy);q[0].Set(B.lowerBound.x,B.lowerBound.y);q[1].Set(B.upperBound.x,B.lowerBound.y);q[2].Set(B.upperBound.x,B.upperBound.y);q[3].Set(B.lowerBound.x,B.upperBound.y);this.m_debugDraw.DrawPolygon(q,4,l)}if(m&T.e_centerOfMassBit)for(u=this.m_bodyList;u;u=u.m_next)q=y.s_xf,q.R=u.m_xf.R,q.position=u.GetWorldCenter(),this.m_debugDraw.DrawTransform(q)}};y.prototype.QueryAABB=
function(m,u){var D=this.m_contactManager.m_broadPhase;D.Query(function(l){return m(D.GetUserData(l))},u)};y.prototype.QueryShape=function(m,u,D){void 0===D&&(D=null);null==D&&(D=new c,D.SetIdentity());var l=this.m_contactManager.m_broadPhase,q=new h;u.ComputeAABB(q,D);l.Query(function(t){t=l.GetUserData(t)instanceof U?l.GetUserData(t):null;return N.TestOverlap(u,D,t.GetShape(),t.GetBody().GetTransform())?m(t):!0},q)};y.prototype.QueryPoint=function(m,u){var D=this.m_contactManager.m_broadPhase,l=
new h;l.lowerBound.Set(u.x-f.b2_linearSlop,u.y-f.b2_linearSlop);l.upperBound.Set(u.x+f.b2_linearSlop,u.y+f.b2_linearSlop);D.Query(function(q){q=D.GetUserData(q)instanceof U?D.GetUserData(q):null;return q.TestPoint(u)?m(q):!0},l)};y.prototype.RayCast=function(m,u,D){var l=this.m_contactManager.m_broadPhase,q=new w,t=new n(u,D);l.RayCast(function(B,H){H=l.GetUserData(H);H=H instanceof U?H:null;if(H.RayCast(q,B)){B=q.fraction;var M=new d((1-B)*u.x+B*D.x,(1-B)*u.y+B*D.y);return m(H,M,q.normal,B)}return B.maxFraction},
t)};y.prototype.RayCastOne=function(m,u){var D;this.RayCast(function(l,q,t,B){void 0===B&&(B=0);D=l;return B},m,u);return D};y.prototype.RayCastAll=function(m,u){var D=new Vector$$module$js$box2d$Box2D;this.RayCast(function(l,q,t,B){D[D.length]=l;return 1},m,u);return D};y.prototype.GetBodyList=function(){return this.m_bodyList};y.prototype.GetJointList=function(){return this.m_jointList};y.prototype.GetContactList=function(){return this.m_contactList};y.prototype.IsLocked=function(){return 0<(this.m_flags&
y.e_locked)};y.prototype.Solve=function(m){for(var u,D=this.m_controllerList;D;D=D.m_next)D.Step(m);D=this.m_island;D.Initialize(this.m_bodyCount,this.m_contactCount,this.m_jointCount,null,this.m_contactManager.m_contactListener,this.m_contactSolver);for(u=this.m_bodyList;u;u=u.m_next)u.m_flags&=~p.e_islandFlag;for(var l=this.m_contactList;l;l=l.m_next)l.m_flags&=~J.e_islandFlag;for(l=this.m_jointList;l;l=l.m_next)l.m_islandFlag=!1;l=this.s_stack;for(var q=this.m_bodyList;q;q=q.m_next)if(!(q.m_flags&
p.e_islandFlag)&&0!=q.IsAwake()&&0!=q.IsActive()&&q.GetType()!=p.b2_staticBody){D.Clear();var t=0;l[t++]=q;for(q.m_flags|=p.e_islandFlag;0<t;)if(u=l[--t],D.AddBody(u),0==u.IsAwake()&&u.SetAwake(!0),u.GetType()!=p.b2_staticBody){for(var B,H=u.m_contactList;H;H=H.next)H.contact.m_flags&J.e_islandFlag||1==H.contact.IsSensor()||0==H.contact.IsEnabled()||0==H.contact.IsTouching()||(D.AddContact(H.contact),H.contact.m_flags|=J.e_islandFlag,B=H.other,B.m_flags&p.e_islandFlag||(l[t++]=B,B.m_flags|=p.e_islandFlag));
for(u=u.m_jointList;u;u=u.next)1!=u.joint.m_islandFlag&&(B=u.other,0!=B.IsActive()&&(D.AddJoint(u.joint),u.joint.m_islandFlag=!0,B.m_flags&p.e_islandFlag||(l[t++]=B,B.m_flags|=p.e_islandFlag)))}D.Solve(m,this.m_gravity,this.m_allowSleep);for(t=0;t<D.m_bodyCount;++t)u=D.m_bodies[t],u.GetType()==p.b2_staticBody&&(u.m_flags&=~p.e_islandFlag)}for(t=0;t<l.length&&l[t];++t)l[t]=null;for(u=this.m_bodyList;u;u=u.m_next)0!=u.IsAwake()&&0!=u.IsActive()&&u.GetType()!=p.b2_staticBody&&u.SynchronizeFixtures();
this.m_contactManager.FindNewContacts()};y.prototype.SolveTOI=function(m){var u,D,l=this.m_island;l.Initialize(this.m_bodyCount,f.b2_maxTOIContactsPerIsland,f.b2_maxTOIJointsPerIsland,null,this.m_contactManager.m_contactListener,this.m_contactSolver);var q=y.s_queue;for(u=this.m_bodyList;u;u=u.m_next)u.m_flags&=~p.e_islandFlag,u.m_sweep.t0=0;for(D=this.m_contactList;D;D=D.m_next)D.m_flags&=~(J.e_toiFlag|J.e_islandFlag);for(D=this.m_jointList;D;D=D.m_next)D.m_islandFlag=!1;for(;;){var t=null,B=1;for(D=
this.m_contactList;D;D=D.m_next)if(1!=D.IsSensor()&&0!=D.IsEnabled()&&0!=D.IsContinuous()){if(D.m_flags&J.e_toiFlag)u=D.m_toi;else{u=D.m_fixtureA;var H=D.m_fixtureB;u=u.m_body;H=H.m_body;if(!(u.GetType()==p.b2_dynamicBody&&0!=u.IsAwake()||H.GetType()==p.b2_dynamicBody&&0!=H.IsAwake()))continue;var M=u.m_sweep.t0;u.m_sweep.t0<H.m_sweep.t0?(M=H.m_sweep.t0,u.m_sweep.Advance(M)):H.m_sweep.t0<u.m_sweep.t0&&(M=u.m_sweep.t0,H.m_sweep.Advance(M));u=D.ComputeTOI(u.m_sweep,H.m_sweep);f.b2Assert(0<=u&&1>=u);
0<u&&1>u&&(u=(1-u)*M+u,1<u&&(u=1));D.m_toi=u;D.m_flags|=J.e_toiFlag}Number.MIN_VALUE<u&&u<B&&(t=D,B=u)}if(null==t||1-100*Number.MIN_VALUE<B)break;u=t.m_fixtureA;H=t.m_fixtureB;u=u.m_body;H=H.m_body;y.s_backupA.Set(u.m_sweep);y.s_backupB.Set(H.m_sweep);u.Advance(B);H.Advance(B);t.Update(this.m_contactManager.m_contactListener);t.m_flags&=~J.e_toiFlag;if(1==t.IsSensor()||0==t.IsEnabled())u.m_sweep.Set(y.s_backupA),H.m_sweep.Set(y.s_backupB),u.SynchronizeTransform(),H.SynchronizeTransform();else if(0!=
t.IsTouching()){u.GetType()!=p.b2_dynamicBody&&(u=H);l.Clear();t=D=0;q[D+t++]=u;for(u.m_flags|=p.e_islandFlag;0<t;)if(u=q[D++],--t,l.AddBody(u),0==u.IsAwake()&&u.SetAwake(!0),u.GetType()==p.b2_dynamicBody){for(H=u.m_contactList;H&&l.m_contactCount!=l.m_contactCapacity;H=H.next)H.contact.m_flags&J.e_islandFlag||1==H.contact.IsSensor()||0==H.contact.IsEnabled()||0==H.contact.IsTouching()||(l.AddContact(H.contact),H.contact.m_flags|=J.e_islandFlag,M=H.other,M.m_flags&p.e_islandFlag||(M.GetType()!=p.b2_staticBody&&
(M.Advance(B),M.SetAwake(!0)),q[D+t]=M,++t,M.m_flags|=p.e_islandFlag));for(u=u.m_jointList;u;u=u.next)l.m_jointCount!=l.m_jointCapacity&&1!=u.joint.m_islandFlag&&(M=u.other,0!=M.IsActive()&&(l.AddJoint(u.joint),u.joint.m_islandFlag=!0,M.m_flags&p.e_islandFlag||(M.GetType()!=p.b2_staticBody&&(M.Advance(B),M.SetAwake(!0)),q[D+t]=M,++t,M.m_flags|=p.e_islandFlag)))}D=y.s_timestep;D.warmStarting=!1;D.dt=(1-B)*m.dt;D.inv_dt=1/D.dt;D.dtRatio=0;D.velocityIterations=m.velocityIterations;D.positionIterations=
m.positionIterations;l.SolveTOI(D);for(B=0;B<l.m_bodyCount;++B)if(u=l.m_bodies[B],u.m_flags&=~p.e_islandFlag,0!=u.IsAwake()&&u.GetType()==p.b2_dynamicBody)for(u.SynchronizeFixtures(),H=u.m_contactList;H;H=H.next)H.contact.m_flags&=~J.e_toiFlag;for(B=0;B<l.m_contactCount;++B)D=l.m_contacts[B],D.m_flags&=~(J.e_toiFlag|J.e_islandFlag);for(B=0;B<l.m_jointCount;++B)D=l.m_joints[B],D.m_islandFlag=!1;this.m_contactManager.FindNewContacts()}}};y.prototype.DrawJoint=function(m){var u=m.GetBodyA(),D=m.GetBodyB(),
l=u.m_xf.position,q=D.m_xf.position,t=m.GetAnchorA(),B=m.GetAnchorB(),H=y.s_jointColor;switch(m.m_type){case I.e_distanceJoint:this.m_debugDraw.DrawSegment(t,B,H);break;case I.e_pulleyJoint:u=m instanceof L?m:null;m=u.GetGroundAnchorA();u=u.GetGroundAnchorB();this.m_debugDraw.DrawSegment(m,t,H);this.m_debugDraw.DrawSegment(u,B,H);this.m_debugDraw.DrawSegment(m,u,H);break;case I.e_mouseJoint:this.m_debugDraw.DrawSegment(t,B,H);break;default:u!=this.m_groundBody&&this.m_debugDraw.DrawSegment(l,t,H),
this.m_debugDraw.DrawSegment(t,B,H),D!=this.m_groundBody&&this.m_debugDraw.DrawSegment(q,B,H)}};y.prototype.DrawShape=function(m,u,D){switch(m.m_type){case N.e_circleShape:m=m instanceof v?m:null;var l=a.MulX(u,m.m_p);this.m_debugDraw.DrawSolidCircle(l,m.m_radius,u.R.col1,D);break;case N.e_polygonShape:l=m instanceof F?m:null;m=l.GetVertexCount();var q=l.GetVertices(),t=new Vector$$module$js$box2d$Box2D(m);for(l=0;l<m;++l)t[l]=a.MulX(u,q[l]);this.m_debugDraw.DrawSolidPolygon(t,m,D);break;case N.e_edgeShape:m=
m instanceof x?m:null,this.m_debugDraw.DrawSegment(a.MulX(u,m.GetVertex1()),a.MulX(u,m.GetVertex2()),D)}};Box2D$$module$js$box2d$Box2D.postDefs.push(function(){Box2D$$module$js$box2d$Box2D.Dynamics.b2World.s_timestep2=new r;Box2D$$module$js$box2d$Box2D.Dynamics.b2World.s_xf=new c;Box2D$$module$js$box2d$Box2D.Dynamics.b2World.s_backupA=new b;Box2D$$module$js$box2d$Box2D.Dynamics.b2World.s_backupB=new b;Box2D$$module$js$box2d$Box2D.Dynamics.b2World.s_timestep=new r;Box2D$$module$js$box2d$Box2D.Dynamics.b2World.s_queue=
new Vector$$module$js$box2d$Box2D;Box2D$$module$js$box2d$Box2D.Dynamics.b2World.s_jointColor=new e(.5,.8,.8);Box2D$$module$js$box2d$Box2D.Dynamics.b2World.e_newFixture=1;Box2D$$module$js$box2d$Box2D.Dynamics.b2World.e_locked=2})})();
(function(){var a=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2CircleShape,b=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2EdgeShape,c=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2PolygonShape,d=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2Shape,e=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2CircleContact,f=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact,h=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2ContactConstraint,g=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2ContactConstraintPoint,
k=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2ContactEdge,n=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2ContactFactory,w=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2ContactRegister,v=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2ContactResult,x=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2ContactSolver,z=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2EdgeAndCircleContact,F=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2NullContact,N=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2PolyAndCircleContact,
p=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2PolyAndEdgeContact,A=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2PolygonContact,G=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2PositionSolverManifold,O=Box2D$$module$js$box2d$Box2D.Dynamics.b2Body,P=Box2D$$module$js$box2d$Box2D.Dynamics.b2TimeStep,S=Box2D$$module$js$box2d$Box2D.Common.b2Settings,T=Box2D$$module$js$box2d$Box2D.Common.Math.b2Mat22,W=Box2D$$module$js$box2d$Box2D.Common.Math.b2Math,X=Box2D$$module$js$box2d$Box2D.Common.Math.b2Vec2,
U=Box2D$$module$js$box2d$Box2D.Collision.b2Collision,Z=Box2D$$module$js$box2d$Box2D.Collision.b2ContactID,aa=Box2D$$module$js$box2d$Box2D.Collision.b2Manifold,r=Box2D$$module$js$box2d$Box2D.Collision.b2TimeOfImpact,y=Box2D$$module$js$box2d$Box2D.Collision.b2TOIInput,J=Box2D$$module$js$box2d$Box2D.Collision.b2WorldManifold;Box2D$$module$js$box2d$Box2D.inherit(e,Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact);e.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact.prototype;
e.b2CircleContact=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this,arguments)};e.Create=function(C){return new e};e.Destroy=function(C,E){};e.prototype.Reset=function(C,E){this.__super.Reset.call(this,C,E)};e.prototype.Evaluate=function(){var C=this.m_fixtureA.GetBody(),E=this.m_fixtureB.GetBody();U.CollideCircles(this.m_manifold,this.m_fixtureA.GetShape()instanceof a?this.m_fixtureA.GetShape():null,C.m_xf,this.m_fixtureB.GetShape()instanceof a?this.m_fixtureB.GetShape():
null,E.m_xf)};f.b2Contact=function(){this.m_nodeA=new k;this.m_nodeB=new k;this.m_manifold=new aa;this.m_oldManifold=new aa};f.prototype.GetManifold=function(){return this.m_manifold};f.prototype.GetWorldManifold=function(C){var E=this.m_fixtureA.GetBody(),I=this.m_fixtureB.GetBody(),L=this.m_fixtureA.GetShape(),m=this.m_fixtureB.GetShape();C.Initialize(this.m_manifold,E.GetTransform(),L.m_radius,I.GetTransform(),m.m_radius)};f.prototype.IsTouching=function(){return(this.m_flags&f.e_touchingFlag)==
f.e_touchingFlag};f.prototype.IsContinuous=function(){return(this.m_flags&f.e_continuousFlag)==f.e_continuousFlag};f.prototype.SetSensor=function(C){this.m_flags=C?this.m_flags|f.e_sensorFlag:this.m_flags&~f.e_sensorFlag};f.prototype.IsSensor=function(){return(this.m_flags&f.e_sensorFlag)==f.e_sensorFlag};f.prototype.SetEnabled=function(C){this.m_flags=C?this.m_flags|f.e_enabledFlag:this.m_flags&~f.e_enabledFlag};f.prototype.IsEnabled=function(){return(this.m_flags&f.e_enabledFlag)==f.e_enabledFlag};
f.prototype.GetNext=function(){return this.m_next};f.prototype.GetFixtureA=function(){return this.m_fixtureA};f.prototype.GetFixtureB=function(){return this.m_fixtureB};f.prototype.FlagForFiltering=function(){this.m_flags|=f.e_filterFlag};f.prototype.b2Contact=function(){};f.prototype.Reset=function(C,E){void 0===C&&(C=null);void 0===E&&(E=null);this.m_flags=f.e_enabledFlag;if(C&&E){if(C.IsSensor()||E.IsSensor())this.m_flags|=f.e_sensorFlag;var I=C.GetBody(),L=E.GetBody();if(I.GetType()!=O.b2_dynamicBody||
I.IsBullet()||L.GetType()!=O.b2_dynamicBody||L.IsBullet())this.m_flags|=f.e_continuousFlag;this.m_fixtureA=C;this.m_fixtureB=E;this.m_manifold.m_pointCount=0;this.m_next=this.m_prev=null;this.m_nodeA.contact=null;this.m_nodeA.prev=null;this.m_nodeA.next=null;this.m_nodeA.other=null;this.m_nodeB.contact=null;this.m_nodeB.prev=null;this.m_nodeB.next=null;this.m_nodeB.other=null}else this.m_fixtureB=this.m_fixtureA=null};f.prototype.Update=function(C){var E=this.m_oldManifold;this.m_oldManifold=this.m_manifold;
this.m_manifold=E;this.m_flags|=f.e_enabledFlag;var I=!1;E=(this.m_flags&f.e_touchingFlag)==f.e_touchingFlag;var L=this.m_fixtureA.m_body,m=this.m_fixtureB.m_body,u=this.m_fixtureA.m_aabb.TestOverlap(this.m_fixtureB.m_aabb);if(this.m_flags&f.e_sensorFlag)u&&(I=this.m_fixtureA.GetShape(),u=this.m_fixtureB.GetShape(),L=L.GetTransform(),m=m.GetTransform(),I=d.TestOverlap(I,L,u,m)),this.m_manifold.m_pointCount=0;else{L.GetType()!=O.b2_dynamicBody||L.IsBullet()||m.GetType()!=O.b2_dynamicBody||m.IsBullet()?
this.m_flags|=f.e_continuousFlag:this.m_flags&=~f.e_continuousFlag;if(u)for(this.Evaluate(),I=0<this.m_manifold.m_pointCount,u=0;u<this.m_manifold.m_pointCount;++u){var D=this.m_manifold.m_points[u];D.m_normalImpulse=0;D.m_tangentImpulse=0;for(var l=D.m_id,q=0;q<this.m_oldManifold.m_pointCount;++q){var t=this.m_oldManifold.m_points[q];if(t.m_id.key==l.key){D.m_normalImpulse=t.m_normalImpulse;D.m_tangentImpulse=t.m_tangentImpulse;break}}}else this.m_manifold.m_pointCount=0;I!=E&&(L.SetAwake(!0),m.SetAwake(!0))}this.m_flags=
I?this.m_flags|f.e_touchingFlag:this.m_flags&~f.e_touchingFlag;0==E&&1==I&&C.BeginContact(this);1==E&&0==I&&C.EndContact(this);0==(this.m_flags&f.e_sensorFlag)&&C.PreSolve(this,this.m_oldManifold)};f.prototype.Evaluate=function(){};f.prototype.ComputeTOI=function(C,E){f.s_input.proxyA.Set(this.m_fixtureA.GetShape());f.s_input.proxyB.Set(this.m_fixtureB.GetShape());f.s_input.sweepA=C;f.s_input.sweepB=E;f.s_input.tolerance=S.b2_linearSlop;return r.TimeOfImpact(f.s_input)};Box2D$$module$js$box2d$Box2D.postDefs.push(function(){Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact.e_sensorFlag=
1;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact.e_continuousFlag=2;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact.e_islandFlag=4;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact.e_toiFlag=8;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact.e_touchingFlag=16;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact.e_enabledFlag=32;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact.e_filterFlag=64;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact.s_input=
new y});h.b2ContactConstraint=function(){this.localPlaneNormal=new X;this.localPoint=new X;this.normal=new X;this.normalMass=new T;this.K=new T};h.prototype.b2ContactConstraint=function(){this.points=new Vector$$module$js$box2d$Box2D(S.b2_maxManifoldPoints);for(var C=0;C<S.b2_maxManifoldPoints;C++)this.points[C]=new g};g.b2ContactConstraintPoint=function(){this.localPoint=new X;this.rA=new X;this.rB=new X};k.b2ContactEdge=function(){};n.b2ContactFactory=function(){};n.prototype.b2ContactFactory=function(C){this.m_allocator=
C;this.InitializeRegisters()};n.prototype.AddType=function(C,E,I,L){void 0===I&&(I=0);void 0===L&&(L=0);this.m_registers[I][L].createFcn=C;this.m_registers[I][L].destroyFcn=E;this.m_registers[I][L].primary=!0;I!=L&&(this.m_registers[L][I].createFcn=C,this.m_registers[L][I].destroyFcn=E,this.m_registers[L][I].primary=!1)};n.prototype.InitializeRegisters=function(){this.m_registers=new Vector$$module$js$box2d$Box2D(d.e_shapeTypeCount);for(var C=0;C<d.e_shapeTypeCount;C++){this.m_registers[C]=new Vector$$module$js$box2d$Box2D(d.e_shapeTypeCount);
for(var E=0;E<d.e_shapeTypeCount;E++)this.m_registers[C][E]=new w}this.AddType(e.Create,e.Destroy,d.e_circleShape,d.e_circleShape);this.AddType(N.Create,N.Destroy,d.e_polygonShape,d.e_circleShape);this.AddType(A.Create,A.Destroy,d.e_polygonShape,d.e_polygonShape);this.AddType(z.Create,z.Destroy,d.e_edgeShape,d.e_circleShape);this.AddType(p.Create,p.Destroy,d.e_polygonShape,d.e_edgeShape)};n.prototype.Create=function(C,E){var I=C.GetType(),L=E.GetType();I=this.m_registers[I][L];if(I.pool)return L=
I.pool,I.pool=L.m_next,I.poolCount--,L.Reset(C,E),L;L=I.createFcn;return null!=L?(I.primary?(L=L(this.m_allocator),L.Reset(C,E)):(L=L(this.m_allocator),L.Reset(E,C)),L):null};n.prototype.Destroy=function(C){0<C.m_manifold.m_pointCount&&(C.m_fixtureA.m_body.SetAwake(!0),C.m_fixtureB.m_body.SetAwake(!0));var E=C.m_fixtureA.GetType(),I=C.m_fixtureB.GetType();E=this.m_registers[E][I];E.poolCount++;C.m_next=E.pool;E.pool=C;E=E.destroyFcn;E(C,this.m_allocator)};w.b2ContactRegister=function(){};v.b2ContactResult=
function(){this.position=new X;this.normal=new X;this.id=new Z};x.b2ContactSolver=function(){this.m_step=new P;this.m_constraints=new Vector$$module$js$box2d$Box2D};x.prototype.b2ContactSolver=function(){};x.prototype.Initialize=function(C,E,I,L){void 0===I&&(I=0);this.m_step.Set(C);this.m_allocator=L;for(this.m_constraintCount=I;this.m_constraints.length<this.m_constraintCount;)this.m_constraints[this.m_constraints.length]=new h;for(C=0;C<I;++C){var m=E[C];L=m.m_fixtureA;var u=m.m_fixtureB,D=L.m_shape.m_radius,
l=u.m_shape.m_radius,q=L.m_body,t=u.m_body,B=m.GetManifold(),H=S.b2MixFriction(L.GetFriction(),u.GetFriction()),M=S.b2MixRestitution(L.GetRestitution(),u.GetRestitution()),K=q.m_linearVelocity.x,R=q.m_linearVelocity.y,Q=t.m_linearVelocity.x,Y=t.m_linearVelocity.y,da=q.m_angularVelocity,ca=t.m_angularVelocity;S.b2Assert(0<B.m_pointCount);x.s_worldManifold.Initialize(B,q.m_xf,D,t.m_xf,l);u=x.s_worldManifold.m_normal.x;m=x.s_worldManifold.m_normal.y;L=this.m_constraints[C];L.bodyA=q;L.bodyB=t;L.manifold=
B;L.normal.x=u;L.normal.y=m;L.pointCount=B.m_pointCount;L.friction=H;L.restitution=M;L.localPlaneNormal.x=B.m_localPlaneNormal.x;L.localPlaneNormal.y=B.m_localPlaneNormal.y;L.localPoint.x=B.m_localPoint.x;L.localPoint.y=B.m_localPoint.y;L.radius=D+l;L.type=B.m_type;for(D=0;D<L.pointCount;++D){H=B.m_points[D];l=L.points[D];l.normalImpulse=H.m_normalImpulse;l.tangentImpulse=H.m_tangentImpulse;l.localPoint.SetV(H.m_localPoint);H=l.rA.x=x.s_worldManifold.m_points[D].x-q.m_sweep.c.x;M=l.rA.y=x.s_worldManifold.m_points[D].y-
q.m_sweep.c.y;var ia=l.rB.x=x.s_worldManifold.m_points[D].x-t.m_sweep.c.x,na=l.rB.y=x.s_worldManifold.m_points[D].y-t.m_sweep.c.y,fa=H*m-M*u,la=ia*m-na*u;fa*=fa;la*=la;l.normalMass=1/(q.m_invMass+t.m_invMass+q.m_invI*fa+t.m_invI*la);var qa=q.m_mass*q.m_invMass+t.m_mass*t.m_invMass;qa+=q.m_mass*q.m_invI*fa+t.m_mass*t.m_invI*la;l.equalizedMass=1/qa;la=m;qa=-u;fa=H*qa-M*la;la=ia*qa-na*la;fa*=fa;la*=la;l.tangentMass=1/(q.m_invMass+t.m_invMass+q.m_invI*fa+t.m_invI*la);l.velocityBias=0;H=L.normal.x*(Q+
-ca*na-K- -da*M)+L.normal.y*(Y+ca*ia-R-da*H);H<-S.b2_velocityThreshold&&(l.velocityBias+=-L.restitution*H)}2==L.pointCount&&(Y=L.points[0],Q=L.points[1],B=q.m_invMass,q=q.m_invI,K=t.m_invMass,t=t.m_invI,R=Y.rA.x*m-Y.rA.y*u,Y=Y.rB.x*m-Y.rB.y*u,da=Q.rA.x*m-Q.rA.y*u,Q=Q.rB.x*m-Q.rB.y*u,u=B+K+q*R*R+t*Y*Y,m=B+K+q*da*da+t*Q*Q,t=B+K+q*R*da+t*Y*Q,u*u<100*(u*m-t*t)?(L.K.col1.Set(u,t),L.K.col2.Set(t,m),L.K.GetInverse(L.normalMass)):L.pointCount=1)}};x.prototype.InitVelocityConstraints=function(C){for(var E=
0;E<this.m_constraintCount;++E){var I=this.m_constraints[E],L=I.bodyA,m=I.bodyB,u=L.m_invMass,D=L.m_invI,l=m.m_invMass,q=m.m_invI,t=I.normal.x,B=I.normal.y,H=B,M=-t,K;if(C.warmStarting){var R=I.pointCount;for(K=0;K<R;++K){var Q=I.points[K];Q.normalImpulse*=C.dtRatio;Q.tangentImpulse*=C.dtRatio;var Y=Q.normalImpulse*t+Q.tangentImpulse*H,da=Q.normalImpulse*B+Q.tangentImpulse*M;L.m_angularVelocity-=D*(Q.rA.x*da-Q.rA.y*Y);L.m_linearVelocity.x-=u*Y;L.m_linearVelocity.y-=u*da;m.m_angularVelocity+=q*(Q.rB.x*
da-Q.rB.y*Y);m.m_linearVelocity.x+=l*Y;m.m_linearVelocity.y+=l*da}}else for(R=I.pointCount,K=0;K<R;++K)L=I.points[K],L.normalImpulse=0,L.tangentImpulse=0}};x.prototype.SolveVelocityConstraints=function(){for(var C,E,I,L,m,u,D,l,q,t,B=0;B<this.m_constraintCount;++B){m=this.m_constraints[B];var H=m.bodyA,M=m.bodyB,K=H.m_angularVelocity,R=M.m_angularVelocity,Q=H.m_linearVelocity,Y=M.m_linearVelocity,da=H.m_invMass,ca=H.m_invI,ia=M.m_invMass,na=M.m_invI;l=m.normal.x;var fa=q=m.normal.y;t=-l;D=m.friction;
for(C=0;C<m.pointCount;C++)E=m.points[C],I=Y.x-R*E.rB.y-Q.x+K*E.rA.y,L=Y.y+R*E.rB.x-Q.y-K*E.rA.x,I=I*fa+L*t,I=E.tangentMass*-I,L=D*E.normalImpulse,L=W.Clamp(E.tangentImpulse+I,-L,L),I=L-E.tangentImpulse,u=I*fa,I*=t,Q.x-=da*u,Q.y-=da*I,K-=ca*(E.rA.x*I-E.rA.y*u),Y.x+=ia*u,Y.y+=ia*I,R+=na*(E.rB.x*I-E.rB.y*u),E.tangentImpulse=L;if(1==m.pointCount)E=m.points[0],I=Y.x+-R*E.rB.y-Q.x- -K*E.rA.y,L=Y.y+R*E.rB.x-Q.y-K*E.rA.x,m=I*l+L*q,I=-E.normalMass*(m-E.velocityBias),L=E.normalImpulse+I,L=0<L?L:0,I=L-E.normalImpulse,
u=I*l,I*=q,Q.x-=da*u,Q.y-=da*I,K-=ca*(E.rA.x*I-E.rA.y*u),Y.x+=ia*u,Y.y+=ia*I,R+=na*(E.rB.x*I-E.rB.y*u),E.normalImpulse=L;else{E=m.points[0];C=m.points[1];I=E.normalImpulse;D=C.normalImpulse;var la=(Y.x-R*E.rB.y-Q.x+K*E.rA.y)*l+(Y.y+R*E.rB.x-Q.y-K*E.rA.x)*q,qa=(Y.x-R*C.rB.y-Q.x+K*C.rA.y)*l+(Y.y+R*C.rB.x-Q.y-K*C.rA.x)*q;L=la-E.velocityBias;u=qa-C.velocityBias;t=m.K;L-=t.col1.x*I+t.col2.x*D;for(u-=t.col1.y*I+t.col2.y*D;;){t=m.normalMass;fa=-(t.col1.x*L+t.col2.x*u);t=-(t.col1.y*L+t.col2.y*u);if(0<=fa&&
0<=t){I=fa-I;D=t-D;m=I*l;I*=q;l*=D;q*=D;Q.x-=da*(m+l);Q.y-=da*(I+q);K-=ca*(E.rA.x*I-E.rA.y*m+C.rA.x*q-C.rA.y*l);Y.x+=ia*(m+l);Y.y+=ia*(I+q);R+=na*(E.rB.x*I-E.rB.y*m+C.rB.x*q-C.rB.y*l);E.normalImpulse=fa;C.normalImpulse=t;break}fa=-E.normalMass*L;t=0;qa=m.K.col1.y*fa+u;if(0<=fa&&0<=qa){I=fa-I;D=t-D;m=I*l;I*=q;l*=D;q*=D;Q.x-=da*(m+l);Q.y-=da*(I+q);K-=ca*(E.rA.x*I-E.rA.y*m+C.rA.x*q-C.rA.y*l);Y.x+=ia*(m+l);Y.y+=ia*(I+q);R+=na*(E.rB.x*I-E.rB.y*m+C.rB.x*q-C.rB.y*l);E.normalImpulse=fa;C.normalImpulse=t;
break}fa=0;t=-C.normalMass*u;la=m.K.col2.x*t+L;if(0<=t&&0<=la){I=fa-I;D=t-D;m=I*l;I*=q;l*=D;q*=D;Q.x-=da*(m+l);Q.y-=da*(I+q);K-=ca*(E.rA.x*I-E.rA.y*m+C.rA.x*q-C.rA.y*l);Y.x+=ia*(m+l);Y.y+=ia*(I+q);R+=na*(E.rB.x*I-E.rB.y*m+C.rB.x*q-C.rB.y*l);E.normalImpulse=fa;C.normalImpulse=t;break}t=fa=0;la=L;qa=u;if(0<=la&&0<=qa){I=fa-I;D=t-D;m=I*l;I*=q;l*=D;q*=D;Q.x-=da*(m+l);Q.y-=da*(I+q);K-=ca*(E.rA.x*I-E.rA.y*m+C.rA.x*q-C.rA.y*l);Y.x+=ia*(m+l);Y.y+=ia*(I+q);R+=na*(E.rB.x*I-E.rB.y*m+C.rB.x*q-C.rB.y*l);E.normalImpulse=
fa;C.normalImpulse=t;break}break}}H.m_angularVelocity=K;M.m_angularVelocity=R}};x.prototype.FinalizeVelocityConstraints=function(){for(var C=0;C<this.m_constraintCount;++C)for(var E=this.m_constraints[C],I=E.manifold,L=0;L<E.pointCount;++L){var m=I.m_points[L],u=E.points[L];m.m_normalImpulse=u.normalImpulse;m.m_tangentImpulse=u.tangentImpulse}};x.prototype.SolvePositionConstraints=function(C){void 0===C&&(C=0);for(var E=0,I=0;I<this.m_constraintCount;I++){var L=this.m_constraints[I],m=L.bodyA,u=L.bodyB,
D=m.m_mass*m.m_invMass,l=m.m_mass*m.m_invI,q=u.m_mass*u.m_invMass,t=u.m_mass*u.m_invI;x.s_psm.Initialize(L);for(var B=x.s_psm.m_normal,H=0;H<L.pointCount;H++){var M=L.points[H],K=x.s_psm.m_points[H],R=x.s_psm.m_separations[H],Q=K.x-m.m_sweep.c.x,Y=K.y-m.m_sweep.c.y,da=K.x-u.m_sweep.c.x;K=K.y-u.m_sweep.c.y;E=E<R?E:R;R=W.Clamp(C*(R+S.b2_linearSlop),-S.b2_maxLinearCorrection,0);R*=-M.equalizedMass;M=R*B.x;R*=B.y;m.m_sweep.c.x-=D*M;m.m_sweep.c.y-=D*R;m.m_sweep.a-=l*(Q*R-Y*M);m.SynchronizeTransform();
u.m_sweep.c.x+=q*M;u.m_sweep.c.y+=q*R;u.m_sweep.a+=t*(da*R-K*M);u.SynchronizeTransform()}}return E>-1.5*S.b2_linearSlop};Box2D$$module$js$box2d$Box2D.postDefs.push(function(){Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2ContactSolver.s_worldManifold=new J;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2ContactSolver.s_psm=new G});Box2D$$module$js$box2d$Box2D.inherit(z,Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact);z.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact.prototype;
z.b2EdgeAndCircleContact=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this,arguments)};z.Create=function(C){return new z};z.Destroy=function(C,E){};z.prototype.Reset=function(C,E){this.__super.Reset.call(this,C,E)};z.prototype.Evaluate=function(){var C=this.m_fixtureA.GetBody(),E=this.m_fixtureB.GetBody();this.b2CollideEdgeAndCircle(this.m_manifold,this.m_fixtureA.GetShape()instanceof b?this.m_fixtureA.GetShape():null,C.m_xf,this.m_fixtureB.GetShape()instanceof
a?this.m_fixtureB.GetShape():null,E.m_xf)};z.prototype.b2CollideEdgeAndCircle=function(C,E,I,L,m){};Box2D$$module$js$box2d$Box2D.inherit(F,Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact);F.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact.prototype;F.b2NullContact=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this,arguments)};F.prototype.b2NullContact=function(){this.__super.b2Contact.call(this)};F.prototype.Evaluate=function(){};
Box2D$$module$js$box2d$Box2D.inherit(N,Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact);N.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact.prototype;N.b2PolyAndCircleContact=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this,arguments)};N.Create=function(C){return new N};N.Destroy=function(C,E){};N.prototype.Reset=function(C,E){this.__super.Reset.call(this,C,E);S.b2Assert(C.GetType()==d.e_polygonShape);S.b2Assert(E.GetType()==
d.e_circleShape)};N.prototype.Evaluate=function(){var C=this.m_fixtureA.m_body,E=this.m_fixtureB.m_body;U.CollidePolygonAndCircle(this.m_manifold,this.m_fixtureA.GetShape()instanceof c?this.m_fixtureA.GetShape():null,C.m_xf,this.m_fixtureB.GetShape()instanceof a?this.m_fixtureB.GetShape():null,E.m_xf)};Box2D$$module$js$box2d$Box2D.inherit(p,Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact);p.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact.prototype;p.b2PolyAndEdgeContact=
function(){Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this,arguments)};p.Create=function(C){return new p};p.Destroy=function(C,E){};p.prototype.Reset=function(C,E){this.__super.Reset.call(this,C,E);S.b2Assert(C.GetType()==d.e_polygonShape);S.b2Assert(E.GetType()==d.e_edgeShape)};p.prototype.Evaluate=function(){var C=this.m_fixtureA.GetBody(),E=this.m_fixtureB.GetBody();this.b2CollidePolyAndEdge(this.m_manifold,this.m_fixtureA.GetShape()instanceof c?this.m_fixtureA.GetShape():
null,C.m_xf,this.m_fixtureB.GetShape()instanceof b?this.m_fixtureB.GetShape():null,E.m_xf)};p.prototype.b2CollidePolyAndEdge=function(C,E,I,L,m){};Box2D$$module$js$box2d$Box2D.inherit(A,Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact);A.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact.prototype;A.b2PolygonContact=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this,arguments)};A.Create=function(C){return new A};A.Destroy=function(C,
E){};A.prototype.Reset=function(C,E){this.__super.Reset.call(this,C,E)};A.prototype.Evaluate=function(){var C=this.m_fixtureA.GetBody(),E=this.m_fixtureB.GetBody();U.CollidePolygons(this.m_manifold,this.m_fixtureA.GetShape()instanceof c?this.m_fixtureA.GetShape():null,C.m_xf,this.m_fixtureB.GetShape()instanceof c?this.m_fixtureB.GetShape():null,E.m_xf)};G.b2PositionSolverManifold=function(){};G.prototype.b2PositionSolverManifold=function(){this.m_normal=new X;this.m_separations=new Vector_a2j_Number$$module$js$box2d$Box2D(S.b2_maxManifoldPoints);
this.m_points=new Vector$$module$js$box2d$Box2D(S.b2_maxManifoldPoints);for(var C=0;C<S.b2_maxManifoldPoints;C++)this.m_points[C]=new X};G.prototype.Initialize=function(C){S.b2Assert(0<C.pointCount);switch(C.type){case aa.e_circles:var E=C.bodyA.m_xf.R;var I=C.localPoint;var L=C.bodyA.m_xf.position.x+(E.col1.x*I.x+E.col2.x*I.y);var m=C.bodyA.m_xf.position.y+(E.col1.y*I.x+E.col2.y*I.y);E=C.bodyB.m_xf.R;I=C.points[0].localPoint;var u=C.bodyB.m_xf.position.x+(E.col1.x*I.x+E.col2.x*I.y);E=C.bodyB.m_xf.position.y+
(E.col1.y*I.x+E.col2.y*I.y);I=u-L;var D=E-m;var l=I*I+D*D;l>Number.MIN_VALUE*Number.MIN_VALUE?(l=Math.sqrt(l),this.m_normal.x=I/l,this.m_normal.y=D/l):(this.m_normal.x=1,this.m_normal.y=0);this.m_points[0].x=.5*(L+u);this.m_points[0].y=.5*(m+E);this.m_separations[0]=I*this.m_normal.x+D*this.m_normal.y-C.radius;break;case aa.e_faceA:E=C.bodyA.m_xf.R;I=C.localPlaneNormal;this.m_normal.x=E.col1.x*I.x+E.col2.x*I.y;this.m_normal.y=E.col1.y*I.x+E.col2.y*I.y;E=C.bodyA.m_xf.R;I=C.localPoint;u=C.bodyA.m_xf.position.x+
(E.col1.x*I.x+E.col2.x*I.y);D=C.bodyA.m_xf.position.y+(E.col1.y*I.x+E.col2.y*I.y);E=C.bodyB.m_xf.R;for(L=0;L<C.pointCount;++L)I=C.points[L].localPoint,m=C.bodyB.m_xf.position.x+(E.col1.x*I.x+E.col2.x*I.y),I=C.bodyB.m_xf.position.y+(E.col1.y*I.x+E.col2.y*I.y),this.m_separations[L]=(m-u)*this.m_normal.x+(I-D)*this.m_normal.y-C.radius,this.m_points[L].x=m,this.m_points[L].y=I;break;case aa.e_faceB:E=C.bodyB.m_xf.R;I=C.localPlaneNormal;this.m_normal.x=E.col1.x*I.x+E.col2.x*I.y;this.m_normal.y=E.col1.y*
I.x+E.col2.y*I.y;E=C.bodyB.m_xf.R;I=C.localPoint;u=C.bodyB.m_xf.position.x+(E.col1.x*I.x+E.col2.x*I.y);D=C.bodyB.m_xf.position.y+(E.col1.y*I.x+E.col2.y*I.y);E=C.bodyA.m_xf.R;for(L=0;L<C.pointCount;++L)I=C.points[L].localPoint,m=C.bodyA.m_xf.position.x+(E.col1.x*I.x+E.col2.x*I.y),I=C.bodyA.m_xf.position.y+(E.col1.y*I.x+E.col2.y*I.y),this.m_separations[L]=(m-u)*this.m_normal.x+(I-D)*this.m_normal.y-C.radius,this.m_points[L].Set(m,I);this.m_normal.x*=-1;this.m_normal.y*=-1}};Box2D$$module$js$box2d$Box2D.postDefs.push(function(){Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2PositionSolverManifold.circlePointA=
new X;Box2D$$module$js$box2d$Box2D.Dynamics.Contacts.b2PositionSolverManifold.circlePointB=new X})})();
(function(){var a=Box2D$$module$js$box2d$Box2D.Common.Math.b2Mat22,b=Box2D$$module$js$box2d$Box2D.Common.Math.b2Math,c=Box2D$$module$js$box2d$Box2D.Common.Math.b2Vec2,d=Box2D$$module$js$box2d$Box2D.Common.b2Color,e=Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2BuoyancyController,f=Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2ConstantAccelController,h=Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2ConstantForceController,g=Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2Controller,
k=Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2ControllerEdge,n=Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2GravityController,w=Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2TensorDampingController;Box2D$$module$js$box2d$Box2D.inherit(e,Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2Controller);e.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2Controller.prototype;e.b2BuoyancyController=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2Controller.b2Controller.apply(this,
arguments);this.normal=new c(0,-1);this.density=this.offset=0;this.velocity=new c(0,0);this.linearDrag=2;this.angularDrag=1;this.useDensity=!1;this.useWorldGravity=!0;this.gravity=null};e.prototype.Step=function(v){if(this.m_bodyList)for(this.useWorldGravity&&(this.gravity=this.GetWorld().GetGravity().Copy()),v=this.m_bodyList;v;v=v.nextBody){var x=v.body;if(0!=x.IsAwake()){for(var z=new c,F=new c,N=0,p=0,A=x.GetFixtureList();A;A=A.GetNext()){var G=new c,O=A.GetShape().ComputeSubmergedArea(this.normal,
this.offset,x.GetTransform(),G);N+=O;z.x+=O*G.x;z.y+=O*G.y;p+=1*O;F.x+=O*G.x;F.y+=O*G.y}z.x/=N;z.y/=N;F.x/=p;F.y/=p;N<Number.MIN_VALUE||(p=this.gravity.GetNegative(),p.Multiply(this.density*N),x.ApplyForce(p,F),F=x.GetLinearVelocityFromWorldPoint(z),F.Subtract(this.velocity),F.Multiply(-this.linearDrag*N),x.ApplyForce(F,z),x.ApplyTorque(-x.GetInertia()/x.GetMass()*N*x.GetAngularVelocity()*this.angularDrag))}}};e.prototype.Draw=function(v){var x=new c,z=new c;x.x=this.normal.x*this.offset+1E3*this.normal.y;
x.y=this.normal.y*this.offset-1E3*this.normal.x;z.x=this.normal.x*this.offset-1E3*this.normal.y;z.y=this.normal.y*this.offset+1E3*this.normal.x;var F=new d(0,0,1);v.DrawSegment(x,z,F)};Box2D$$module$js$box2d$Box2D.inherit(f,Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2Controller);f.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2Controller.prototype;f.b2ConstantAccelController=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2Controller.b2Controller.apply(this,
arguments);this.A=new c(0,0)};f.prototype.Step=function(v){v=new c(this.A.x*v.dt,this.A.y*v.dt);for(var x=this.m_bodyList;x;x=x.nextBody){var z=x.body;z.IsAwake()&&z.SetLinearVelocity(new c(z.GetLinearVelocity().x+v.x,z.GetLinearVelocity().y+v.y))}};Box2D$$module$js$box2d$Box2D.inherit(h,Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2Controller);h.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2Controller.prototype;h.b2ConstantForceController=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2Controller.b2Controller.apply(this,
arguments);this.F=new c(0,0)};h.prototype.Step=function(v){for(v=this.m_bodyList;v;v=v.nextBody){var x=v.body;x.IsAwake()&&x.ApplyForce(this.F,x.GetWorldCenter())}};g.b2Controller=function(){};g.prototype.Step=function(v){};g.prototype.Draw=function(v){};g.prototype.AddBody=function(v){var x=new k;x.controller=this;x.body=v;x.nextBody=this.m_bodyList;x.prevBody=null;this.m_bodyList=x;x.nextBody&&(x.nextBody.prevBody=x);this.m_bodyCount++;x.nextController=v.m_controllerList;x.prevController=null;v.m_controllerList=
x;x.nextController&&(x.nextController.prevController=x);v.m_controllerCount++};g.prototype.RemoveBody=function(v){for(var x=v.m_controllerList;x&&x.controller!=this;)x=x.nextController;x.prevBody&&(x.prevBody.nextBody=x.nextBody);x.nextBody&&(x.nextBody.prevBody=x.prevBody);x.nextController&&(x.nextController.prevController=x.prevController);x.prevController&&(x.prevController.nextController=x.nextController);this.m_bodyList==x&&(this.m_bodyList=x.nextBody);v.m_controllerList==x&&(v.m_controllerList=
x.nextController);v.m_controllerCount--;this.m_bodyCount--};g.prototype.Clear=function(){for(;this.m_bodyList;)this.RemoveBody(this.m_bodyList.body)};g.prototype.GetNext=function(){return this.m_next};g.prototype.GetWorld=function(){return this.m_world};g.prototype.GetBodyList=function(){return this.m_bodyList};k.b2ControllerEdge=function(){};Box2D$$module$js$box2d$Box2D.inherit(n,Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2Controller);n.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2Controller.prototype;
n.b2GravityController=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2Controller.b2Controller.apply(this,arguments);this.G=1;this.invSqr=!0};n.prototype.Step=function(v){var x;if(this.invSqr)for(v=this.m_bodyList;v;v=v.nextBody){var z=v.body;var F=z.GetWorldCenter();var N=z.GetMass();for(x=this.m_bodyList;x!=v;x=x.nextBody){var p=x.body;var A=p.GetWorldCenter();var G=A.x-F.x;var O=A.y-F.y;var P=G*G+O*O;P<Number.MIN_VALUE||(G=new c(G,O),G.Multiply(this.G/P/Math.sqrt(P)*N*p.GetMass()),
z.IsAwake()&&z.ApplyForce(G,F),G.Multiply(-1),p.IsAwake()&&p.ApplyForce(G,A))}}else for(v=this.m_bodyList;v;v=v.nextBody)for(z=v.body,F=z.GetWorldCenter(),N=z.GetMass(),x=this.m_bodyList;x!=v;x=x.nextBody)p=x.body,A=p.GetWorldCenter(),G=A.x-F.x,O=A.y-F.y,P=G*G+O*O,P<Number.MIN_VALUE||(G=new c(G,O),G.Multiply(this.G/P*N*p.GetMass()),z.IsAwake()&&z.ApplyForce(G,F),G.Multiply(-1),p.IsAwake()&&p.ApplyForce(G,A))};Box2D$$module$js$box2d$Box2D.inherit(w,Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2Controller);
w.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2Controller.prototype;w.b2TensorDampingController=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Controllers.b2Controller.b2Controller.apply(this,arguments);this.T=new a;this.maxTimestep=0};w.prototype.SetAxisAligned=function(v,x){void 0===v&&(v=0);void 0===x&&(x=0);this.T.col1.x=-v;this.T.col1.y=0;this.T.col2.x=0;this.T.col2.y=-x;this.maxTimestep=0<v||0<x?1/Math.max(v,x):0};w.prototype.Step=function(v){v=v.dt;if(!(v<=Number.MIN_VALUE)){v>
this.maxTimestep&&0<this.maxTimestep&&(v=this.maxTimestep);for(var x=this.m_bodyList;x;x=x.nextBody){var z=x.body;if(z.IsAwake()){var F=z.GetWorldVector(b.MulMV(this.T,z.GetLocalVector(z.GetLinearVelocity())));z.SetLinearVelocity(new c(z.GetLinearVelocity().x+F.x*v,z.GetLinearVelocity().y+F.y*v))}}}}})();
(function(){var a=Box2D$$module$js$box2d$Box2D.Common.b2Settings,b=Box2D$$module$js$box2d$Box2D.Common.Math.b2Mat22,c=Box2D$$module$js$box2d$Box2D.Common.Math.b2Mat33,d=Box2D$$module$js$box2d$Box2D.Common.Math.b2Math,e=Box2D$$module$js$box2d$Box2D.Common.Math.b2Vec2,f=Box2D$$module$js$box2d$Box2D.Common.Math.b2Vec3,h=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2DistanceJoint,g=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2DistanceJointDef,k=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2FrictionJoint,
n=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2FrictionJointDef,w=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2GearJoint,v=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2GearJointDef,x=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Jacobian,z=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint,F=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef,N=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointEdge,p=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2LineJoint,A=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2LineJointDef,
G=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2MouseJoint,O=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2MouseJointDef,P=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2PrismaticJoint,S=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2PrismaticJointDef,T=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2PulleyJoint,W=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2PulleyJointDef,X=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2RevoluteJoint,U=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2RevoluteJointDef,
Z=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2WeldJoint,aa=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2WeldJointDef;Box2D$$module$js$box2d$Box2D.inherit(h,Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint);h.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.prototype;h.b2DistanceJoint=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this,arguments);this.m_localAnchor1=new e;this.m_localAnchor2=new e;this.m_u=new e};h.prototype.GetAnchorA=
function(){return this.m_bodyA.GetWorldPoint(this.m_localAnchor1)};h.prototype.GetAnchorB=function(){return this.m_bodyB.GetWorldPoint(this.m_localAnchor2)};h.prototype.GetReactionForce=function(r){void 0===r&&(r=0);return new e(r*this.m_impulse*this.m_u.x,r*this.m_impulse*this.m_u.y)};h.prototype.GetReactionTorque=function(r){return 0};h.prototype.GetLength=function(){return this.m_length};h.prototype.SetLength=function(r){void 0===r&&(r=0);this.m_length=r};h.prototype.GetFrequency=function(){return this.m_frequencyHz};
h.prototype.SetFrequency=function(r){void 0===r&&(r=0);this.m_frequencyHz=r};h.prototype.GetDampingRatio=function(){return this.m_dampingRatio};h.prototype.SetDampingRatio=function(r){void 0===r&&(r=0);this.m_dampingRatio=r};h.prototype.b2DistanceJoint=function(r){this.__super.b2Joint.call(this,r);this.m_localAnchor1.SetV(r.localAnchorA);this.m_localAnchor2.SetV(r.localAnchorB);this.m_length=r.length;this.m_frequencyHz=r.frequencyHz;this.m_dampingRatio=r.dampingRatio;this.m_bias=this.m_gamma=this.m_impulse=
0};h.prototype.InitVelocityConstraints=function(r){var y=this.m_bodyA,J=this.m_bodyB;var C=y.m_xf.R;var E=this.m_localAnchor1.x-y.m_sweep.localCenter.x,I=this.m_localAnchor1.y-y.m_sweep.localCenter.y;var L=C.col1.x*E+C.col2.x*I;I=C.col1.y*E+C.col2.y*I;E=L;C=J.m_xf.R;var m=this.m_localAnchor2.x-J.m_sweep.localCenter.x,u=this.m_localAnchor2.y-J.m_sweep.localCenter.y;L=C.col1.x*m+C.col2.x*u;u=C.col1.y*m+C.col2.y*u;m=L;this.m_u.x=J.m_sweep.c.x+m-y.m_sweep.c.x-E;this.m_u.y=J.m_sweep.c.y+u-y.m_sweep.c.y-
I;L=Math.sqrt(this.m_u.x*this.m_u.x+this.m_u.y*this.m_u.y);L>a.b2_linearSlop?this.m_u.Multiply(1/L):this.m_u.SetZero();C=E*this.m_u.y-I*this.m_u.x;var D=m*this.m_u.y-u*this.m_u.x;C=y.m_invMass+y.m_invI*C*C+J.m_invMass+J.m_invI*D*D;this.m_mass=0!=C?1/C:0;if(0<this.m_frequencyHz){L-=this.m_length;D=2*Math.PI*this.m_frequencyHz;var l=this.m_mass*D*D;this.m_gamma=r.dt*(2*this.m_mass*this.m_dampingRatio*D+r.dt*l);this.m_gamma=0!=this.m_gamma?1/this.m_gamma:0;this.m_bias=L*r.dt*l*this.m_gamma;this.m_mass=
C+this.m_gamma;this.m_mass=0!=this.m_mass?1/this.m_mass:0}r.warmStarting?(this.m_impulse*=r.dtRatio,r=this.m_impulse*this.m_u.x,C=this.m_impulse*this.m_u.y,y.m_linearVelocity.x-=y.m_invMass*r,y.m_linearVelocity.y-=y.m_invMass*C,y.m_angularVelocity-=y.m_invI*(E*C-I*r),J.m_linearVelocity.x+=J.m_invMass*r,J.m_linearVelocity.y+=J.m_invMass*C,J.m_angularVelocity+=J.m_invI*(m*C-u*r)):this.m_impulse=0};h.prototype.SolveVelocityConstraints=function(r){r=this.m_bodyA;var y=this.m_bodyB;var J=r.m_xf.R;var C=
this.m_localAnchor1.x-r.m_sweep.localCenter.x,E=this.m_localAnchor1.y-r.m_sweep.localCenter.y,I=J.col1.x*C+J.col2.x*E;E=J.col1.y*C+J.col2.y*E;C=I;J=y.m_xf.R;var L=this.m_localAnchor2.x-y.m_sweep.localCenter.x,m=this.m_localAnchor2.y-y.m_sweep.localCenter.y;I=J.col1.x*L+J.col2.x*m;m=J.col1.y*L+J.col2.y*m;L=I;I=-this.m_mass*(this.m_u.x*(y.m_linearVelocity.x+-y.m_angularVelocity*m-(r.m_linearVelocity.x+-r.m_angularVelocity*E))+this.m_u.y*(y.m_linearVelocity.y+y.m_angularVelocity*L-(r.m_linearVelocity.y+
r.m_angularVelocity*C))+this.m_bias+this.m_gamma*this.m_impulse);this.m_impulse+=I;J=I*this.m_u.x;I*=this.m_u.y;r.m_linearVelocity.x-=r.m_invMass*J;r.m_linearVelocity.y-=r.m_invMass*I;r.m_angularVelocity-=r.m_invI*(C*I-E*J);y.m_linearVelocity.x+=y.m_invMass*J;y.m_linearVelocity.y+=y.m_invMass*I;y.m_angularVelocity+=y.m_invI*(L*I-m*J)};h.prototype.SolvePositionConstraints=function(r){if(0<this.m_frequencyHz)return!0;r=this.m_bodyA;var y=this.m_bodyB;var J=r.m_xf.R;var C=this.m_localAnchor1.x-r.m_sweep.localCenter.x,
E=this.m_localAnchor1.y-r.m_sweep.localCenter.y,I=J.col1.x*C+J.col2.x*E;E=J.col1.y*C+J.col2.y*E;C=I;J=y.m_xf.R;var L=this.m_localAnchor2.x-y.m_sweep.localCenter.x,m=this.m_localAnchor2.y-y.m_sweep.localCenter.y;I=J.col1.x*L+J.col2.x*m;m=J.col1.y*L+J.col2.y*m;L=I;I=y.m_sweep.c.x+L-r.m_sweep.c.x-C;var u=y.m_sweep.c.y+m-r.m_sweep.c.y-E;J=Math.sqrt(I*I+u*u);I/=J;u/=J;J-=this.m_length;J=d.Clamp(J,-a.b2_maxLinearCorrection,a.b2_maxLinearCorrection);var D=-this.m_mass*J;this.m_u.Set(I,u);I=D*this.m_u.x;
u=D*this.m_u.y;r.m_sweep.c.x-=r.m_invMass*I;r.m_sweep.c.y-=r.m_invMass*u;r.m_sweep.a-=r.m_invI*(C*u-E*I);y.m_sweep.c.x+=y.m_invMass*I;y.m_sweep.c.y+=y.m_invMass*u;y.m_sweep.a+=y.m_invI*(L*u-m*I);r.SynchronizeTransform();y.SynchronizeTransform();return d.Abs(J)<a.b2_linearSlop};Box2D$$module$js$box2d$Box2D.inherit(g,Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef);g.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef.prototype;g.b2DistanceJointDef=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this,
arguments);this.localAnchorA=new e;this.localAnchorB=new e};g.prototype.b2DistanceJointDef=function(){this.__super.b2JointDef.call(this);this.type=z.e_distanceJoint;this.length=1;this.dampingRatio=this.frequencyHz=0};g.prototype.Initialize=function(r,y,J,C){this.bodyA=r;this.bodyB=y;this.localAnchorA.SetV(this.bodyA.GetLocalPoint(J));this.localAnchorB.SetV(this.bodyB.GetLocalPoint(C));r=C.x-J.x;J=C.y-J.y;this.length=Math.sqrt(r*r+J*J);this.dampingRatio=this.frequencyHz=0};Box2D$$module$js$box2d$Box2D.inherit(k,
Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint);k.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.prototype;k.b2FrictionJoint=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this,arguments);this.m_localAnchorA=new e;this.m_localAnchorB=new e;this.m_linearMass=new b;this.m_linearImpulse=new e};k.prototype.GetAnchorA=function(){return this.m_bodyA.GetWorldPoint(this.m_localAnchorA)};k.prototype.GetAnchorB=function(){return this.m_bodyB.GetWorldPoint(this.m_localAnchorB)};
k.prototype.GetReactionForce=function(r){void 0===r&&(r=0);return new e(r*this.m_linearImpulse.x,r*this.m_linearImpulse.y)};k.prototype.GetReactionTorque=function(r){void 0===r&&(r=0);return r*this.m_angularImpulse};k.prototype.SetMaxForce=function(r){void 0===r&&(r=0);this.m_maxForce=r};k.prototype.GetMaxForce=function(){return this.m_maxForce};k.prototype.SetMaxTorque=function(r){void 0===r&&(r=0);this.m_maxTorque=r};k.prototype.GetMaxTorque=function(){return this.m_maxTorque};k.prototype.b2FrictionJoint=
function(r){this.__super.b2Joint.call(this,r);this.m_localAnchorA.SetV(r.localAnchorA);this.m_localAnchorB.SetV(r.localAnchorB);this.m_linearMass.SetZero();this.m_angularMass=0;this.m_linearImpulse.SetZero();this.m_angularImpulse=0;this.m_maxForce=r.maxForce;this.m_maxTorque=r.maxTorque};k.prototype.InitVelocityConstraints=function(r){var y=this.m_bodyA,J=this.m_bodyB;var C=y.m_xf.R;var E=this.m_localAnchorA.x-y.m_sweep.localCenter.x,I=this.m_localAnchorA.y-y.m_sweep.localCenter.y;var L=C.col1.x*
E+C.col2.x*I;I=C.col1.y*E+C.col2.y*I;E=L;C=J.m_xf.R;var m=this.m_localAnchorB.x-J.m_sweep.localCenter.x,u=this.m_localAnchorB.y-J.m_sweep.localCenter.y;L=C.col1.x*m+C.col2.x*u;u=C.col1.y*m+C.col2.y*u;m=L;C=y.m_invMass;L=J.m_invMass;var D=y.m_invI,l=J.m_invI,q=new b;q.col1.x=C+L;q.col2.x=0;q.col1.y=0;q.col2.y=C+L;q.col1.x+=D*I*I;q.col2.x+=-D*E*I;q.col1.y+=-D*E*I;q.col2.y+=D*E*E;q.col1.x+=l*u*u;q.col2.x+=-l*m*u;q.col1.y+=-l*m*u;q.col2.y+=l*m*m;q.GetInverse(this.m_linearMass);this.m_angularMass=D+l;
0<this.m_angularMass&&(this.m_angularMass=1/this.m_angularMass);r.warmStarting?(this.m_linearImpulse.x*=r.dtRatio,this.m_linearImpulse.y*=r.dtRatio,this.m_angularImpulse*=r.dtRatio,r=this.m_linearImpulse,y.m_linearVelocity.x-=C*r.x,y.m_linearVelocity.y-=C*r.y,y.m_angularVelocity-=D*(E*r.y-I*r.x+this.m_angularImpulse),J.m_linearVelocity.x+=L*r.x,J.m_linearVelocity.y+=L*r.y,J.m_angularVelocity+=l*(m*r.y-u*r.x+this.m_angularImpulse)):(this.m_linearImpulse.SetZero(),this.m_angularImpulse=0)};k.prototype.SolveVelocityConstraints=
function(r){var y=this.m_bodyA,J=this.m_bodyB,C=y.m_linearVelocity,E=y.m_angularVelocity,I=J.m_linearVelocity,L=J.m_angularVelocity,m=y.m_invMass,u=J.m_invMass,D=y.m_invI,l=J.m_invI;var q=y.m_xf.R;var t=this.m_localAnchorA.x-y.m_sweep.localCenter.x,B=this.m_localAnchorA.y-y.m_sweep.localCenter.y;var H=q.col1.x*t+q.col2.x*B;B=q.col1.y*t+q.col2.y*B;t=H;q=J.m_xf.R;var M=this.m_localAnchorB.x-J.m_sweep.localCenter.x,K=this.m_localAnchorB.y-J.m_sweep.localCenter.y;H=q.col1.x*M+q.col2.x*K;K=q.col1.y*M+
q.col2.y*K;M=H;H=-this.m_angularMass*(L-E);var R=this.m_angularImpulse;q=r.dt*this.m_maxTorque;this.m_angularImpulse=d.Clamp(this.m_angularImpulse+H,-q,q);H=this.m_angularImpulse-R;E-=D*H;L+=l*H;q=d.MulMV(this.m_linearMass,new e(-(I.x-L*K-C.x+E*B),-(I.y+L*M-C.y-E*t)));H=this.m_linearImpulse.Copy();this.m_linearImpulse.Add(q);q=r.dt*this.m_maxForce;this.m_linearImpulse.LengthSquared()>q*q&&(this.m_linearImpulse.Normalize(),this.m_linearImpulse.Multiply(q));q=d.SubtractVV(this.m_linearImpulse,H);C.x-=
m*q.x;C.y-=m*q.y;E-=D*(t*q.y-B*q.x);I.x+=u*q.x;I.y+=u*q.y;L+=l*(M*q.y-K*q.x);y.m_angularVelocity=E;J.m_angularVelocity=L};k.prototype.SolvePositionConstraints=function(r){return!0};Box2D$$module$js$box2d$Box2D.inherit(n,Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef);n.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef.prototype;n.b2FrictionJointDef=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this,arguments);this.localAnchorA=
new e;this.localAnchorB=new e};n.prototype.b2FrictionJointDef=function(){this.__super.b2JointDef.call(this);this.type=z.e_frictionJoint;this.maxTorque=this.maxForce=0};n.prototype.Initialize=function(r,y,J){this.bodyA=r;this.bodyB=y;this.localAnchorA.SetV(this.bodyA.GetLocalPoint(J));this.localAnchorB.SetV(this.bodyB.GetLocalPoint(J))};Box2D$$module$js$box2d$Box2D.inherit(w,Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint);w.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.prototype;
w.b2GearJoint=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this,arguments);this.m_groundAnchor1=new e;this.m_groundAnchor2=new e;this.m_localAnchor1=new e;this.m_localAnchor2=new e;this.m_J=new x};w.prototype.GetAnchorA=function(){return this.m_bodyA.GetWorldPoint(this.m_localAnchor1)};w.prototype.GetAnchorB=function(){return this.m_bodyB.GetWorldPoint(this.m_localAnchor2)};w.prototype.GetReactionForce=function(r){void 0===r&&(r=0);return new e(r*this.m_impulse*this.m_J.linearB.x,
r*this.m_impulse*this.m_J.linearB.y)};w.prototype.GetReactionTorque=function(r){void 0===r&&(r=0);var y=this.m_bodyB.m_xf.R,J=this.m_localAnchor1.x-this.m_bodyB.m_sweep.localCenter.x,C=this.m_localAnchor1.y-this.m_bodyB.m_sweep.localCenter.y,E=y.col1.x*J+y.col2.x*C;C=y.col1.y*J+y.col2.y*C;return r*(this.m_impulse*this.m_J.angularB-E*this.m_impulse*this.m_J.linearB.y+C*this.m_impulse*this.m_J.linearB.x)};w.prototype.GetRatio=function(){return this.m_ratio};w.prototype.SetRatio=function(r){void 0===
r&&(r=0);this.m_ratio=r};w.prototype.b2GearJoint=function(r){this.__super.b2Joint.call(this,r);var y=r.joint1.m_type,J=r.joint2.m_type;this.m_prismatic2=this.m_revolute2=this.m_prismatic1=this.m_revolute1=null;this.m_ground1=r.joint1.GetBodyA();this.m_bodyA=r.joint1.GetBodyB();y==z.e_revoluteJoint?(this.m_revolute1=r.joint1 instanceof X?r.joint1:null,this.m_groundAnchor1.SetV(this.m_revolute1.m_localAnchor1),this.m_localAnchor1.SetV(this.m_revolute1.m_localAnchor2),y=this.m_revolute1.GetJointAngle()):
(this.m_prismatic1=r.joint1 instanceof P?r.joint1:null,this.m_groundAnchor1.SetV(this.m_prismatic1.m_localAnchor1),this.m_localAnchor1.SetV(this.m_prismatic1.m_localAnchor2),y=this.m_prismatic1.GetJointTranslation());this.m_ground2=r.joint2.GetBodyA();this.m_bodyB=r.joint2.GetBodyB();J==z.e_revoluteJoint?(this.m_revolute2=r.joint2 instanceof X?r.joint2:null,this.m_groundAnchor2.SetV(this.m_revolute2.m_localAnchor1),this.m_localAnchor2.SetV(this.m_revolute2.m_localAnchor2),J=this.m_revolute2.GetJointAngle()):
(this.m_prismatic2=r.joint2 instanceof P?r.joint2:null,this.m_groundAnchor2.SetV(this.m_prismatic2.m_localAnchor1),this.m_localAnchor2.SetV(this.m_prismatic2.m_localAnchor2),J=this.m_prismatic2.GetJointTranslation());this.m_ratio=r.ratio;this.m_constant=y+this.m_ratio*J;this.m_impulse=0};w.prototype.InitVelocityConstraints=function(r){var y=this.m_ground1,J=this.m_ground2,C=this.m_bodyA,E=this.m_bodyB,I=0;this.m_J.SetZero();if(this.m_revolute1)this.m_J.angularA=-1,I+=C.m_invI;else{var L=y.m_xf.R;
var m=this.m_prismatic1.m_localXAxis1;y=L.col1.x*m.x+L.col2.x*m.y;m=L.col1.y*m.x+L.col2.y*m.y;L=C.m_xf.R;var u=this.m_localAnchor1.x-C.m_sweep.localCenter.x;var D=this.m_localAnchor1.y-C.m_sweep.localCenter.y;var l=L.col1.x*u+L.col2.x*D;D=L.col1.y*u+L.col2.y*D;L=l*m-D*y;this.m_J.linearA.Set(-y,-m);this.m_J.angularA=-L;I+=C.m_invMass+C.m_invI*L*L}this.m_revolute2?(this.m_J.angularB=-this.m_ratio,I+=this.m_ratio*this.m_ratio*E.m_invI):(L=J.m_xf.R,m=this.m_prismatic2.m_localXAxis1,y=L.col1.x*m.x+L.col2.x*
m.y,m=L.col1.y*m.x+L.col2.y*m.y,L=E.m_xf.R,u=this.m_localAnchor2.x-E.m_sweep.localCenter.x,D=this.m_localAnchor2.y-E.m_sweep.localCenter.y,l=L.col1.x*u+L.col2.x*D,D=L.col1.y*u+L.col2.y*D,L=l*m-D*y,this.m_J.linearB.Set(-this.m_ratio*y,-this.m_ratio*m),this.m_J.angularB=-this.m_ratio*L,I+=this.m_ratio*this.m_ratio*(E.m_invMass+E.m_invI*L*L));this.m_mass=0<I?1/I:0;r.warmStarting?(C.m_linearVelocity.x+=C.m_invMass*this.m_impulse*this.m_J.linearA.x,C.m_linearVelocity.y+=C.m_invMass*this.m_impulse*this.m_J.linearA.y,
C.m_angularVelocity+=C.m_invI*this.m_impulse*this.m_J.angularA,E.m_linearVelocity.x+=E.m_invMass*this.m_impulse*this.m_J.linearB.x,E.m_linearVelocity.y+=E.m_invMass*this.m_impulse*this.m_J.linearB.y,E.m_angularVelocity+=E.m_invI*this.m_impulse*this.m_J.angularB):this.m_impulse=0};w.prototype.SolveVelocityConstraints=function(r){r=this.m_bodyA;var y=this.m_bodyB,J=this.m_J.Compute(r.m_linearVelocity,r.m_angularVelocity,y.m_linearVelocity,y.m_angularVelocity);J*=-this.m_mass;this.m_impulse+=J;r.m_linearVelocity.x+=
r.m_invMass*J*this.m_J.linearA.x;r.m_linearVelocity.y+=r.m_invMass*J*this.m_J.linearA.y;r.m_angularVelocity+=r.m_invI*J*this.m_J.angularA;y.m_linearVelocity.x+=y.m_invMass*J*this.m_J.linearB.x;y.m_linearVelocity.y+=y.m_invMass*J*this.m_J.linearB.y;y.m_angularVelocity+=y.m_invI*J*this.m_J.angularB};w.prototype.SolvePositionConstraints=function(r){r=this.m_bodyA;var y=this.m_bodyB;var J=this.m_revolute1?this.m_revolute1.GetJointAngle():this.m_prismatic1.GetJointTranslation();var C=this.m_revolute2?
this.m_revolute2.GetJointAngle():this.m_prismatic2.GetJointTranslation();J=-this.m_mass*(this.m_constant-(J+this.m_ratio*C));r.m_sweep.c.x+=r.m_invMass*J*this.m_J.linearA.x;r.m_sweep.c.y+=r.m_invMass*J*this.m_J.linearA.y;r.m_sweep.a+=r.m_invI*J*this.m_J.angularA;y.m_sweep.c.x+=y.m_invMass*J*this.m_J.linearB.x;y.m_sweep.c.y+=y.m_invMass*J*this.m_J.linearB.y;y.m_sweep.a+=y.m_invI*J*this.m_J.angularB;r.SynchronizeTransform();y.SynchronizeTransform();return 0<a.b2_linearSlop};Box2D$$module$js$box2d$Box2D.inherit(v,
Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef);v.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef.prototype;v.b2GearJointDef=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this,arguments)};v.prototype.b2GearJointDef=function(){this.__super.b2JointDef.call(this);this.type=z.e_gearJoint;this.joint2=this.joint1=null;this.ratio=1};x.b2Jacobian=function(){this.linearA=new e;this.linearB=new e};x.prototype.SetZero=function(){this.linearA.SetZero();
this.angularA=0;this.linearB.SetZero();this.angularB=0};x.prototype.Set=function(r,y,J,C){void 0===y&&(y=0);void 0===C&&(C=0);this.linearA.SetV(r);this.angularA=y;this.linearB.SetV(J);this.angularB=C};x.prototype.Compute=function(r,y,J,C){void 0===y&&(y=0);void 0===C&&(C=0);return this.linearA.x*r.x+this.linearA.y*r.y+this.angularA*y+(this.linearB.x*J.x+this.linearB.y*J.y)+this.angularB*C};z.b2Joint=function(){this.m_edgeA=new N;this.m_edgeB=new N;this.m_localCenterA=new e;this.m_localCenterB=new e};
z.prototype.GetType=function(){return this.m_type};z.prototype.GetAnchorA=function(){return null};z.prototype.GetAnchorB=function(){return null};z.prototype.GetReactionForce=function(r){return null};z.prototype.GetReactionTorque=function(r){return 0};z.prototype.GetBodyA=function(){return this.m_bodyA};z.prototype.GetBodyB=function(){return this.m_bodyB};z.prototype.GetNext=function(){return this.m_next};z.prototype.GetUserData=function(){return this.m_userData};z.prototype.SetUserData=function(r){this.m_userData=
r};z.prototype.IsActive=function(){return this.m_bodyA.IsActive()&&this.m_bodyB.IsActive()};z.Create=function(r,y){y=null;switch(r.type){case z.e_distanceJoint:y=new h(r instanceof g?r:null);break;case z.e_mouseJoint:y=new G(r instanceof O?r:null);break;case z.e_prismaticJoint:y=new P(r instanceof S?r:null);break;case z.e_revoluteJoint:y=new X(r instanceof U?r:null);break;case z.e_pulleyJoint:y=new T(r instanceof W?r:null);break;case z.e_gearJoint:y=new w(r instanceof v?r:null);break;case z.e_lineJoint:y=
new p(r instanceof A?r:null);break;case z.e_weldJoint:y=new Z(r instanceof aa?r:null);break;case z.e_frictionJoint:y=new k(r instanceof n?r:null)}return y};z.Destroy=function(r,y){};z.prototype.b2Joint=function(r){a.b2Assert(r.bodyA!=r.bodyB);this.m_type=r.type;this.m_next=this.m_prev=null;this.m_bodyA=r.bodyA;this.m_bodyB=r.bodyB;this.m_collideConnected=r.collideConnected;this.m_islandFlag=!1;this.m_userData=r.userData};z.prototype.InitVelocityConstraints=function(r){};z.prototype.SolveVelocityConstraints=
function(r){};z.prototype.FinalizeVelocityConstraints=function(){};z.prototype.SolvePositionConstraints=function(r){return!1};Box2D$$module$js$box2d$Box2D.postDefs.push(function(){Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.e_unknownJoint=0;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.e_revoluteJoint=1;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.e_prismaticJoint=2;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.e_distanceJoint=3;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.e_pulleyJoint=
4;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.e_mouseJoint=5;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.e_gearJoint=6;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.e_lineJoint=7;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.e_weldJoint=8;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.e_frictionJoint=9;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.e_inactiveLimit=0;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.e_atLowerLimit=1;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.e_atUpperLimit=
2;Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.e_equalLimits=3});F.b2JointDef=function(){};F.prototype.b2JointDef=function(){this.type=z.e_unknownJoint;this.bodyB=this.bodyA=this.userData=null;this.collideConnected=!1};N.b2JointEdge=function(){};Box2D$$module$js$box2d$Box2D.inherit(p,Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint);p.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.prototype;p.b2LineJoint=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this,
arguments);this.m_localAnchor1=new e;this.m_localAnchor2=new e;this.m_localXAxis1=new e;this.m_localYAxis1=new e;this.m_axis=new e;this.m_perp=new e;this.m_K=new b;this.m_impulse=new e};p.prototype.GetAnchorA=function(){return this.m_bodyA.GetWorldPoint(this.m_localAnchor1)};p.prototype.GetAnchorB=function(){return this.m_bodyB.GetWorldPoint(this.m_localAnchor2)};p.prototype.GetReactionForce=function(r){void 0===r&&(r=0);return new e(r*(this.m_impulse.x*this.m_perp.x+(this.m_motorImpulse+this.m_impulse.y)*
this.m_axis.x),r*(this.m_impulse.x*this.m_perp.y+(this.m_motorImpulse+this.m_impulse.y)*this.m_axis.y))};p.prototype.GetReactionTorque=function(r){void 0===r&&(r=0);return r*this.m_impulse.y};p.prototype.GetJointTranslation=function(){var r=this.m_bodyA,y=this.m_bodyB,J=r.GetWorldPoint(this.m_localAnchor1),C=y.GetWorldPoint(this.m_localAnchor2);y=C.x-J.x;J=C.y-J.y;r=r.GetWorldVector(this.m_localXAxis1);return r.x*y+r.y*J};p.prototype.GetJointSpeed=function(){var r=this.m_bodyA,y=this.m_bodyB;var J=
r.m_xf.R;var C=this.m_localAnchor1.x-r.m_sweep.localCenter.x,E=this.m_localAnchor1.y-r.m_sweep.localCenter.y,I=J.col1.x*C+J.col2.x*E;E=J.col1.y*C+J.col2.y*E;C=I;J=y.m_xf.R;var L=this.m_localAnchor2.x-y.m_sweep.localCenter.x,m=this.m_localAnchor2.y-y.m_sweep.localCenter.y;I=J.col1.x*L+J.col2.x*m;m=J.col1.y*L+J.col2.y*m;L=I;J=y.m_sweep.c.x+L-(r.m_sweep.c.x+C);I=y.m_sweep.c.y+m-(r.m_sweep.c.y+E);var u=r.GetWorldVector(this.m_localXAxis1),D=r.m_linearVelocity,l=y.m_linearVelocity;r=r.m_angularVelocity;
y=y.m_angularVelocity;return J*-r*u.y+I*r*u.x+(u.x*(l.x+-y*m-D.x- -r*E)+u.y*(l.y+y*L-D.y-r*C))};p.prototype.IsLimitEnabled=function(){return this.m_enableLimit};p.prototype.EnableLimit=function(r){this.m_bodyA.SetAwake(!0);this.m_bodyB.SetAwake(!0);this.m_enableLimit=r};p.prototype.GetLowerLimit=function(){return this.m_lowerTranslation};p.prototype.GetUpperLimit=function(){return this.m_upperTranslation};p.prototype.SetLimits=function(r,y){void 0===r&&(r=0);void 0===y&&(y=0);this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);this.m_lowerTranslation=r;this.m_upperTranslation=y};p.prototype.IsMotorEnabled=function(){return this.m_enableMotor};p.prototype.EnableMotor=function(r){this.m_bodyA.SetAwake(!0);this.m_bodyB.SetAwake(!0);this.m_enableMotor=r};p.prototype.SetMotorSpeed=function(r){void 0===r&&(r=0);this.m_bodyA.SetAwake(!0);this.m_bodyB.SetAwake(!0);this.m_motorSpeed=r};p.prototype.GetMotorSpeed=function(){return this.m_motorSpeed};p.prototype.SetMaxMotorForce=function(r){void 0===r&&(r=
0);this.m_bodyA.SetAwake(!0);this.m_bodyB.SetAwake(!0);this.m_maxMotorForce=r};p.prototype.GetMaxMotorForce=function(){return this.m_maxMotorForce};p.prototype.GetMotorForce=function(){return this.m_motorImpulse};p.prototype.b2LineJoint=function(r){this.__super.b2Joint.call(this,r);this.m_localAnchor1.SetV(r.localAnchorA);this.m_localAnchor2.SetV(r.localAnchorB);this.m_localXAxis1.SetV(r.localAxisA);this.m_localYAxis1.x=-this.m_localXAxis1.y;this.m_localYAxis1.y=this.m_localXAxis1.x;this.m_impulse.SetZero();
this.m_motorImpulse=this.m_motorMass=0;this.m_lowerTranslation=r.lowerTranslation;this.m_upperTranslation=r.upperTranslation;this.m_maxMotorForce=r.maxMotorForce;this.m_motorSpeed=r.motorSpeed;this.m_enableLimit=r.enableLimit;this.m_enableMotor=r.enableMotor;this.m_limitState=z.e_inactiveLimit;this.m_axis.SetZero();this.m_perp.SetZero()};p.prototype.InitVelocityConstraints=function(r){var y=this.m_bodyA,J=this.m_bodyB;this.m_localCenterA.SetV(y.GetLocalCenter());this.m_localCenterB.SetV(J.GetLocalCenter());
var C=y.GetTransform();J.GetTransform();var E=y.m_xf.R;var I=this.m_localAnchor1.x-this.m_localCenterA.x,L=this.m_localAnchor1.y-this.m_localCenterA.y;var m=E.col1.x*I+E.col2.x*L;L=E.col1.y*I+E.col2.y*L;I=m;E=J.m_xf.R;var u=this.m_localAnchor2.x-this.m_localCenterB.x,D=this.m_localAnchor2.y-this.m_localCenterB.y;m=E.col1.x*u+E.col2.x*D;D=E.col1.y*u+E.col2.y*D;u=m;E=J.m_sweep.c.x+u-y.m_sweep.c.x-I;m=J.m_sweep.c.y+D-y.m_sweep.c.y-L;this.m_invMassA=y.m_invMass;this.m_invMassB=J.m_invMass;this.m_invIA=
y.m_invI;this.m_invIB=J.m_invI;this.m_axis.SetV(d.MulMV(C.R,this.m_localXAxis1));this.m_a1=(E+I)*this.m_axis.y-(m+L)*this.m_axis.x;this.m_a2=u*this.m_axis.y-D*this.m_axis.x;this.m_motorMass=this.m_invMassA+this.m_invMassB+this.m_invIA*this.m_a1*this.m_a1+this.m_invIB*this.m_a2*this.m_a2;this.m_motorMass=this.m_motorMass>Number.MIN_VALUE?1/this.m_motorMass:0;this.m_perp.SetV(d.MulMV(C.R,this.m_localYAxis1));this.m_s1=(E+I)*this.m_perp.y-(m+L)*this.m_perp.x;this.m_s2=u*this.m_perp.y-D*this.m_perp.x;
C=this.m_invMassA;I=this.m_invMassB;L=this.m_invIA;u=this.m_invIB;this.m_K.col1.x=C+I+L*this.m_s1*this.m_s1+u*this.m_s2*this.m_s2;this.m_K.col1.y=L*this.m_s1*this.m_a1+u*this.m_s2*this.m_a2;this.m_K.col2.x=this.m_K.col1.y;this.m_K.col2.y=C+I+L*this.m_a1*this.m_a1+u*this.m_a2*this.m_a2;this.m_enableLimit?(E=this.m_axis.x*E+this.m_axis.y*m,d.Abs(this.m_upperTranslation-this.m_lowerTranslation)<2*a.b2_linearSlop?this.m_limitState=z.e_equalLimits:E<=this.m_lowerTranslation?this.m_limitState!=z.e_atLowerLimit&&
(this.m_limitState=z.e_atLowerLimit,this.m_impulse.y=0):E>=this.m_upperTranslation?this.m_limitState!=z.e_atUpperLimit&&(this.m_limitState=z.e_atUpperLimit,this.m_impulse.y=0):(this.m_limitState=z.e_inactiveLimit,this.m_impulse.y=0)):this.m_limitState=z.e_inactiveLimit;0==this.m_enableMotor&&(this.m_motorImpulse=0);r.warmStarting?(this.m_impulse.x*=r.dtRatio,this.m_impulse.y*=r.dtRatio,this.m_motorImpulse*=r.dtRatio,r=this.m_impulse.x*this.m_perp.x+(this.m_motorImpulse+this.m_impulse.y)*this.m_axis.x,
E=this.m_impulse.x*this.m_perp.y+(this.m_motorImpulse+this.m_impulse.y)*this.m_axis.y,m=this.m_impulse.x*this.m_s1+(this.m_motorImpulse+this.m_impulse.y)*this.m_a1,C=this.m_impulse.x*this.m_s2+(this.m_motorImpulse+this.m_impulse.y)*this.m_a2,y.m_linearVelocity.x-=this.m_invMassA*r,y.m_linearVelocity.y-=this.m_invMassA*E,y.m_angularVelocity-=this.m_invIA*m,J.m_linearVelocity.x+=this.m_invMassB*r,J.m_linearVelocity.y+=this.m_invMassB*E,J.m_angularVelocity+=this.m_invIB*C):(this.m_impulse.SetZero(),
this.m_motorImpulse=0)};p.prototype.SolveVelocityConstraints=function(r){var y=this.m_bodyA,J=this.m_bodyB,C=y.m_linearVelocity,E=y.m_angularVelocity,I=J.m_linearVelocity,L=J.m_angularVelocity;if(this.m_enableMotor&&this.m_limitState!=z.e_equalLimits){var m=this.m_motorMass*(this.m_motorSpeed-(this.m_axis.x*(I.x-C.x)+this.m_axis.y*(I.y-C.y)+this.m_a2*L-this.m_a1*E));var u=this.m_motorImpulse;r=r.dt*this.m_maxMotorForce;this.m_motorImpulse=d.Clamp(this.m_motorImpulse+m,-r,r);m=this.m_motorImpulse-
u;u=m*this.m_axis.x;r=m*this.m_axis.y;var D=m*this.m_a1;m*=this.m_a2;C.x-=this.m_invMassA*u;C.y-=this.m_invMassA*r;E-=this.m_invIA*D;I.x+=this.m_invMassB*u;I.y+=this.m_invMassB*r;L+=this.m_invIB*m}r=this.m_perp.x*(I.x-C.x)+this.m_perp.y*(I.y-C.y)+this.m_s2*L-this.m_s1*E;this.m_enableLimit&&this.m_limitState!=z.e_inactiveLimit?(D=this.m_axis.x*(I.x-C.x)+this.m_axis.y*(I.y-C.y)+this.m_a2*L-this.m_a1*E,u=this.m_impulse.Copy(),m=this.m_K.Solve(new e,-r,-D),this.m_impulse.Add(m),this.m_limitState==z.e_atLowerLimit?
this.m_impulse.y=d.Max(this.m_impulse.y,0):this.m_limitState==z.e_atUpperLimit&&(this.m_impulse.y=d.Min(this.m_impulse.y,0)),r=-r-(this.m_impulse.y-u.y)*this.m_K.col2.x,this.m_impulse.x=0!=this.m_K.col1.x?r/this.m_K.col1.x+u.x:u.x,m.x=this.m_impulse.x-u.x,m.y=this.m_impulse.y-u.y,u=m.x*this.m_perp.x+m.y*this.m_axis.x,r=m.x*this.m_perp.y+m.y*this.m_axis.y,D=m.x*this.m_s1+m.y*this.m_a1,m=m.x*this.m_s2+m.y*this.m_a2):(m=0!=this.m_K.col1.x?-r/this.m_K.col1.x:0,this.m_impulse.x+=m,u=m*this.m_perp.x,r=
m*this.m_perp.y,D=m*this.m_s1,m*=this.m_s2);C.x-=this.m_invMassA*u;C.y-=this.m_invMassA*r;E-=this.m_invIA*D;I.x+=this.m_invMassB*u;I.y+=this.m_invMassB*r;L+=this.m_invIB*m;y.m_linearVelocity.SetV(C);y.m_angularVelocity=E;J.m_linearVelocity.SetV(I);J.m_angularVelocity=L};p.prototype.SolvePositionConstraints=function(r){r=this.m_bodyA;var y=this.m_bodyB,J=r.m_sweep.c,C=r.m_sweep.a,E=y.m_sweep.c,I=y.m_sweep.a,L=0;var m=!1;var u=0,D=b.FromAngle(C);var l=b.FromAngle(I);var q=D;var t=this.m_localAnchor1.x-
this.m_localCenterA.x;var B=this.m_localAnchor1.y-this.m_localCenterA.y;var H=q.col1.x*t+q.col2.x*B;B=q.col1.y*t+q.col2.y*B;t=H;q=l;l=this.m_localAnchor2.x-this.m_localCenterB.x;var M=this.m_localAnchor2.y-this.m_localCenterB.y;H=q.col1.x*l+q.col2.x*M;M=q.col1.y*l+q.col2.y*M;l=H;q=E.x+l-J.x-t;H=E.y+M-J.y-B;if(this.m_enableLimit){this.m_axis=d.MulMV(D,this.m_localXAxis1);this.m_a1=(q+t)*this.m_axis.y-(H+B)*this.m_axis.x;this.m_a2=l*this.m_axis.y-M*this.m_axis.x;var K=this.m_axis.x*q+this.m_axis.y*
H;d.Abs(this.m_upperTranslation-this.m_lowerTranslation)<2*a.b2_linearSlop?(u=d.Clamp(K,-a.b2_maxLinearCorrection,a.b2_maxLinearCorrection),L=d.Abs(K),m=!0):K<=this.m_lowerTranslation?(u=d.Clamp(K-this.m_lowerTranslation+a.b2_linearSlop,-a.b2_maxLinearCorrection,0),L=this.m_lowerTranslation-K,m=!0):K>=this.m_upperTranslation&&(u=d.Clamp(K-this.m_upperTranslation+a.b2_linearSlop,0,a.b2_maxLinearCorrection),L=K-this.m_upperTranslation,m=!0)}this.m_perp=d.MulMV(D,this.m_localYAxis1);this.m_s1=(q+t)*
this.m_perp.y-(H+B)*this.m_perp.x;this.m_s2=l*this.m_perp.y-M*this.m_perp.x;D=new e;t=this.m_perp.x*q+this.m_perp.y*H;L=d.Max(L,d.Abs(t));m?(m=this.m_invMassA,B=this.m_invMassB,l=this.m_invIA,M=this.m_invIB,this.m_K.col1.x=m+B+l*this.m_s1*this.m_s1+M*this.m_s2*this.m_s2,this.m_K.col1.y=l*this.m_s1*this.m_a1+M*this.m_s2*this.m_a2,this.m_K.col2.x=this.m_K.col1.y,this.m_K.col2.y=m+B+l*this.m_a1*this.m_a1+M*this.m_a2*this.m_a2,this.m_K.Solve(D,-t,-u)):(m=this.m_invMassA,B=this.m_invMassB,l=this.m_invIA,
M=this.m_invIB,u=m+B+l*this.m_s1*this.m_s1+M*this.m_s2*this.m_s2,D.x=0!=u?-t/u:0,D.y=0);u=D.x*this.m_perp.x+D.y*this.m_axis.x;m=D.x*this.m_perp.y+D.y*this.m_axis.y;t=D.x*this.m_s1+D.y*this.m_a1;D=D.x*this.m_s2+D.y*this.m_a2;J.x-=this.m_invMassA*u;J.y-=this.m_invMassA*m;C-=this.m_invIA*t;E.x+=this.m_invMassB*u;E.y+=this.m_invMassB*m;I+=this.m_invIB*D;r.m_sweep.a=C;y.m_sweep.a=I;r.SynchronizeTransform();y.SynchronizeTransform();return L<=a.b2_linearSlop&&0<=a.b2_angularSlop};Box2D$$module$js$box2d$Box2D.inherit(A,
Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef);A.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef.prototype;A.b2LineJointDef=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this,arguments);this.localAnchorA=new e;this.localAnchorB=new e;this.localAxisA=new e};A.prototype.b2LineJointDef=function(){this.__super.b2JointDef.call(this);this.type=z.e_lineJoint;this.localAxisA.Set(1,0);this.enableLimit=!1;this.upperTranslation=this.lowerTranslation=
0;this.enableMotor=!1;this.motorSpeed=this.maxMotorForce=0};A.prototype.Initialize=function(r,y,J,C){this.bodyA=r;this.bodyB=y;this.localAnchorA=this.bodyA.GetLocalPoint(J);this.localAnchorB=this.bodyB.GetLocalPoint(J);this.localAxisA=this.bodyA.GetLocalVector(C)};Box2D$$module$js$box2d$Box2D.inherit(G,Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint);G.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.prototype;G.b2MouseJoint=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this,
arguments);this.K=new b;this.K1=new b;this.K2=new b;this.m_localAnchor=new e;this.m_target=new e;this.m_impulse=new e;this.m_mass=new b;this.m_C=new e};G.prototype.GetAnchorA=function(){return this.m_target};G.prototype.GetAnchorB=function(){return this.m_bodyB.GetWorldPoint(this.m_localAnchor)};G.prototype.GetReactionForce=function(r){void 0===r&&(r=0);return new e(r*this.m_impulse.x,r*this.m_impulse.y)};G.prototype.GetReactionTorque=function(r){return 0};G.prototype.GetTarget=function(){return this.m_target};
G.prototype.SetTarget=function(r){0==this.m_bodyB.IsAwake()&&this.m_bodyB.SetAwake(!0);this.m_target=r};G.prototype.GetMaxForce=function(){return this.m_maxForce};G.prototype.SetMaxForce=function(r){void 0===r&&(r=0);this.m_maxForce=r};G.prototype.GetFrequency=function(){return this.m_frequencyHz};G.prototype.SetFrequency=function(r){void 0===r&&(r=0);this.m_frequencyHz=r};G.prototype.GetDampingRatio=function(){return this.m_dampingRatio};G.prototype.SetDampingRatio=function(r){void 0===r&&(r=0);
this.m_dampingRatio=r};G.prototype.b2MouseJoint=function(r){this.__super.b2Joint.call(this,r);this.m_target.SetV(r.target);var y=this.m_target.x-this.m_bodyB.m_xf.position.x,J=this.m_target.y-this.m_bodyB.m_xf.position.y,C=this.m_bodyB.m_xf.R;this.m_localAnchor.x=y*C.col1.x+J*C.col1.y;this.m_localAnchor.y=y*C.col2.x+J*C.col2.y;this.m_maxForce=r.maxForce;this.m_impulse.SetZero();this.m_frequencyHz=r.frequencyHz;this.m_dampingRatio=r.dampingRatio;this.m_gamma=this.m_beta=0};G.prototype.InitVelocityConstraints=
function(r){var y=this.m_bodyB,J=y.GetMass(),C=2*Math.PI*this.m_frequencyHz,E=J*C*C;this.m_gamma=r.dt*(2*J*this.m_dampingRatio*C+r.dt*E);this.m_gamma=0!=this.m_gamma?1/this.m_gamma:0;this.m_beta=r.dt*E*this.m_gamma;E=y.m_xf.R;J=this.m_localAnchor.x-y.m_sweep.localCenter.x;C=this.m_localAnchor.y-y.m_sweep.localCenter.y;var I=E.col1.x*J+E.col2.x*C;C=E.col1.y*J+E.col2.y*C;J=I;E=y.m_invMass;I=y.m_invI;this.K1.col1.x=E;this.K1.col2.x=0;this.K1.col1.y=0;this.K1.col2.y=E;this.K2.col1.x=I*C*C;this.K2.col2.x=
-I*J*C;this.K2.col1.y=-I*J*C;this.K2.col2.y=I*J*J;this.K.SetM(this.K1);this.K.AddM(this.K2);this.K.col1.x+=this.m_gamma;this.K.col2.y+=this.m_gamma;this.K.GetInverse(this.m_mass);this.m_C.x=y.m_sweep.c.x+J-this.m_target.x;this.m_C.y=y.m_sweep.c.y+C-this.m_target.y;y.m_angularVelocity*=.98;this.m_impulse.x*=r.dtRatio;this.m_impulse.y*=r.dtRatio;y.m_linearVelocity.x+=E*this.m_impulse.x;y.m_linearVelocity.y+=E*this.m_impulse.y;y.m_angularVelocity+=I*(J*this.m_impulse.y-C*this.m_impulse.x)};G.prototype.SolveVelocityConstraints=
function(r){var y=this.m_bodyB;var J=y.m_xf.R;var C=this.m_localAnchor.x-y.m_sweep.localCenter.x,E=this.m_localAnchor.y-y.m_sweep.localCenter.y;var I=J.col1.x*C+J.col2.x*E;E=J.col1.y*C+J.col2.y*E;C=I;I=y.m_linearVelocity.x+-y.m_angularVelocity*E;var L=y.m_linearVelocity.y+y.m_angularVelocity*C;J=this.m_mass;I=I+this.m_beta*this.m_C.x+this.m_gamma*this.m_impulse.x;var m=L+this.m_beta*this.m_C.y+this.m_gamma*this.m_impulse.y;L=-(J.col1.x*I+J.col2.x*m);m=-(J.col1.y*I+J.col2.y*m);J=this.m_impulse.x;I=
this.m_impulse.y;this.m_impulse.x+=L;this.m_impulse.y+=m;r=r.dt*this.m_maxForce;this.m_impulse.LengthSquared()>r*r&&this.m_impulse.Multiply(r/this.m_impulse.Length());L=this.m_impulse.x-J;m=this.m_impulse.y-I;y.m_linearVelocity.x+=y.m_invMass*L;y.m_linearVelocity.y+=y.m_invMass*m;y.m_angularVelocity+=y.m_invI*(C*m-E*L)};G.prototype.SolvePositionConstraints=function(r){return!0};Box2D$$module$js$box2d$Box2D.inherit(O,Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef);O.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef.prototype;
O.b2MouseJointDef=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this,arguments);this.target=new e};O.prototype.b2MouseJointDef=function(){this.__super.b2JointDef.call(this);this.type=z.e_mouseJoint;this.maxForce=0;this.frequencyHz=5;this.dampingRatio=.7};Box2D$$module$js$box2d$Box2D.inherit(P,Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint);P.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.prototype;P.b2PrismaticJoint=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this,
arguments);this.m_localAnchor1=new e;this.m_localAnchor2=new e;this.m_localXAxis1=new e;this.m_localYAxis1=new e;this.m_axis=new e;this.m_perp=new e;this.m_K=new c;this.m_impulse=new f};P.prototype.GetAnchorA=function(){return this.m_bodyA.GetWorldPoint(this.m_localAnchor1)};P.prototype.GetAnchorB=function(){return this.m_bodyB.GetWorldPoint(this.m_localAnchor2)};P.prototype.GetReactionForce=function(r){void 0===r&&(r=0);return new e(r*(this.m_impulse.x*this.m_perp.x+(this.m_motorImpulse+this.m_impulse.z)*
this.m_axis.x),r*(this.m_impulse.x*this.m_perp.y+(this.m_motorImpulse+this.m_impulse.z)*this.m_axis.y))};P.prototype.GetReactionTorque=function(r){void 0===r&&(r=0);return r*this.m_impulse.y};P.prototype.GetJointTranslation=function(){var r=this.m_bodyA,y=this.m_bodyB,J=r.GetWorldPoint(this.m_localAnchor1),C=y.GetWorldPoint(this.m_localAnchor2);y=C.x-J.x;J=C.y-J.y;r=r.GetWorldVector(this.m_localXAxis1);return r.x*y+r.y*J};P.prototype.GetJointSpeed=function(){var r=this.m_bodyA,y=this.m_bodyB;var J=
r.m_xf.R;var C=this.m_localAnchor1.x-r.m_sweep.localCenter.x,E=this.m_localAnchor1.y-r.m_sweep.localCenter.y,I=J.col1.x*C+J.col2.x*E;E=J.col1.y*C+J.col2.y*E;C=I;J=y.m_xf.R;var L=this.m_localAnchor2.x-y.m_sweep.localCenter.x,m=this.m_localAnchor2.y-y.m_sweep.localCenter.y;I=J.col1.x*L+J.col2.x*m;m=J.col1.y*L+J.col2.y*m;L=I;J=y.m_sweep.c.x+L-(r.m_sweep.c.x+C);I=y.m_sweep.c.y+m-(r.m_sweep.c.y+E);var u=r.GetWorldVector(this.m_localXAxis1),D=r.m_linearVelocity,l=y.m_linearVelocity;r=r.m_angularVelocity;
y=y.m_angularVelocity;return J*-r*u.y+I*r*u.x+(u.x*(l.x+-y*m-D.x- -r*E)+u.y*(l.y+y*L-D.y-r*C))};P.prototype.IsLimitEnabled=function(){return this.m_enableLimit};P.prototype.EnableLimit=function(r){this.m_bodyA.SetAwake(!0);this.m_bodyB.SetAwake(!0);this.m_enableLimit=r};P.prototype.GetLowerLimit=function(){return this.m_lowerTranslation};P.prototype.GetUpperLimit=function(){return this.m_upperTranslation};P.prototype.SetLimits=function(r,y){void 0===r&&(r=0);void 0===y&&(y=0);this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);this.m_lowerTranslation=r;this.m_upperTranslation=y};P.prototype.IsMotorEnabled=function(){return this.m_enableMotor};P.prototype.EnableMotor=function(r){this.m_bodyA.SetAwake(!0);this.m_bodyB.SetAwake(!0);this.m_enableMotor=r};P.prototype.SetMotorSpeed=function(r){void 0===r&&(r=0);this.m_bodyA.SetAwake(!0);this.m_bodyB.SetAwake(!0);this.m_motorSpeed=r};P.prototype.GetMotorSpeed=function(){return this.m_motorSpeed};P.prototype.SetMaxMotorForce=function(r){void 0===r&&(r=
0);this.m_bodyA.SetAwake(!0);this.m_bodyB.SetAwake(!0);this.m_maxMotorForce=r};P.prototype.GetMotorForce=function(){return this.m_motorImpulse};P.prototype.b2PrismaticJoint=function(r){this.__super.b2Joint.call(this,r);this.m_localAnchor1.SetV(r.localAnchorA);this.m_localAnchor2.SetV(r.localAnchorB);this.m_localXAxis1.SetV(r.localAxisA);this.m_localYAxis1.x=-this.m_localXAxis1.y;this.m_localYAxis1.y=this.m_localXAxis1.x;this.m_refAngle=r.referenceAngle;this.m_impulse.SetZero();this.m_motorImpulse=
this.m_motorMass=0;this.m_lowerTranslation=r.lowerTranslation;this.m_upperTranslation=r.upperTranslation;this.m_maxMotorForce=r.maxMotorForce;this.m_motorSpeed=r.motorSpeed;this.m_enableLimit=r.enableLimit;this.m_enableMotor=r.enableMotor;this.m_limitState=z.e_inactiveLimit;this.m_axis.SetZero();this.m_perp.SetZero()};P.prototype.InitVelocityConstraints=function(r){var y=this.m_bodyA,J=this.m_bodyB;this.m_localCenterA.SetV(y.GetLocalCenter());this.m_localCenterB.SetV(J.GetLocalCenter());var C=y.GetTransform();
J.GetTransform();var E=y.m_xf.R;var I=this.m_localAnchor1.x-this.m_localCenterA.x,L=this.m_localAnchor1.y-this.m_localCenterA.y;var m=E.col1.x*I+E.col2.x*L;L=E.col1.y*I+E.col2.y*L;I=m;E=J.m_xf.R;var u=this.m_localAnchor2.x-this.m_localCenterB.x,D=this.m_localAnchor2.y-this.m_localCenterB.y;m=E.col1.x*u+E.col2.x*D;D=E.col1.y*u+E.col2.y*D;u=m;E=J.m_sweep.c.x+u-y.m_sweep.c.x-I;m=J.m_sweep.c.y+D-y.m_sweep.c.y-L;this.m_invMassA=y.m_invMass;this.m_invMassB=J.m_invMass;this.m_invIA=y.m_invI;this.m_invIB=
J.m_invI;this.m_axis.SetV(d.MulMV(C.R,this.m_localXAxis1));this.m_a1=(E+I)*this.m_axis.y-(m+L)*this.m_axis.x;this.m_a2=u*this.m_axis.y-D*this.m_axis.x;this.m_motorMass=this.m_invMassA+this.m_invMassB+this.m_invIA*this.m_a1*this.m_a1+this.m_invIB*this.m_a2*this.m_a2;this.m_motorMass>Number.MIN_VALUE&&(this.m_motorMass=1/this.m_motorMass);this.m_perp.SetV(d.MulMV(C.R,this.m_localYAxis1));this.m_s1=(E+I)*this.m_perp.y-(m+L)*this.m_perp.x;this.m_s2=u*this.m_perp.y-D*this.m_perp.x;C=this.m_invMassA;I=
this.m_invMassB;L=this.m_invIA;u=this.m_invIB;this.m_K.col1.x=C+I+L*this.m_s1*this.m_s1+u*this.m_s2*this.m_s2;this.m_K.col1.y=L*this.m_s1+u*this.m_s2;this.m_K.col1.z=L*this.m_s1*this.m_a1+u*this.m_s2*this.m_a2;this.m_K.col2.x=this.m_K.col1.y;this.m_K.col2.y=L+u;this.m_K.col2.z=L*this.m_a1+u*this.m_a2;this.m_K.col3.x=this.m_K.col1.z;this.m_K.col3.y=this.m_K.col2.z;this.m_K.col3.z=C+I+L*this.m_a1*this.m_a1+u*this.m_a2*this.m_a2;this.m_enableLimit?(E=this.m_axis.x*E+this.m_axis.y*m,d.Abs(this.m_upperTranslation-
this.m_lowerTranslation)<2*a.b2_linearSlop?this.m_limitState=z.e_equalLimits:E<=this.m_lowerTranslation?this.m_limitState!=z.e_atLowerLimit&&(this.m_limitState=z.e_atLowerLimit,this.m_impulse.z=0):E>=this.m_upperTranslation?this.m_limitState!=z.e_atUpperLimit&&(this.m_limitState=z.e_atUpperLimit,this.m_impulse.z=0):(this.m_limitState=z.e_inactiveLimit,this.m_impulse.z=0)):this.m_limitState=z.e_inactiveLimit;0==this.m_enableMotor&&(this.m_motorImpulse=0);r.warmStarting?(this.m_impulse.x*=r.dtRatio,
this.m_impulse.y*=r.dtRatio,this.m_motorImpulse*=r.dtRatio,r=this.m_impulse.x*this.m_perp.x+(this.m_motorImpulse+this.m_impulse.z)*this.m_axis.x,E=this.m_impulse.x*this.m_perp.y+(this.m_motorImpulse+this.m_impulse.z)*this.m_axis.y,m=this.m_impulse.x*this.m_s1+this.m_impulse.y+(this.m_motorImpulse+this.m_impulse.z)*this.m_a1,C=this.m_impulse.x*this.m_s2+this.m_impulse.y+(this.m_motorImpulse+this.m_impulse.z)*this.m_a2,y.m_linearVelocity.x-=this.m_invMassA*r,y.m_linearVelocity.y-=this.m_invMassA*E,
y.m_angularVelocity-=this.m_invIA*m,J.m_linearVelocity.x+=this.m_invMassB*r,J.m_linearVelocity.y+=this.m_invMassB*E,J.m_angularVelocity+=this.m_invIB*C):(this.m_impulse.SetZero(),this.m_motorImpulse=0)};P.prototype.SolveVelocityConstraints=function(r){var y=this.m_bodyA,J=this.m_bodyB,C=y.m_linearVelocity,E=y.m_angularVelocity,I=J.m_linearVelocity,L=J.m_angularVelocity;if(this.m_enableMotor&&this.m_limitState!=z.e_equalLimits){var m=this.m_motorMass*(this.m_motorSpeed-(this.m_axis.x*(I.x-C.x)+this.m_axis.y*
(I.y-C.y)+this.m_a2*L-this.m_a1*E));var u=this.m_motorImpulse;r=r.dt*this.m_maxMotorForce;this.m_motorImpulse=d.Clamp(this.m_motorImpulse+m,-r,r);m=this.m_motorImpulse-u;u=m*this.m_axis.x;r=m*this.m_axis.y;var D=m*this.m_a1;m*=this.m_a2;C.x-=this.m_invMassA*u;C.y-=this.m_invMassA*r;E-=this.m_invIA*D;I.x+=this.m_invMassB*u;I.y+=this.m_invMassB*r;L+=this.m_invIB*m}D=this.m_perp.x*(I.x-C.x)+this.m_perp.y*(I.y-C.y)+this.m_s2*L-this.m_s1*E;r=L-E;this.m_enableLimit&&this.m_limitState!=z.e_inactiveLimit?
(m=this.m_axis.x*(I.x-C.x)+this.m_axis.y*(I.y-C.y)+this.m_a2*L-this.m_a1*E,u=this.m_impulse.Copy(),m=this.m_K.Solve33(new f,-D,-r,-m),this.m_impulse.Add(m),this.m_limitState==z.e_atLowerLimit?this.m_impulse.z=d.Max(this.m_impulse.z,0):this.m_limitState==z.e_atUpperLimit&&(this.m_impulse.z=d.Min(this.m_impulse.z,0)),D=-D-(this.m_impulse.z-u.z)*this.m_K.col3.x,r=-r-(this.m_impulse.z-u.z)*this.m_K.col3.y,r=this.m_K.Solve22(new e,D,r),r.x+=u.x,r.y+=u.y,this.m_impulse.x=r.x,this.m_impulse.y=r.y,m.x=this.m_impulse.x-
u.x,m.y=this.m_impulse.y-u.y,m.z=this.m_impulse.z-u.z,u=m.x*this.m_perp.x+m.z*this.m_axis.x,r=m.x*this.m_perp.y+m.z*this.m_axis.y,D=m.x*this.m_s1+m.y+m.z*this.m_a1,m=m.x*this.m_s2+m.y+m.z*this.m_a2):(m=this.m_K.Solve22(new e,-D,-r),this.m_impulse.x+=m.x,this.m_impulse.y+=m.y,u=m.x*this.m_perp.x,r=m.x*this.m_perp.y,D=m.x*this.m_s1+m.y,m=m.x*this.m_s2+m.y);C.x-=this.m_invMassA*u;C.y-=this.m_invMassA*r;E-=this.m_invIA*D;I.x+=this.m_invMassB*u;I.y+=this.m_invMassB*r;L+=this.m_invIB*m;y.m_linearVelocity.SetV(C);
y.m_angularVelocity=E;J.m_linearVelocity.SetV(I);J.m_angularVelocity=L};P.prototype.SolvePositionConstraints=function(r){r=this.m_bodyA;var y=this.m_bodyB,J=r.m_sweep.c,C=r.m_sweep.a,E=y.m_sweep.c,I=y.m_sweep.a,L=0;var m=!1;var u=0,D=b.FromAngle(C),l=b.FromAngle(I);var q=D;var t=this.m_localAnchor1.x-this.m_localCenterA.x;var B=this.m_localAnchor1.y-this.m_localCenterA.y;var H=q.col1.x*t+q.col2.x*B;B=q.col1.y*t+q.col2.y*B;t=H;q=l;l=this.m_localAnchor2.x-this.m_localCenterB.x;var M=this.m_localAnchor2.y-
this.m_localCenterB.y;H=q.col1.x*l+q.col2.x*M;M=q.col1.y*l+q.col2.y*M;l=H;q=E.x+l-J.x-t;H=E.y+M-J.y-B;if(this.m_enableLimit){this.m_axis=d.MulMV(D,this.m_localXAxis1);this.m_a1=(q+t)*this.m_axis.y-(H+B)*this.m_axis.x;this.m_a2=l*this.m_axis.y-M*this.m_axis.x;var K=this.m_axis.x*q+this.m_axis.y*H;d.Abs(this.m_upperTranslation-this.m_lowerTranslation)<2*a.b2_linearSlop?(u=d.Clamp(K,-a.b2_maxLinearCorrection,a.b2_maxLinearCorrection),L=d.Abs(K),m=!0):K<=this.m_lowerTranslation?(u=d.Clamp(K-this.m_lowerTranslation+
a.b2_linearSlop,-a.b2_maxLinearCorrection,0),L=this.m_lowerTranslation-K,m=!0):K>=this.m_upperTranslation&&(u=d.Clamp(K-this.m_upperTranslation+a.b2_linearSlop,0,a.b2_maxLinearCorrection),L=K-this.m_upperTranslation,m=!0)}this.m_perp=d.MulMV(D,this.m_localYAxis1);this.m_s1=(q+t)*this.m_perp.y-(H+B)*this.m_perp.x;this.m_s2=l*this.m_perp.y-M*this.m_perp.x;D=new f;B=this.m_perp.x*q+this.m_perp.y*H;l=I-C-this.m_refAngle;L=d.Max(L,d.Abs(B));t=d.Abs(l);m?(m=this.m_invMassA,M=this.m_invMassB,q=this.m_invIA,
H=this.m_invIB,this.m_K.col1.x=m+M+q*this.m_s1*this.m_s1+H*this.m_s2*this.m_s2,this.m_K.col1.y=q*this.m_s1+H*this.m_s2,this.m_K.col1.z=q*this.m_s1*this.m_a1+H*this.m_s2*this.m_a2,this.m_K.col2.x=this.m_K.col1.y,this.m_K.col2.y=q+H,this.m_K.col2.z=q*this.m_a1+H*this.m_a2,this.m_K.col3.x=this.m_K.col1.z,this.m_K.col3.y=this.m_K.col2.z,this.m_K.col3.z=m+M+q*this.m_a1*this.m_a1+H*this.m_a2*this.m_a2,this.m_K.Solve33(D,-B,-l,-u)):(m=this.m_invMassA,M=this.m_invMassB,q=this.m_invIA,H=this.m_invIB,u=q*this.m_s1+
H*this.m_s2,K=q+H,this.m_K.col1.Set(m+M+q*this.m_s1*this.m_s1+H*this.m_s2*this.m_s2,u,0),this.m_K.col2.Set(u,K,0),u=this.m_K.Solve22(new e,-B,-l),D.x=u.x,D.y=u.y,D.z=0);u=D.x*this.m_perp.x+D.z*this.m_axis.x;m=D.x*this.m_perp.y+D.z*this.m_axis.y;B=D.x*this.m_s1+D.y+D.z*this.m_a1;D=D.x*this.m_s2+D.y+D.z*this.m_a2;J.x-=this.m_invMassA*u;J.y-=this.m_invMassA*m;C-=this.m_invIA*B;E.x+=this.m_invMassB*u;E.y+=this.m_invMassB*m;I+=this.m_invIB*D;r.m_sweep.a=C;y.m_sweep.a=I;r.SynchronizeTransform();y.SynchronizeTransform();
return L<=a.b2_linearSlop&&t<=a.b2_angularSlop};Box2D$$module$js$box2d$Box2D.inherit(S,Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef);S.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef.prototype;S.b2PrismaticJointDef=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this,arguments);this.localAnchorA=new e;this.localAnchorB=new e;this.localAxisA=new e};S.prototype.b2PrismaticJointDef=function(){this.__super.b2JointDef.call(this);
this.type=z.e_prismaticJoint;this.localAxisA.Set(1,0);this.referenceAngle=0;this.enableLimit=!1;this.upperTranslation=this.lowerTranslation=0;this.enableMotor=!1;this.motorSpeed=this.maxMotorForce=0};S.prototype.Initialize=function(r,y,J,C){this.bodyA=r;this.bodyB=y;this.localAnchorA=this.bodyA.GetLocalPoint(J);this.localAnchorB=this.bodyB.GetLocalPoint(J);this.localAxisA=this.bodyA.GetLocalVector(C);this.referenceAngle=this.bodyB.GetAngle()-this.bodyA.GetAngle()};Box2D$$module$js$box2d$Box2D.inherit(T,
Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint);T.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.prototype;T.b2PulleyJoint=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this,arguments);this.m_groundAnchor1=new e;this.m_groundAnchor2=new e;this.m_localAnchor1=new e;this.m_localAnchor2=new e;this.m_u1=new e;this.m_u2=new e};T.prototype.GetAnchorA=function(){return this.m_bodyA.GetWorldPoint(this.m_localAnchor1)};T.prototype.GetAnchorB=function(){return this.m_bodyB.GetWorldPoint(this.m_localAnchor2)};
T.prototype.GetReactionForce=function(r){void 0===r&&(r=0);return new e(r*this.m_impulse*this.m_u2.x,r*this.m_impulse*this.m_u2.y)};T.prototype.GetReactionTorque=function(r){return 0};T.prototype.GetGroundAnchorA=function(){var r=this.m_ground.m_xf.position.Copy();r.Add(this.m_groundAnchor1);return r};T.prototype.GetGroundAnchorB=function(){var r=this.m_ground.m_xf.position.Copy();r.Add(this.m_groundAnchor2);return r};T.prototype.GetLength1=function(){var r=this.m_bodyA.GetWorldPoint(this.m_localAnchor1),
y=r.x-(this.m_ground.m_xf.position.x+this.m_groundAnchor1.x);r=r.y-(this.m_ground.m_xf.position.y+this.m_groundAnchor1.y);return Math.sqrt(y*y+r*r)};T.prototype.GetLength2=function(){var r=this.m_bodyB.GetWorldPoint(this.m_localAnchor2),y=r.x-(this.m_ground.m_xf.position.x+this.m_groundAnchor2.x);r=r.y-(this.m_ground.m_xf.position.y+this.m_groundAnchor2.y);return Math.sqrt(y*y+r*r)};T.prototype.GetRatio=function(){return this.m_ratio};T.prototype.b2PulleyJoint=function(r){this.__super.b2Joint.call(this,
r);this.m_ground=this.m_bodyA.m_world.m_groundBody;this.m_groundAnchor1.x=r.groundAnchorA.x-this.m_ground.m_xf.position.x;this.m_groundAnchor1.y=r.groundAnchorA.y-this.m_ground.m_xf.position.y;this.m_groundAnchor2.x=r.groundAnchorB.x-this.m_ground.m_xf.position.x;this.m_groundAnchor2.y=r.groundAnchorB.y-this.m_ground.m_xf.position.y;this.m_localAnchor1.SetV(r.localAnchorA);this.m_localAnchor2.SetV(r.localAnchorB);this.m_ratio=r.ratio;this.m_constant=r.lengthA+this.m_ratio*r.lengthB;this.m_maxLength1=
d.Min(r.maxLengthA,this.m_constant-this.m_ratio*T.b2_minPulleyLength);this.m_maxLength2=d.Min(r.maxLengthB,(this.m_constant-T.b2_minPulleyLength)/this.m_ratio);this.m_limitImpulse2=this.m_limitImpulse1=this.m_impulse=0};T.prototype.InitVelocityConstraints=function(r){var y=this.m_bodyA,J=this.m_bodyB;var C=y.m_xf.R;var E=this.m_localAnchor1.x-y.m_sweep.localCenter.x,I=this.m_localAnchor1.y-y.m_sweep.localCenter.y,L=C.col1.x*E+C.col2.x*I;I=C.col1.y*E+C.col2.y*I;E=L;C=J.m_xf.R;var m=this.m_localAnchor2.x-
J.m_sweep.localCenter.x,u=this.m_localAnchor2.y-J.m_sweep.localCenter.y;L=C.col1.x*m+C.col2.x*u;u=C.col1.y*m+C.col2.y*u;m=L;C=J.m_sweep.c.x+m;L=J.m_sweep.c.y+u;var D=this.m_ground.m_xf.position.x+this.m_groundAnchor2.x,l=this.m_ground.m_xf.position.y+this.m_groundAnchor2.y;this.m_u1.Set(y.m_sweep.c.x+E-(this.m_ground.m_xf.position.x+this.m_groundAnchor1.x),y.m_sweep.c.y+I-(this.m_ground.m_xf.position.y+this.m_groundAnchor1.y));this.m_u2.Set(C-D,L-l);C=this.m_u1.Length();L=this.m_u2.Length();C>a.b2_linearSlop?
this.m_u1.Multiply(1/C):this.m_u1.SetZero();L>a.b2_linearSlop?this.m_u2.Multiply(1/L):this.m_u2.SetZero();0<this.m_constant-C-this.m_ratio*L?(this.m_state=z.e_inactiveLimit,this.m_impulse=0):this.m_state=z.e_atUpperLimit;C<this.m_maxLength1?(this.m_limitState1=z.e_inactiveLimit,this.m_limitImpulse1=0):this.m_limitState1=z.e_atUpperLimit;L<this.m_maxLength2?(this.m_limitState2=z.e_inactiveLimit,this.m_limitImpulse2=0):this.m_limitState2=z.e_atUpperLimit;C=E*this.m_u1.y-I*this.m_u1.x;L=m*this.m_u2.y-
u*this.m_u2.x;this.m_limitMass1=y.m_invMass+y.m_invI*C*C;this.m_limitMass2=J.m_invMass+J.m_invI*L*L;this.m_pulleyMass=this.m_limitMass1+this.m_ratio*this.m_ratio*this.m_limitMass2;this.m_limitMass1=1/this.m_limitMass1;this.m_limitMass2=1/this.m_limitMass2;this.m_pulleyMass=1/this.m_pulleyMass;r.warmStarting?(this.m_impulse*=r.dtRatio,this.m_limitImpulse1*=r.dtRatio,this.m_limitImpulse2*=r.dtRatio,r=(-this.m_impulse-this.m_limitImpulse1)*this.m_u1.x,C=(-this.m_impulse-this.m_limitImpulse1)*this.m_u1.y,
L=(-this.m_ratio*this.m_impulse-this.m_limitImpulse2)*this.m_u2.x,D=(-this.m_ratio*this.m_impulse-this.m_limitImpulse2)*this.m_u2.y,y.m_linearVelocity.x+=y.m_invMass*r,y.m_linearVelocity.y+=y.m_invMass*C,y.m_angularVelocity+=y.m_invI*(E*C-I*r),J.m_linearVelocity.x+=J.m_invMass*L,J.m_linearVelocity.y+=J.m_invMass*D,J.m_angularVelocity+=J.m_invI*(m*D-u*L)):this.m_limitImpulse2=this.m_limitImpulse1=this.m_impulse=0};T.prototype.SolveVelocityConstraints=function(r){r=this.m_bodyA;var y=this.m_bodyB;var J=
r.m_xf.R;var C=this.m_localAnchor1.x-r.m_sweep.localCenter.x,E=this.m_localAnchor1.y-r.m_sweep.localCenter.y,I=J.col1.x*C+J.col2.x*E;E=J.col1.y*C+J.col2.y*E;C=I;J=y.m_xf.R;var L=this.m_localAnchor2.x-y.m_sweep.localCenter.x,m=this.m_localAnchor2.y-y.m_sweep.localCenter.y;I=J.col1.x*L+J.col2.x*m;m=J.col1.y*L+J.col2.y*m;L=I;if(this.m_state==z.e_atUpperLimit){J=r.m_linearVelocity.x+-r.m_angularVelocity*E;I=r.m_linearVelocity.y+r.m_angularVelocity*C;var u=y.m_linearVelocity.x+-y.m_angularVelocity*m;var D=
y.m_linearVelocity.y+y.m_angularVelocity*L;J=-(this.m_u1.x*J+this.m_u1.y*I)-this.m_ratio*(this.m_u2.x*u+this.m_u2.y*D);D=this.m_pulleyMass*-J;J=this.m_impulse;this.m_impulse=d.Max(0,this.m_impulse+D);D=this.m_impulse-J;J=-D*this.m_u1.x;I=-D*this.m_u1.y;u=-this.m_ratio*D*this.m_u2.x;D=-this.m_ratio*D*this.m_u2.y;r.m_linearVelocity.x+=r.m_invMass*J;r.m_linearVelocity.y+=r.m_invMass*I;r.m_angularVelocity+=r.m_invI*(C*I-E*J);y.m_linearVelocity.x+=y.m_invMass*u;y.m_linearVelocity.y+=y.m_invMass*D;y.m_angularVelocity+=
y.m_invI*(L*D-m*u)}this.m_limitState1==z.e_atUpperLimit&&(J=r.m_linearVelocity.x+-r.m_angularVelocity*E,I=r.m_linearVelocity.y+r.m_angularVelocity*C,J=-(this.m_u1.x*J+this.m_u1.y*I),D=-this.m_limitMass1*J,J=this.m_limitImpulse1,this.m_limitImpulse1=d.Max(0,this.m_limitImpulse1+D),D=this.m_limitImpulse1-J,J=-D*this.m_u1.x,I=-D*this.m_u1.y,r.m_linearVelocity.x+=r.m_invMass*J,r.m_linearVelocity.y+=r.m_invMass*I,r.m_angularVelocity+=r.m_invI*(C*I-E*J));this.m_limitState2==z.e_atUpperLimit&&(u=y.m_linearVelocity.x+
-y.m_angularVelocity*m,D=y.m_linearVelocity.y+y.m_angularVelocity*L,J=-(this.m_u2.x*u+this.m_u2.y*D),D=-this.m_limitMass2*J,J=this.m_limitImpulse2,this.m_limitImpulse2=d.Max(0,this.m_limitImpulse2+D),D=this.m_limitImpulse2-J,u=-D*this.m_u2.x,D=-D*this.m_u2.y,y.m_linearVelocity.x+=y.m_invMass*u,y.m_linearVelocity.y+=y.m_invMass*D,y.m_angularVelocity+=y.m_invI*(L*D-m*u))};T.prototype.SolvePositionConstraints=function(r){r=this.m_bodyA;var y=this.m_bodyB,J=this.m_ground.m_xf.position.x+this.m_groundAnchor1.x,
C=this.m_ground.m_xf.position.y+this.m_groundAnchor1.y,E=this.m_ground.m_xf.position.x+this.m_groundAnchor2.x,I=this.m_ground.m_xf.position.y+this.m_groundAnchor2.y,L=0;if(this.m_state==z.e_atUpperLimit){var m=r.m_xf.R;var u=this.m_localAnchor1.x-r.m_sweep.localCenter.x;var D=this.m_localAnchor1.y-r.m_sweep.localCenter.y;var l=m.col1.x*u+m.col2.x*D;D=m.col1.y*u+m.col2.y*D;u=l;m=y.m_xf.R;var q=this.m_localAnchor2.x-y.m_sweep.localCenter.x;var t=this.m_localAnchor2.y-y.m_sweep.localCenter.y;l=m.col1.x*
q+m.col2.x*t;t=m.col1.y*q+m.col2.y*t;q=l;m=r.m_sweep.c.x+u;l=r.m_sweep.c.y+D;var B=y.m_sweep.c.x+q;var H=y.m_sweep.c.y+t;this.m_u1.Set(m-J,l-C);this.m_u2.Set(B-E,H-I);m=this.m_u1.Length();l=this.m_u2.Length();m>a.b2_linearSlop?this.m_u1.Multiply(1/m):this.m_u1.SetZero();l>a.b2_linearSlop?this.m_u2.Multiply(1/l):this.m_u2.SetZero();m=this.m_constant-m-this.m_ratio*l;L=d.Max(L,-m);m=d.Clamp(m+a.b2_linearSlop,-a.b2_maxLinearCorrection,0);H=-this.m_pulleyMass*m;m=-H*this.m_u1.x;l=-H*this.m_u1.y;B=-this.m_ratio*
H*this.m_u2.x;H=-this.m_ratio*H*this.m_u2.y;r.m_sweep.c.x+=r.m_invMass*m;r.m_sweep.c.y+=r.m_invMass*l;r.m_sweep.a+=r.m_invI*(u*l-D*m);y.m_sweep.c.x+=y.m_invMass*B;y.m_sweep.c.y+=y.m_invMass*H;y.m_sweep.a+=y.m_invI*(q*H-t*B);r.SynchronizeTransform();y.SynchronizeTransform()}this.m_limitState1==z.e_atUpperLimit&&(m=r.m_xf.R,u=this.m_localAnchor1.x-r.m_sweep.localCenter.x,D=this.m_localAnchor1.y-r.m_sweep.localCenter.y,l=m.col1.x*u+m.col2.x*D,D=m.col1.y*u+m.col2.y*D,u=l,m=r.m_sweep.c.x+u,l=r.m_sweep.c.y+
D,this.m_u1.Set(m-J,l-C),m=this.m_u1.Length(),m>a.b2_linearSlop?(this.m_u1.x*=1/m,this.m_u1.y*=1/m):this.m_u1.SetZero(),m=this.m_maxLength1-m,L=d.Max(L,-m),m=d.Clamp(m+a.b2_linearSlop,-a.b2_maxLinearCorrection,0),H=-this.m_limitMass1*m,m=-H*this.m_u1.x,l=-H*this.m_u1.y,r.m_sweep.c.x+=r.m_invMass*m,r.m_sweep.c.y+=r.m_invMass*l,r.m_sweep.a+=r.m_invI*(u*l-D*m),r.SynchronizeTransform());this.m_limitState2==z.e_atUpperLimit&&(m=y.m_xf.R,q=this.m_localAnchor2.x-y.m_sweep.localCenter.x,t=this.m_localAnchor2.y-
y.m_sweep.localCenter.y,l=m.col1.x*q+m.col2.x*t,t=m.col1.y*q+m.col2.y*t,q=l,B=y.m_sweep.c.x+q,H=y.m_sweep.c.y+t,this.m_u2.Set(B-E,H-I),l=this.m_u2.Length(),l>a.b2_linearSlop?(this.m_u2.x*=1/l,this.m_u2.y*=1/l):this.m_u2.SetZero(),m=this.m_maxLength2-l,L=d.Max(L,-m),m=d.Clamp(m+a.b2_linearSlop,-a.b2_maxLinearCorrection,0),H=-this.m_limitMass2*m,B=-H*this.m_u2.x,H=-H*this.m_u2.y,y.m_sweep.c.x+=y.m_invMass*B,y.m_sweep.c.y+=y.m_invMass*H,y.m_sweep.a+=y.m_invI*(q*H-t*B),y.SynchronizeTransform());return L<
a.b2_linearSlop};Box2D$$module$js$box2d$Box2D.postDefs.push(function(){Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2PulleyJoint.b2_minPulleyLength=2});Box2D$$module$js$box2d$Box2D.inherit(W,Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef);W.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef.prototype;W.b2PulleyJointDef=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this,arguments);this.groundAnchorA=new e;this.groundAnchorB=new e;
this.localAnchorA=new e;this.localAnchorB=new e};W.prototype.b2PulleyJointDef=function(){this.__super.b2JointDef.call(this);this.type=z.e_pulleyJoint;this.groundAnchorA.Set(-1,1);this.groundAnchorB.Set(1,1);this.localAnchorA.Set(-1,0);this.localAnchorB.Set(1,0);this.maxLengthB=this.lengthB=this.maxLengthA=this.lengthA=0;this.ratio=1;this.collideConnected=!0};W.prototype.Initialize=function(r,y,J,C,E,I,L){void 0===L&&(L=0);this.bodyA=r;this.bodyB=y;this.groundAnchorA.SetV(J);this.groundAnchorB.SetV(C);
this.localAnchorA=this.bodyA.GetLocalPoint(E);this.localAnchorB=this.bodyB.GetLocalPoint(I);r=E.x-J.x;J=E.y-J.y;this.lengthA=Math.sqrt(r*r+J*J);J=I.x-C.x;C=I.y-C.y;this.lengthB=Math.sqrt(J*J+C*C);this.ratio=L;L=this.lengthA+this.ratio*this.lengthB;this.maxLengthA=L-this.ratio*T.b2_minPulleyLength;this.maxLengthB=(L-T.b2_minPulleyLength)/this.ratio};Box2D$$module$js$box2d$Box2D.inherit(X,Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint);X.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.prototype;
X.b2RevoluteJoint=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this,arguments);this.K=new b;this.K1=new b;this.K2=new b;this.K3=new b;this.impulse3=new f;this.impulse2=new e;this.reduced=new e;this.m_localAnchor1=new e;this.m_localAnchor2=new e;this.m_impulse=new f;this.m_mass=new c};X.prototype.GetAnchorA=function(){return this.m_bodyA.GetWorldPoint(this.m_localAnchor1)};X.prototype.GetAnchorB=function(){return this.m_bodyB.GetWorldPoint(this.m_localAnchor2)};X.prototype.GetReactionForce=
function(r){void 0===r&&(r=0);return new e(r*this.m_impulse.x,r*this.m_impulse.y)};X.prototype.GetReactionTorque=function(r){void 0===r&&(r=0);return r*this.m_impulse.z};X.prototype.GetJointAngle=function(){return this.m_bodyB.m_sweep.a-this.m_bodyA.m_sweep.a-this.m_referenceAngle};X.prototype.GetJointSpeed=function(){return this.m_bodyB.m_angularVelocity-this.m_bodyA.m_angularVelocity};X.prototype.IsLimitEnabled=function(){return this.m_enableLimit};X.prototype.EnableLimit=function(r){this.m_enableLimit=
r};X.prototype.GetLowerLimit=function(){return this.m_lowerAngle};X.prototype.GetUpperLimit=function(){return this.m_upperAngle};X.prototype.SetLimits=function(r,y){void 0===r&&(r=0);void 0===y&&(y=0);this.m_lowerAngle=r;this.m_upperAngle=y};X.prototype.IsMotorEnabled=function(){this.m_bodyA.SetAwake(!0);this.m_bodyB.SetAwake(!0);return this.m_enableMotor};X.prototype.EnableMotor=function(r){this.m_enableMotor=r};X.prototype.SetMotorSpeed=function(r){void 0===r&&(r=0);this.m_bodyA.SetAwake(!0);this.m_bodyB.SetAwake(!0);
this.m_motorSpeed=r};X.prototype.GetMotorSpeed=function(){return this.m_motorSpeed};X.prototype.SetMaxMotorTorque=function(r){void 0===r&&(r=0);this.m_maxMotorTorque=r};X.prototype.GetMotorTorque=function(){return this.m_maxMotorTorque};X.prototype.b2RevoluteJoint=function(r){this.__super.b2Joint.call(this,r);this.m_localAnchor1.SetV(r.localAnchorA);this.m_localAnchor2.SetV(r.localAnchorB);this.m_referenceAngle=r.referenceAngle;this.m_impulse.SetZero();this.m_motorImpulse=0;this.m_lowerAngle=r.lowerAngle;
this.m_upperAngle=r.upperAngle;this.m_maxMotorTorque=r.maxMotorTorque;this.m_motorSpeed=r.motorSpeed;this.m_enableLimit=r.enableLimit;this.m_enableMotor=r.enableMotor;this.m_limitState=z.e_inactiveLimit};X.prototype.InitVelocityConstraints=function(r){var y=this.m_bodyA,J=this.m_bodyB;var C=y.m_xf.R;var E=this.m_localAnchor1.x-y.m_sweep.localCenter.x,I=this.m_localAnchor1.y-y.m_sweep.localCenter.y;var L=C.col1.x*E+C.col2.x*I;I=C.col1.y*E+C.col2.y*I;E=L;C=J.m_xf.R;var m=this.m_localAnchor2.x-J.m_sweep.localCenter.x,
u=this.m_localAnchor2.y-J.m_sweep.localCenter.y;L=C.col1.x*m+C.col2.x*u;u=C.col1.y*m+C.col2.y*u;m=L;C=y.m_invMass;L=J.m_invMass;var D=y.m_invI,l=J.m_invI;this.m_mass.col1.x=C+L+I*I*D+u*u*l;this.m_mass.col2.x=-I*E*D-u*m*l;this.m_mass.col3.x=-I*D-u*l;this.m_mass.col1.y=this.m_mass.col2.x;this.m_mass.col2.y=C+L+E*E*D+m*m*l;this.m_mass.col3.y=E*D+m*l;this.m_mass.col1.z=this.m_mass.col3.x;this.m_mass.col2.z=this.m_mass.col3.y;this.m_mass.col3.z=D+l;this.m_motorMass=1/(D+l);0==this.m_enableMotor&&(this.m_motorImpulse=
0);if(this.m_enableLimit){var q=J.m_sweep.a-y.m_sweep.a-this.m_referenceAngle;d.Abs(this.m_upperAngle-this.m_lowerAngle)<2*a.b2_angularSlop?this.m_limitState=z.e_equalLimits:q<=this.m_lowerAngle?(this.m_limitState!=z.e_atLowerLimit&&(this.m_impulse.z=0),this.m_limitState=z.e_atLowerLimit):q>=this.m_upperAngle?(this.m_limitState!=z.e_atUpperLimit&&(this.m_impulse.z=0),this.m_limitState=z.e_atUpperLimit):(this.m_limitState=z.e_inactiveLimit,this.m_impulse.z=0)}else this.m_limitState=z.e_inactiveLimit;
r.warmStarting?(this.m_impulse.x*=r.dtRatio,this.m_impulse.y*=r.dtRatio,this.m_motorImpulse*=r.dtRatio,r=this.m_impulse.x,q=this.m_impulse.y,y.m_linearVelocity.x-=C*r,y.m_linearVelocity.y-=C*q,y.m_angularVelocity-=D*(E*q-I*r+this.m_motorImpulse+this.m_impulse.z),J.m_linearVelocity.x+=L*r,J.m_linearVelocity.y+=L*q,J.m_angularVelocity+=l*(m*q-u*r+this.m_motorImpulse+this.m_impulse.z)):(this.m_impulse.SetZero(),this.m_motorImpulse=0)};X.prototype.SolveVelocityConstraints=function(r){var y=this.m_bodyA,
J=this.m_bodyB,C=y.m_linearVelocity,E=y.m_angularVelocity,I=J.m_linearVelocity,L=J.m_angularVelocity,m=y.m_invMass,u=J.m_invMass,D=y.m_invI,l=J.m_invI;if(this.m_enableMotor&&this.m_limitState!=z.e_equalLimits){var q=this.m_motorMass*-(L-E-this.m_motorSpeed);var t=this.m_motorImpulse;r=r.dt*this.m_maxMotorTorque;this.m_motorImpulse=d.Clamp(this.m_motorImpulse+q,-r,r);q=this.m_motorImpulse-t;E-=D*q;L+=l*q}if(this.m_enableLimit&&this.m_limitState!=z.e_inactiveLimit){var B=y.m_xf.R;q=this.m_localAnchor1.x-
y.m_sweep.localCenter.x;t=this.m_localAnchor1.y-y.m_sweep.localCenter.y;var H=B.col1.x*q+B.col2.x*t;t=B.col1.y*q+B.col2.y*t;q=H;B=J.m_xf.R;r=this.m_localAnchor2.x-J.m_sweep.localCenter.x;var M=this.m_localAnchor2.y-J.m_sweep.localCenter.y;H=B.col1.x*r+B.col2.x*M;M=B.col1.y*r+B.col2.y*M;r=H;H=I.x+-L*M-C.x- -E*t;var K=I.y+L*r-C.y-E*q;this.m_mass.Solve33(this.impulse3,-H,-K,-(L-E));this.m_limitState==z.e_equalLimits?this.m_impulse.Add(this.impulse3):this.m_limitState==z.e_atLowerLimit?(B=this.m_impulse.z+
this.impulse3.z,0>B&&(this.m_mass.Solve22(this.reduced,-H,-K),this.impulse3.x=this.reduced.x,this.impulse3.y=this.reduced.y,this.impulse3.z=-this.m_impulse.z,this.m_impulse.x+=this.reduced.x,this.m_impulse.y+=this.reduced.y,this.m_impulse.z=0)):this.m_limitState==z.e_atUpperLimit&&(B=this.m_impulse.z+this.impulse3.z,0<B&&(this.m_mass.Solve22(this.reduced,-H,-K),this.impulse3.x=this.reduced.x,this.impulse3.y=this.reduced.y,this.impulse3.z=-this.m_impulse.z,this.m_impulse.x+=this.reduced.x,this.m_impulse.y+=
this.reduced.y,this.m_impulse.z=0));C.x-=m*this.impulse3.x;C.y-=m*this.impulse3.y;E-=D*(q*this.impulse3.y-t*this.impulse3.x+this.impulse3.z);I.x+=u*this.impulse3.x;I.y+=u*this.impulse3.y;L+=l*(r*this.impulse3.y-M*this.impulse3.x+this.impulse3.z)}else B=y.m_xf.R,q=this.m_localAnchor1.x-y.m_sweep.localCenter.x,t=this.m_localAnchor1.y-y.m_sweep.localCenter.y,H=B.col1.x*q+B.col2.x*t,t=B.col1.y*q+B.col2.y*t,q=H,B=J.m_xf.R,r=this.m_localAnchor2.x-J.m_sweep.localCenter.x,M=this.m_localAnchor2.y-J.m_sweep.localCenter.y,
H=B.col1.x*r+B.col2.x*M,M=B.col1.y*r+B.col2.y*M,r=H,this.m_mass.Solve22(this.impulse2,-(I.x+-L*M-C.x- -E*t),-(I.y+L*r-C.y-E*q)),this.m_impulse.x+=this.impulse2.x,this.m_impulse.y+=this.impulse2.y,C.x-=m*this.impulse2.x,C.y-=m*this.impulse2.y,E-=D*(q*this.impulse2.y-t*this.impulse2.x),I.x+=u*this.impulse2.x,I.y+=u*this.impulse2.y,L+=l*(r*this.impulse2.y-M*this.impulse2.x);y.m_linearVelocity.SetV(C);y.m_angularVelocity=E;J.m_linearVelocity.SetV(I);J.m_angularVelocity=L};X.prototype.SolvePositionConstraints=
function(r){r=this.m_bodyA;var y=this.m_bodyB,J=0;if(this.m_enableLimit&&this.m_limitState!=z.e_inactiveLimit){var C=y.m_sweep.a-r.m_sweep.a-this.m_referenceAngle;var E=0;this.m_limitState==z.e_equalLimits?(C=d.Clamp(C-this.m_lowerAngle,-a.b2_maxAngularCorrection,a.b2_maxAngularCorrection),E=-this.m_motorMass*C,J=d.Abs(C)):this.m_limitState==z.e_atLowerLimit?(C-=this.m_lowerAngle,J=-C,C=d.Clamp(C+a.b2_angularSlop,-a.b2_maxAngularCorrection,0),E=-this.m_motorMass*C):this.m_limitState==z.e_atUpperLimit&&
(J=C-=this.m_upperAngle,C=d.Clamp(C-a.b2_angularSlop,0,a.b2_maxAngularCorrection),E=-this.m_motorMass*C);r.m_sweep.a-=r.m_invI*E;y.m_sweep.a+=y.m_invI*E;r.SynchronizeTransform();y.SynchronizeTransform()}var I=r.m_xf.R;E=this.m_localAnchor1.x-r.m_sweep.localCenter.x;C=this.m_localAnchor1.y-r.m_sweep.localCenter.y;var L=I.col1.x*E+I.col2.x*C;C=I.col1.y*E+I.col2.y*C;E=L;I=y.m_xf.R;var m=this.m_localAnchor2.x-y.m_sweep.localCenter.x,u=this.m_localAnchor2.y-y.m_sweep.localCenter.y;L=I.col1.x*m+I.col2.x*
u;u=I.col1.y*m+I.col2.y*u;m=L;var D=y.m_sweep.c.x+m-r.m_sweep.c.x-E;var l=y.m_sweep.c.y+u-r.m_sweep.c.y-C;var q=D*D+l*l;I=Math.sqrt(q);L=r.m_invMass;var t=y.m_invMass,B=r.m_invI,H=y.m_invI,M=10*a.b2_linearSlop;q>M*M&&(q=1/(L+t),D=q*-D,l=q*-l,r.m_sweep.c.x-=.5*L*D,r.m_sweep.c.y-=.5*L*l,y.m_sweep.c.x+=.5*t*D,y.m_sweep.c.y+=.5*t*l,D=y.m_sweep.c.x+m-r.m_sweep.c.x-E,l=y.m_sweep.c.y+u-r.m_sweep.c.y-C);this.K1.col1.x=L+t;this.K1.col2.x=0;this.K1.col1.y=0;this.K1.col2.y=L+t;this.K2.col1.x=B*C*C;this.K2.col2.x=
-B*E*C;this.K2.col1.y=-B*E*C;this.K2.col2.y=B*E*E;this.K3.col1.x=H*u*u;this.K3.col2.x=-H*m*u;this.K3.col1.y=-H*m*u;this.K3.col2.y=H*m*m;this.K.SetM(this.K1);this.K.AddM(this.K2);this.K.AddM(this.K3);this.K.Solve(X.tImpulse,-D,-l);D=X.tImpulse.x;l=X.tImpulse.y;r.m_sweep.c.x-=r.m_invMass*D;r.m_sweep.c.y-=r.m_invMass*l;r.m_sweep.a-=r.m_invI*(E*l-C*D);y.m_sweep.c.x+=y.m_invMass*D;y.m_sweep.c.y+=y.m_invMass*l;y.m_sweep.a+=y.m_invI*(m*l-u*D);r.SynchronizeTransform();y.SynchronizeTransform();return I<=a.b2_linearSlop&&
J<=a.b2_angularSlop};Box2D$$module$js$box2d$Box2D.postDefs.push(function(){Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2RevoluteJoint.tImpulse=new e});Box2D$$module$js$box2d$Box2D.inherit(U,Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef);U.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef.prototype;U.b2RevoluteJointDef=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this,arguments);this.localAnchorA=new e;this.localAnchorB=new e};
U.prototype.b2RevoluteJointDef=function(){this.__super.b2JointDef.call(this);this.type=z.e_revoluteJoint;this.localAnchorA.Set(0,0);this.localAnchorB.Set(0,0);this.motorSpeed=this.maxMotorTorque=this.upperAngle=this.lowerAngle=this.referenceAngle=0;this.enableMotor=this.enableLimit=!1};U.prototype.Initialize=function(r,y,J){this.bodyA=r;this.bodyB=y;this.localAnchorA=this.bodyA.GetLocalPoint(J);this.localAnchorB=this.bodyB.GetLocalPoint(J);this.referenceAngle=this.bodyB.GetAngle()-this.bodyA.GetAngle()};
Box2D$$module$js$box2d$Box2D.inherit(Z,Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint);Z.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.prototype;Z.b2WeldJoint=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this,arguments);this.m_localAnchorA=new e;this.m_localAnchorB=new e;this.m_impulse=new f;this.m_mass=new c};Z.prototype.GetAnchorA=function(){return this.m_bodyA.GetWorldPoint(this.m_localAnchorA)};Z.prototype.GetAnchorB=function(){return this.m_bodyB.GetWorldPoint(this.m_localAnchorB)};
Z.prototype.GetReactionForce=function(r){void 0===r&&(r=0);return new e(r*this.m_impulse.x,r*this.m_impulse.y)};Z.prototype.GetReactionTorque=function(r){void 0===r&&(r=0);return r*this.m_impulse.z};Z.prototype.b2WeldJoint=function(r){this.__super.b2Joint.call(this,r);this.m_localAnchorA.SetV(r.localAnchorA);this.m_localAnchorB.SetV(r.localAnchorB);this.m_referenceAngle=r.referenceAngle;this.m_impulse.SetZero();this.m_mass=new c};Z.prototype.InitVelocityConstraints=function(r){var y=this.m_bodyA,
J=this.m_bodyB;var C=y.m_xf.R;var E=this.m_localAnchorA.x-y.m_sweep.localCenter.x,I=this.m_localAnchorA.y-y.m_sweep.localCenter.y;var L=C.col1.x*E+C.col2.x*I;I=C.col1.y*E+C.col2.y*I;E=L;C=J.m_xf.R;var m=this.m_localAnchorB.x-J.m_sweep.localCenter.x,u=this.m_localAnchorB.y-J.m_sweep.localCenter.y;L=C.col1.x*m+C.col2.x*u;u=C.col1.y*m+C.col2.y*u;m=L;C=y.m_invMass;L=J.m_invMass;var D=y.m_invI,l=J.m_invI;this.m_mass.col1.x=C+L+I*I*D+u*u*l;this.m_mass.col2.x=-I*E*D-u*m*l;this.m_mass.col3.x=-I*D-u*l;this.m_mass.col1.y=
this.m_mass.col2.x;this.m_mass.col2.y=C+L+E*E*D+m*m*l;this.m_mass.col3.y=E*D+m*l;this.m_mass.col1.z=this.m_mass.col3.x;this.m_mass.col2.z=this.m_mass.col3.y;this.m_mass.col3.z=D+l;r.warmStarting?(this.m_impulse.x*=r.dtRatio,this.m_impulse.y*=r.dtRatio,this.m_impulse.z*=r.dtRatio,y.m_linearVelocity.x-=C*this.m_impulse.x,y.m_linearVelocity.y-=C*this.m_impulse.y,y.m_angularVelocity-=D*(E*this.m_impulse.y-I*this.m_impulse.x+this.m_impulse.z),J.m_linearVelocity.x+=L*this.m_impulse.x,J.m_linearVelocity.y+=
L*this.m_impulse.y,J.m_angularVelocity+=l*(m*this.m_impulse.y-u*this.m_impulse.x+this.m_impulse.z)):this.m_impulse.SetZero()};Z.prototype.SolveVelocityConstraints=function(r){r=this.m_bodyA;var y=this.m_bodyB,J=r.m_linearVelocity,C=r.m_angularVelocity,E=y.m_linearVelocity,I=y.m_angularVelocity,L=r.m_invMass,m=y.m_invMass,u=r.m_invI,D=y.m_invI;var l=r.m_xf.R;var q=this.m_localAnchorA.x-r.m_sweep.localCenter.x,t=this.m_localAnchorA.y-r.m_sweep.localCenter.y;var B=l.col1.x*q+l.col2.x*t;t=l.col1.y*q+
l.col2.y*t;q=B;l=y.m_xf.R;var H=this.m_localAnchorB.x-y.m_sweep.localCenter.x,M=this.m_localAnchorB.y-y.m_sweep.localCenter.y;B=l.col1.x*H+l.col2.x*M;M=l.col1.y*H+l.col2.y*M;H=B;l=E.x-I*M-J.x+C*t;B=E.y+I*H-J.y-C*q;var K=I-C,R=new f;this.m_mass.Solve33(R,-l,-B,-K);this.m_impulse.Add(R);J.x-=L*R.x;J.y-=L*R.y;C-=u*(q*R.y-t*R.x+R.z);E.x+=m*R.x;E.y+=m*R.y;I+=D*(H*R.y-M*R.x+R.z);r.m_angularVelocity=C;y.m_angularVelocity=I};Z.prototype.SolvePositionConstraints=function(r){r=this.m_bodyA;var y=this.m_bodyB;
var J=r.m_xf.R;var C=this.m_localAnchorA.x-r.m_sweep.localCenter.x,E=this.m_localAnchorA.y-r.m_sweep.localCenter.y;var I=J.col1.x*C+J.col2.x*E;E=J.col1.y*C+J.col2.y*E;C=I;J=y.m_xf.R;var L=this.m_localAnchorB.x-y.m_sweep.localCenter.x,m=this.m_localAnchorB.y-y.m_sweep.localCenter.y;I=J.col1.x*L+J.col2.x*m;m=J.col1.y*L+J.col2.y*m;L=I;J=r.m_invMass;I=y.m_invMass;var u=r.m_invI,D=y.m_invI,l=y.m_sweep.c.x+L-r.m_sweep.c.x-C,q=y.m_sweep.c.y+m-r.m_sweep.c.y-E,t=y.m_sweep.a-r.m_sweep.a-this.m_referenceAngle,
B=10*a.b2_linearSlop,H=Math.sqrt(l*l+q*q),M=d.Abs(t);H>B&&(u*=1,D*=1);this.m_mass.col1.x=J+I+E*E*u+m*m*D;this.m_mass.col2.x=-E*C*u-m*L*D;this.m_mass.col3.x=-E*u-m*D;this.m_mass.col1.y=this.m_mass.col2.x;this.m_mass.col2.y=J+I+C*C*u+L*L*D;this.m_mass.col3.y=C*u+L*D;this.m_mass.col1.z=this.m_mass.col3.x;this.m_mass.col2.z=this.m_mass.col3.y;this.m_mass.col3.z=u+D;B=new f;this.m_mass.Solve33(B,-l,-q,-t);r.m_sweep.c.x-=J*B.x;r.m_sweep.c.y-=J*B.y;r.m_sweep.a-=u*(C*B.y-E*B.x+B.z);y.m_sweep.c.x+=I*B.x;y.m_sweep.c.y+=
I*B.y;y.m_sweep.a+=D*(L*B.y-m*B.x+B.z);r.SynchronizeTransform();y.SynchronizeTransform();return H<=a.b2_linearSlop&&M<=a.b2_angularSlop};Box2D$$module$js$box2d$Box2D.inherit(aa,Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef);aa.prototype.__super=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef.prototype;aa.b2WeldJointDef=function(){Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this,arguments);this.localAnchorA=new e;this.localAnchorB=new e};aa.prototype.b2WeldJointDef=
function(){this.__super.b2JointDef.call(this);this.type=z.e_weldJoint;this.referenceAngle=0};aa.prototype.Initialize=function(r,y,J){this.bodyA=r;this.bodyB=y;this.localAnchorA.SetV(this.bodyA.GetLocalPoint(J));this.localAnchorB.SetV(this.bodyB.GetLocalPoint(J));this.referenceAngle=this.bodyB.GetAngle()-this.bodyA.GetAngle()}})();
(function(){var a=Box2D$$module$js$box2d$Box2D.Dynamics.b2DebugDraw;a.b2DebugDraw=function(){this.m_xformScale=this.m_fillAlpha=this.m_alpha=this.m_lineThickness=this.m_drawScale=1;var b=this;this.m_sprite={graphics:{clear:function(){b.m_ctx.clearRect(0,0,b.m_ctx.canvas.width,b.m_ctx.canvas.height)}}}};a.prototype._color=function(b,c){return"rgba("+((b&16711680)>>16)+","+((b&65280)>>8)+","+(b&255)+","+c+")"};a.prototype.b2DebugDraw=function(){this.m_drawFlags=0};a.prototype.SetFlags=function(b){void 0===
b&&(b=0);this.m_drawFlags=b};a.prototype.GetFlags=function(){return this.m_drawFlags};a.prototype.AppendFlags=function(b){void 0===b&&(b=0);this.m_drawFlags|=b};a.prototype.ClearFlags=function(b){void 0===b&&(b=0);this.m_drawFlags&=~b};a.prototype.SetSprite=function(b){this.m_ctx=b};a.prototype.GetSprite=function(){return this.m_ctx};a.prototype.SetDrawScale=function(b){void 0===b&&(b=0);this.m_drawScale=b};a.prototype.GetDrawScale=function(){return this.m_drawScale};a.prototype.SetLineThickness=
function(b){void 0===b&&(b=0);this.m_lineThickness=b;this.m_ctx.strokeWidth=b};a.prototype.GetLineThickness=function(){return this.m_lineThickness};a.prototype.SetAlpha=function(b){void 0===b&&(b=0);this.m_alpha=b};a.prototype.GetAlpha=function(){return this.m_alpha};a.prototype.SetFillAlpha=function(b){void 0===b&&(b=0);this.m_fillAlpha=b};a.prototype.GetFillAlpha=function(){return this.m_fillAlpha};a.prototype.SetXFormScale=function(b){void 0===b&&(b=0);this.m_xformScale=b};a.prototype.GetXFormScale=
function(){return this.m_xformScale};a.prototype.DrawPolygon=function(b,c,d){if(c){var e=this.m_ctx,f=this.m_drawScale;e.beginPath();e.strokeStyle=this._color(d.color,this.m_alpha);e.moveTo(b[0].x*f,b[0].y*f);for(d=1;d<c;d++)e.lineTo(b[d].x*f,b[d].y*f);e.lineTo(b[0].x*f,b[0].y*f);e.closePath();e.stroke()}};a.prototype.DrawSolidPolygon=function(b,c,d){if(c){var e=this.m_ctx,f=this.m_drawScale;e.beginPath();e.strokeStyle=this._color(d.color,this.m_alpha);e.fillStyle=this._color(d.color,this.m_fillAlpha);
e.moveTo(b[0].x*f,b[0].y*f);for(d=1;d<c;d++)e.lineTo(b[d].x*f,b[d].y*f);e.lineTo(b[0].x*f,b[0].y*f);e.closePath();e.fill();e.stroke()}};a.prototype.DrawCircle=function(b,c,d){if(c){var e=this.m_ctx,f=this.m_drawScale;e.beginPath();e.strokeStyle=this._color(d.color,this.m_alpha);e.arc(b.x*f,b.y*f,c*f,0,2*Math.PI,!0);e.closePath();e.stroke()}};a.prototype.DrawSolidCircle=function(b,c,d,e){if(c){var f=this.m_ctx,h=this.m_drawScale,g=b.x*h,k=b.y*h;f.moveTo(0,0);f.beginPath();f.strokeStyle=this._color(e.color,
this.m_alpha);f.fillStyle=this._color(e.color,this.m_fillAlpha);f.arc(g,k,c*h,0,2*Math.PI,!0);f.moveTo(g,k);f.lineTo((b.x+d.x*c)*h,(b.y+d.y*c)*h);f.closePath();f.fill();f.stroke()}};a.prototype.DrawSegment=function(b,c,d){var e=this.m_ctx,f=this.m_drawScale;e.strokeStyle=this._color(d.color,this.m_alpha);e.beginPath();e.moveTo(b.x*f,b.y*f);e.lineTo(c.x*f,c.y*f);e.closePath();e.stroke()};a.prototype.DrawTransform=function(b){var c=this.m_ctx,d=this.m_drawScale;c.beginPath();c.strokeStyle=this._color(16711680,
this.m_alpha);c.moveTo(b.position.x*d,b.position.y*d);c.lineTo((b.position.x+this.m_xformScale*b.R.col1.x)*d,(b.position.y+this.m_xformScale*b.R.col1.y)*d);c.strokeStyle=this._color(65280,this.m_alpha);c.moveTo(b.position.x*d,b.position.y*d);c.lineTo((b.position.x+this.m_xformScale*b.R.col2.x)*d,(b.position.y+this.m_xformScale*b.R.col2.y)*d);c.closePath();c.stroke()}})();var i$$module$js$box2d$Box2D;for(i$$module$js$box2d$Box2D=0;i$$module$js$box2d$Box2D<Box2D$$module$js$box2d$Box2D.postDefs.length;++i$$module$js$box2d$Box2D)Box2D$$module$js$box2d$Box2D.postDefs[i$$module$js$box2d$Box2D]();
delete Box2D$$module$js$box2d$Box2D.postDefs;
const Collision$$module$js$box2d$Box2D=Box2D$$module$js$box2d$Box2D.Collision,Shapes$$module$js$box2d$Box2D=Box2D$$module$js$box2d$Box2D.Collision.Shapes,b2CircleShape$$module$js$box2d$Box2D=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2CircleShape,b2PolygonShape$$module$js$box2d$Box2D=Box2D$$module$js$box2d$Box2D.Collision.Shapes.b2PolygonShape,Common$$module$js$box2d$Box2D=Box2D$$module$js$box2d$Box2D.Common,b2Vec2$$module$js$box2d$Box2D=Box2D$$module$js$box2d$Box2D.Common.Math.b2Vec2,Dynamics$$module$js$box2d$Box2D=
Box2D$$module$js$box2d$Box2D.Dynamics,Contacts$$module$js$box2d$Box2D=Box2D$$module$js$box2d$Box2D.Dynamics.Contacts,Controllers$$module$js$box2d$Box2D=Box2D$$module$js$box2d$Box2D.Dynamics.Controllers,b2World$$module$js$box2d$Box2D=Box2D$$module$js$box2d$Box2D.Dynamics.b2World,b2FixtureDef$$module$js$box2d$Box2D=Box2D$$module$js$box2d$Box2D.Dynamics.b2FixtureDef,b2Body$$module$js$box2d$Box2D=Box2D$$module$js$box2d$Box2D.Dynamics.b2Body,b2BodyDef$$module$js$box2d$Box2D=Box2D$$module$js$box2d$Box2D.Dynamics.b2BodyDef,
Joints$$module$js$box2d$Box2D=Box2D$$module$js$box2d$Box2D.Dynamics.Joints,b2RevoluteJointDef$$module$js$box2d$Box2D=Box2D$$module$js$box2d$Box2D.Dynamics.Joints.b2RevoluteJointDef;var module$js$box2d$Box2D={};module$js$box2d$Box2D.Box2D=Box2D$$module$js$box2d$Box2D;module$js$box2d$Box2D.Collision=Collision$$module$js$box2d$Box2D;module$js$box2d$Box2D.Common=Common$$module$js$box2d$Box2D;module$js$box2d$Box2D.Contacts=Contacts$$module$js$box2d$Box2D;module$js$box2d$Box2D.Controllers=Controllers$$module$js$box2d$Box2D;
module$js$box2d$Box2D.Dynamics=Dynamics$$module$js$box2d$Box2D;module$js$box2d$Box2D.Joints=Joints$$module$js$box2d$Box2D;module$js$box2d$Box2D.Shapes=Shapes$$module$js$box2d$Box2D;module$js$box2d$Box2D.b2Body=b2Body$$module$js$box2d$Box2D;module$js$box2d$Box2D.b2BodyDef=b2BodyDef$$module$js$box2d$Box2D;module$js$box2d$Box2D.b2CircleShape=b2CircleShape$$module$js$box2d$Box2D;module$js$box2d$Box2D.b2FixtureDef=b2FixtureDef$$module$js$box2d$Box2D;module$js$box2d$Box2D.b2PolygonShape=b2PolygonShape$$module$js$box2d$Box2D;
module$js$box2d$Box2D.b2RevoluteJointDef=b2RevoluteJointDef$$module$js$box2d$Box2D;module$js$box2d$Box2D.b2Vec2=b2Vec2$$module$js$box2d$Box2D;module$js$box2d$Box2D.b2World=b2World$$module$js$box2d$Box2D;class KeyPress$$module$js$KeyPress{constructor(a){this.elm=a;this.oKeyCodeStates={};this.oKeyStates={};this.oListeners={onKey:{},onKeyCode:{},onKeyCodeChange:{},onKeyChange:{},onKeyCodePress:{},onKeyPress:{}};this._keydown=this._onKeyDown.bind(this);a.addEventListener("keydown",this._keydown);this._keyup=this._onKeyUp.bind(this);a.addEventListener("keyup",this._keyup)}processKeys(){for(let a in this.oListeners.onKeyCode)for(let b of this.oListeners.onKeyCode[a]||[])b(this.oKeyCodeStates[a],a);for(let a in this.oListeners.onKey)for(let b of this.oListeners.onKey[a]||
[])b(this.oKeyStates[a],a)}onKey(a,b){this._bindKeyCodeEvent("onKey",a,b);return this}onKeyCode(a,b){this._bindKeyCodeEvent("onKeyCode",a,b);return this}onKeyCodeChange(a,b){this._bindKeyCodeEvent("onKeyCodeChange",a,b);return this}onKeyChange(a,b){this._bindKeyEvent("onKeyChange",a,b);return this}onKeyPress(a,b){this._bindKeyEvent("onKeyPress",a,b);return this}onKeyCodePress(a,b){this._bindKeyCodeEvent("onKeyCodePress",a,b);return this}getKeyState(a){return this.oKeyStates[a]}getKeyCodeState(a){return this.oKeyCodeStates[a]}unBind(){this.elm.removeEventListener("keyup",
this._keyup);this.elm.removeEventListener("keydown",this._keydown)}_onKeyDown(a){this._keyActivity(a,KeyPress$$module$js$KeyPress.DOWN);console.debug(a.key+"\u25bc")}_onKeyUp(a){let b=a.keyCode||a.code;if(this.oKeyCodeStates[b]!==KeyPress$$module$js$KeyPress.UP)for(let c of this.oListeners.onKeyCodePress[b]||[])c(KeyPress$$module$js$KeyPress.UP,b);if(this.oKeyStates[a.key]!==KeyPress$$module$js$KeyPress.UP)for(let c of this.oListeners.onKeyPress[a.key]||[])c(KeyPress$$module$js$KeyPress.UP,a.key);
this._keyActivity(a,KeyPress$$module$js$KeyPress.UP);console.debug(a.key+"\u25b2")}_keyActivity(a,b){let c=a.keyCode||a.code;if(this.oKeyCodeStates[c]!==b)for(let d of this.oListeners.onKeyCodeChange[c]||[])d(b,c);if(this.oKeyStates[a.key]!==b)for(let d of this.oListeners.onKeyChange[a.key]||[])d(b,a.key);this.oKeyCodeStates[c]=b;this.oKeyStates[a.key]=b}_bindKeyEvent(a,b,c){this.oListeners[a][b]?this.oListeners[a][b].push(c):this.oListeners[a][b]=[c];return()=>{let d=this.oListeners[a][b].indexOf(c);
this.oListeners[a][b].splice(d,1);return this}}_bindKeyCodeEvent(a,b,c){this.oListeners[a][b]?this.oListeners[a][b].push(c):this.oListeners[a][b]=[c];return()=>{let d=this.oListeners[a][b].indexOf(c);this.oListeners[a][b].splice(d,1);return this}}static bindKeys(a,b=window){let c=new KeyPress$$module$js$KeyPress(b);a.forEach(d=>{c._bindKeyEvent.apply(c,d)});return c}static bindKeyCodes(a){let b=new KeyPress$$module$js$KeyPress;a.forEach(c=>{b._bindKeyCodeEvent.apply(b,c)});return b}}
KeyPress$$module$js$KeyPress.DOWN=!0;KeyPress$$module$js$KeyPress.UP=!1;function BindKeyWord$$module$js$KeyPress(a,b){this.setElement(a);this.nTimeMS=parseInt(b)||BindKeyWord$$module$js$KeyPress.DELAY_DEFAULT}BindKeyWord$$module$js$KeyPress.DELAY_DEFAULT=500;BindKeyWord$$module$js$KeyPress.WAIT_TIME=BindKeyWord$$module$js$KeyPress.DELAY_DEFAULT+100;
BindKeyWord$$module$js$KeyPress.prototype={bindCharsToKeyPresses:function(a,b,c,d){function e(){var k=BindKeyWord$$module$js$KeyPress.WAIT_TIME;clearTimeout(g);g=setTimeout(function(){f=[];clearTimeout(g)},k)}var f=[],h=this,g=0;this.oElm.addEventListener("keypress",function(k){var n=f.length;if(k.charCode===a.charCodeAt(n)){f.push({pressedAt:(new Date).getTime(),key:String.fromCharCode(k.charCode)});n=f.length;if(2<=n){k=parseInt(f[n-1].pressedAt-f[n-2].pressedAt);if(isNaN(k)||k>h.nTimeMS)clearTimeout(g),
f=[];if(f.length===a.length){d?b.apply(d,c):b(c);clearTimeout(g);f=[];return}}e()}else f=[],clearTimeout(g)})},setElement:function(a){if(a.addEventListener)this.oElm=a;else throw"Can not attach event listener to this element."+a;}};var module$js$KeyPress={};module$js$KeyPress.BindKeyWord=BindKeyWord$$module$js$KeyPress;module$js$KeyPress.KeyPress=KeyPress$$module$js$KeyPress;const gravity$$module$js$main=new b2Vec2$$module$js$box2d$Box2D(0,0),DO_SLEEP$$module$js$main=!0,translate$$module$js$main={x:0,y:0},f$$module$js$main=100,scale$$module$js$main=25,timeStep$$module$js$main=1/60,iteration$$module$js$main=1,world$$module$js$main=new b2World$$module$js$box2d$Box2D(gravity$$module$js$main,DO_SLEEP$$module$js$main),renderer$$module$js$main=new WebGLRenderer$$module$node_modules$three$build$three_module,loader$$module$js$main=new OBJLoader$$module$node_modules$three$examples$jsm$loaders$OBJLoader,
scene$$module$js$main=new Scene$$module$node_modules$three$build$three_module,camera$$module$js$main=new PerspectiveCamera$$module$node_modules$three$build$three_module(50,1,1,1E4),mainLight$$module$js$main=new PointLight$$module$node_modules$three$build$three_module(16777215,1,500,2),ambientLight$$module$js$main=new AmbientLight$$module$node_modules$three$build$three_module(15790320,.5),container$$module$js$main=document.body.querySelector("#main-container"),spaceshipMaterial$$module$js$main=new MeshStandardMaterial$$module$node_modules$three$build$three_module({map:(new TextureLoader$$module$node_modules$three$build$three_module).load("textures/spaceships/arrow_thing.png"),
roughness:.8}),material$$module$js$main=new MeshStandardMaterial$$module$node_modules$three$build$three_module({map:(new TextureLoader$$module$node_modules$three$build$three_module).load("textures/checker/redwhite.jpg"),roughness:.8}),floor$$module$js$main=createWall$$module$js$main({x:0,y:80},{width:110,height:.5,depth:6}),ceiling$$module$js$main=createWall$$module$js$main({x:0,y:-80},{width:110,height:.5,depth:6}),leftWall$$module$js$main=createWall$$module$js$main({x:-109.728,y:0},{width:.5,height:80,
depth:6}),rightWall$$module$js$main=createWall$$module$js$main({x:109.728,y:0},{width:.5,height:80,depth:6}),box1$$module$js$main=createPlayer$$module$js$main({x:0,y:5},{width:4,height:1,depth:4},material$$module$js$main),box2$$module$js$main=createPlayer$$module$js$main({x:0,y:0},{width:2,height:1,depth:1},spaceshipMaterial$$module$js$main),lightBall$$module$js$main=new Mesh$$module$node_modules$three$build$three_module(new OctahedronGeometry$$module$node_modules$three$build$three_module(.5,2),new MeshBasicMaterial$$module$node_modules$three$build$three_module({color:16777215})),
rayCaster$$module$js$main=new Raycaster$$module$node_modules$three$build$three_module;let canvas$$module$js$main,balls$$module$js$main=[],keyPress$$module$js$main=null,cameraMaximumDimension$$module$js$main=1,hasGravity$$module$js$main=!0;scene$$module$js$main.add(ceiling$$module$js$main);scene$$module$js$main.add(floor$$module$js$main);scene$$module$js$main.add(leftWall$$module$js$main);scene$$module$js$main.add(rightWall$$module$js$main);box1$$module$js$main.physics.SetFixedRotation(!1);scene$$module$js$main.add(box1$$module$js$main);
scene$$module$js$main.add(box2$$module$js$main);scene$$module$js$main.add(lightBall$$module$js$main);camera$$module$js$main.zoom=.3;renderer$$module$js$main.shadowMap.enabled=!0;renderer$$module$js$main.shadowMap.type=PCFSoftShadowMap$$module$node_modules$three$build$three_module;container$$module$js$main.appendChild(renderer$$module$js$main.domElement);canvas$$module$js$main=document.body.querySelector("canvas");lightBall$$module$js$main.position.set(0,0,-5);
mainLight$$module$js$main.position.set(0,0,-5);mainLight$$module$js$main.castShadow=!0;mainLight$$module$js$main.shadow.mapSize.width=512;mainLight$$module$js$main.shadow.mapSize.height=512;scene$$module$js$main.add(mainLight$$module$js$main);scene$$module$js$main.add(ambientLight$$module$js$main);
loader$$module$js$main.load("meshes/soccer_clients.obj",function(a){a.scale.set(.02,.02,.02);a.position.x=0;a.position.y=0;a.castShadow=!0;a.receiveShadow=!0},function(a){console.log(a.loaded/a.total*100+"% loaded")},function(){console.error("An error happened")});
keyPress$$module$js$main=KeyPress$$module$js$KeyPress.bindKeys([["onKey","w",a=>{if(a){let b=box2$$module$js$main.physics.GetAngle();keyChange$$module$js$main("w",a,box2$$module$js$main,new b2Vec2$$module$js$box2d$Box2D(Math.cos(b)*f$$module$js$main,Math.sin(b)*f$$module$js$main))}}],["onKey","s",a=>{if(a){let b=box2$$module$js$main.physics.GetAngle();keyChange$$module$js$main("w",a,box2$$module$js$main,new b2Vec2$$module$js$box2d$Box2D(Math.cos(b)*-f$$module$js$main,Math.sin(b)*-f$$module$js$main))}}],
["onKey","l",a=>{a&&turnBox$$module$js$main(box2$$module$js$main,.1)}],["onKey","d",a=>{a&&turnBox$$module$js$main(box2$$module$js$main,.1)}],["onKey","D",a=>{a&&turnBox$$module$js$main(box2$$module$js$main,.1)}],["onKey","j",a=>{a&&turnBox$$module$js$main(box2$$module$js$main,-.1)}],["onKey","a",a=>{a&&turnBox$$module$js$main(box2$$module$js$main,-.1)}],["onKey","A",a=>{a&&turnBox$$module$js$main(box2$$module$js$main,-.1)}],["onKey","i",a=>{if(a){let b=box2$$module$js$main.physics.GetAngle();keyChange$$module$js$main("i",
a,box2$$module$js$main,new b2Vec2$$module$js$box2d$Box2D(Math.cos(b)*f$$module$js$main*10,Math.sin(b)*f$$module$js$main*10))}}],["onKey","k",a=>{if(a){let b=box2$$module$js$main.physics.GetAngle();keyChange$$module$js$main("k",a,box2$$module$js$main,new b2Vec2$$module$js$box2d$Box2D(Math.cos(b)*-f$$module$js$main*10,Math.sin(b)*-f$$module$js$main*10))}}],["onKey","W",a=>{if(a){let b=box2$$module$js$main.physics.GetAngle();keyChange$$module$js$main("W",a,box2$$module$js$main,new b2Vec2$$module$js$box2d$Box2D(Math.cos(b)*
f$$module$js$main*10,Math.sin(b)*f$$module$js$main*10))}}],["onKey","S",a=>{if(a){let b=box2$$module$js$main.physics.GetAngle();keyChange$$module$js$main("S",a,box2$$module$js$main,new b2Vec2$$module$js$box2d$Box2D(Math.cos(b)*-f$$module$js$main*10,Math.sin(b)*-f$$module$js$main*10))}}],["onKey","ArrowLeft",a=>{a&&(lightBall$$module$js$main.position.x=mainLight$$module$js$main.position.x-=.1)}],["onKey","ArrowRight",a=>{a&&(lightBall$$module$js$main.position.x=mainLight$$module$js$main.position.x+=
.1)}],["onKey","ArrowUp",a=>{a&&(lightBall$$module$js$main.position.y=mainLight$$module$js$main.position.y+=.1)}],["onKey","ArrowDown",a=>{a&&(lightBall$$module$js$main.position.y=mainLight$$module$js$main.position.y-=.1)}],["onKey"," ",a=>{a&&600<performance.now()-box2$$module$js$main.physics.lastFired&&fireBullet$$module$js$main()}],["onKey","p",a=>{a&&0<performance.now()-box2$$module$js$main.physics.lastFired&&fireBullet$$module$js$main()}],["onKeyPress","g",()=>{(hasGravity$$module$js$main=!hasGravity$$module$js$main)?
world$$module$js$main.SetGravity(gravity$$module$js$main):world$$module$js$main.SetGravity(new b2Vec2$$module$js$box2d$Box2D(0,0))}],["onKeyPress","r",()=>{box1$$module$js$main.physics.SetPosition({x:0,y:5});box1$$module$js$main.physics.SetAngle(0);box1$$module$js$main.physics.SetLinearVelocity({x:0,y:0});box1$$module$js$main.physics.SetAngularVelocity();box2$$module$js$main.physics.SetPosition({x:0,y:0});box2$$module$js$main.physics.SetAngle(0);box2$$module$js$main.physics.SetLinearVelocity({x:0,
y:0});box2$$module$js$main.physics.SetAngularVelocity();let a;for(;a=balls$$module$js$main.pop();)removeBall$$module$js$main(a)}]]);resizeCanvas$$module$js$main();window.addEventListener("resize",resizeCanvas$$module$js$main);
canvas$$module$js$main.addEventListener("click",a=>{a.preventDefault();var b=new Vector2$$module$node_modules$three$build$three_module;b.x=(a.clientX-canvas$$module$js$main.offsetLeft)/canvas$$module$js$main.width*2-1;b.y=2*-((a.clientY-canvas$$module$js$main.offsetTop)/canvas$$module$js$main.height)+1;rayCaster$$module$js$main.setFromCamera(b,camera$$module$js$main);(a=rayCaster$$module$js$main.intersectObjects(scene$$module$js$main.children,!0)[0])?(b=Math.sqrt(a.point.x*a.point.x+a.point.y*a.point.y),
a.object.physics.ApplyImpulse(new b2Vec2$$module$js$box2d$Box2D(a.point.x/b*-50,a.point.y/b*50),a.object.physics.GetWorldCenter())):balls$$module$js$main.push(createBouncyBall$$module$js$main(rayCaster$$module$js$main.ray.x,rayCaster$$module$js$main.ray.y))});
(function animate(){keyPress$$module$js$main.processKeys();world$$module$js$main.Step(timeStep$$module$js$main,iteration$$module$js$main);world$$module$js$main.ClearForces();let b=box1$$module$js$main.physics.GetPosition(),c=box1$$module$js$main.physics.GetAngle();box1$$module$js$main.position.x=b.x;box1$$module$js$main.position.y=-b.y;box1$$module$js$main.rotation.z=-c;b=box2$$module$js$main.physics.GetPosition();c=box2$$module$js$main.physics.GetAngle();box2$$module$js$main.position.x=b.x;box2$$module$js$main.position.y=
-b.y;box2$$module$js$main.rotation.z=-c;balls$$module$js$main.forEach(d=>{let e=d.physics.GetPosition(),f=d.physics.GetAngle();d.position.x=e.x;d.position.y=-e.y;d.rotation.z=-f});camera$$module$js$main.position.x=b.x;camera$$module$js$main.position.y=-b.y;renderer$$module$js$main.render(scene$$module$js$main,camera$$module$js$main);requestAnimationFrame(animate)})();
function resizeCanvas$$module$js$main(){renderer$$module$js$main.setSize(container$$module$js$main.offsetWidth,container$$module$js$main.offsetHeight);var a=renderer$$module$js$main.getSize(new Vector2$$module$node_modules$three$build$three_module),b=cameraMaximumDimension$$module$js$main=Math.max(a.x,a.y),c=cameraMaximumDimension$$module$js$main;camera$$module$js$main.aspect=1;camera$$module$js$main.setViewOffset(b,c,(b-a.x)/2,(c-a.y)/2,a.x,a.y);camera$$module$js$main.updateProjectionMatrix();updateCameraPosition$$module$js$main()}
function keyChange$$module$js$main(a,b,c,d){b&&c.physics.ApplyForce(d,c.physics.GetWorldCenter())}function turnBox$$module$js$main(a,b){a=a.physics;a.SetAngle(a.GetAngle()+b);a.SetAngularVelocity(0)}function updateCameraPosition$$module$js$main(){camera$$module$js$main.position.set(translate$$module$js$main.x,-translate$$module$js$main.y,1.21*cameraMaximumDimension$$module$js$main/scale$$module$js$main)}
function removeBall$$module$js$main(a){world$$module$js$main.DestroyBody(a.physics);scene$$module$js$main.remove(a);return a}function createBouncyBall$$module$js$main(a=0,b=0,c,d){let e=createBallMesh$$module$js$main(a,b);a=createBallPhysics$$module$js$main(a,b,c,d);e.physics=a;return e}
function fireBullet$$module$js$main(){let a=box2$$module$js$main.physics.GetAngle(),b=box2$$module$js$main.physics.GetPosition();var c=f$$module$js$main;c=new b2Vec2$$module$js$box2d$Box2D(Math.cos(a)*c,Math.sin(a)*c);let d=box2$$module$js$main.physics.GetLinearVelocity(),e=createBullet$$module$js$main({x:Math.cos(a)+b.x,y:Math.sin(a)+b.y},{width:.5,height:.5,depth:.5},c,d);box2$$module$js$main.physics.ApplyImpulse(new b2Vec2$$module$js$box2d$Box2D(-.5*c.x,-.5*c.y),box2$$module$js$main.physics.GetWorldCenter());
scene$$module$js$main.add(e);balls$$module$js$main.push(e);setTimeout(()=>{removeBall$$module$js$main(e)},2E3);box2$$module$js$main.physics.lastFired=performance.now()}
function createBallMesh$$module$js$main(a=0,b=0){var c=new OctahedronGeometry$$module$node_modules$three$build$three_module(1,2),d=(new TextureLoader$$module$node_modules$three$build$three_module).load("textures/checker/redwhite.jpg",function(e){e.wrapS=e.wrapT=RepeatWrapping$$module$node_modules$three$build$three_module;e.offset.set(0,0);e.repeat.set(4,4)});d=new MeshStandardMaterial$$module$node_modules$three$build$three_module({map:d,roughness:.8});c=new Mesh$$module$node_modules$three$build$three_module(c,
d);c.material=d;c.castShadow=!0;c.receiveShadow=!0;c.position.set(a,b,0);scene$$module$js$main.add(c);return c}
function createBallPhysics$$module$js$main(a=0,b=0,c,d){let e=new b2CircleShape$$module$js$box2d$Box2D(1),f=new b2FixtureDef$$module$js$box2d$Box2D,h=new b2BodyDef$$module$js$box2d$Box2D;f.shape=e;f.density=1;f.friction=Math.randRange(.5,1);f.restitution=Math.randRange(0,1);h.type=b2Body$$module$js$box2d$Box2D.b2_dynamicBody;h.position={x:a,y:b};a=world$$module$js$main.CreateBody(h);a.CreateFixture(f);d&&a.SetLinearVelocity(d);c&&a.ApplyImpulse(c,a.GetWorldCenter());return a}
function createBullet$$module$js$main(a,b,c,d){let e=createBulletMesh$$module$js$main({x:a.x,y:-a.y},{width:2*b.width,height:2*b.height,depth:2*b.depth});a=createBulletPhysics$$module$js$main(a,b,c,d);e.physics=a;return e}
function createBulletMesh$$module$js$main(a,b){var c=(new TextureLoader$$module$node_modules$three$build$three_module).load("textures/bullet/bullet.png",function(d){d.offset.set(0,0)});c=new MeshStandardMaterial$$module$node_modules$three$build$three_module({map:c,roughness:.8});b=new Mesh$$module$node_modules$three$build$three_module(new BoxGeometry$$module$node_modules$three$build$three_module(b.width,b.height,b.depth||1),c);b.position.x=a.x;b.position.y=a.y;b.castShadow=!0;b.receiveShadow=!0;return b}
function createBulletPhysics$$module$js$main(a,b,c,d){let e=new b2PolygonShape$$module$js$box2d$Box2D,f=new b2FixtureDef$$module$js$box2d$Box2D,h=new b2BodyDef$$module$js$box2d$Box2D;e.SetAsOrientedBox(b.width,b.height,{x:0,y:0},0);f.shape=e;f.density=1;f.friction=.2;f.restitution=.8;h.type=Box2D$$module$js$box2d$Box2D.Dynamics.b2Body.b2_dynamicBody;h.position=a;h.angle=0;a=world$$module$js$main.CreateBody(h);a.CreateFixture(f);d&&a.SetLinearVelocity(d);c&&a.ApplyImpulse(c,a.GetWorldCenter());return a}
function createPlayer$$module$js$main(a,b,c){a=createPlayerPhysics$$module$js$main(a,b);b=createPlayerMesh$$module$js$main({x:a.GetPosition().x,y:-a.GetPosition().y},{width:2*b.width,height:2*b.height,depth:2*b.depth},c);b.physics=a;return b}
function createPlayerPhysics$$module$js$main(a,b){let c=new b2PolygonShape$$module$js$box2d$Box2D,d=new b2FixtureDef$$module$js$box2d$Box2D,e=new b2BodyDef$$module$js$box2d$Box2D;c.SetAsOrientedBox(b.width,b.height,{x:0,y:0},0);d.shape=c;d.density=1;d.friction=.5;d.restitution=.5;e.type=Box2D$$module$js$box2d$Box2D.Dynamics.b2Body.b2_dynamicBody;e.position=a;e.angle=0;e.linearDamping=f$$module$js$main/1E3;a=world$$module$js$main.CreateBody(e);a.CreateFixture(d);a.SetFixedRotation(!0);a.lastFired=
performance.now();return a}function createPlayerMesh$$module$js$main(a,b,c){b=new Mesh$$module$node_modules$three$build$three_module(new BoxGeometry$$module$node_modules$three$build$three_module(b.width,b.height,b.depth||1),c);b.position.x=a.x;b.position.y=a.y;b.castShadow=!0;b.receiveShadow=!0;return b}
function createWall$$module$js$main(a,b){a=createWallPhysics$$module$js$main(a,b);b=createWallMesh$$module$js$main({x:a.GetPosition().x,y:-a.GetPosition().y},{width:2*b.width,height:2*b.height,depth:2*b.depth});b.physics=a;return b}
function createWallMesh$$module$js$main(a,b){var c=(new TextureLoader$$module$node_modules$three$build$three_module).load("textures/checker/redwhite.jpg");c=new MeshStandardMaterial$$module$node_modules$three$build$three_module({map:c,roughness:.8});b=new Mesh$$module$node_modules$three$build$three_module(new BoxGeometry$$module$node_modules$three$build$three_module(b.width,b.height,b.depth),c);b.castShadow=!0;b.receiveShadow=!0;b.position.y=a.y;b.position.x=a.x;return b}
function createWallPhysics$$module$js$main(a,b){let c=new b2PolygonShape$$module$js$box2d$Box2D,d=new b2FixtureDef$$module$js$box2d$Box2D,e=new b2BodyDef$$module$js$box2d$Box2D;c.SetAsOrientedBox(b.width,b.height,{x:0,y:0},0);d.shape=c;d.density=1;d.friction=.5;d.restitution=.5;e.type=Box2D$$module$js$box2d$Box2D.Dynamics.b2Body.b2_staticBody;e.position=a;e.angle=0;a=world$$module$js$main.CreateBody(e);a.CreateFixture(d);return a}Math.randRange=function(a,b){return Math.random()*(b-a)+a};
var module$js$main={};
